using Dottest.Framework;
using NUnit.Framework;
using STEE.ISCS.OPCProxy;

namespace STEE.ISCS.OPCProxy.DotTest.Factories
{
    [TestFixture(), ObjectFactoryType()]
    public class OPCServerProxyFactory
    {
        [ObjectFactoryMethod]
        [HashCode("+7I6/A", "+IMqmQ")]
        public static OPCServerProxy CreateOPCServerProxy01()
        {
            OPCServerProxy oPCServerProxy = OPCServerProxy.GetInstance();
            return oPCServerProxy;
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestCreateOPCServerProxy01()
        {
            OPCServerProxy oPCServerProxy = CreateOPCServerProxy01();
            Assert.IsNotNull(oPCServerProxy);
        }

        [ObjectFactoryMethod]
        [HashCode("+7I6/A", "+7TT7A")]
        public static OPCServerProxy CreateOPCServerProxy02()
        {
            OPCServerProxy oPCServerProxy = (OPCServerProxy)ReflectionAccessor.Construct("STEE.ISCS.OPCProxy.OPCServerProxy");
            return oPCServerProxy;
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestCreateOPCServerProxy02()
        {
            OPCServerProxy oPCServerProxy = CreateOPCServerProxy02();
            Assert.IsNotNull(oPCServerProxy);
        }

    }
}
