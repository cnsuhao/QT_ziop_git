using Dottest.Framework;
using Dottest.Framework.RecordState;
using NUnit.Framework;
using OPCTrendLib;

namespace DotTest.OPCTrendLib
{
    [TestFixture()]
    public class GeneralFunctionTests
    {
        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestBroadcastPacket01()
        {
            GeneralFunction generalFunc = new GeneralFunction();
            System.Data.DataTable hostIPTable = new System.Data.DataTable();
            hostIPTable.Columns.Add("HOST_IP",typeof(System.String));
            hostIPTable.Rows.Add("127.0.0.1");
            int portNo= 6557;
            string messgae = "Testing broadcasr";
            string callingMod = "GeneralFunctionTests.TestBroadcastPacket01";
            //Test Procedure Call
            generalFunc.BroadcastPacket(portNo, messgae, callingMod, hostIPTable);
            //Post Condition Check
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestErr_BroadcastPacket01()
        {
            GeneralFunction generalFunc = new GeneralFunction();
            System.Data.DataTable hostIPTable = new System.Data.DataTable();
            hostIPTable.Columns.Add("HOST_IP", typeof(System.String));
            hostIPTable.Rows.Add("127.0.0.1");
            int portNo = 6557;
            string messgae = "Testing broadcasr";
            string callingMod = "GeneralFunctionTests.TestBroadcastPacket01";
            //Test Procedure Call
            generalFunc.BroadcastPacket(portNo, messgae, callingMod, hostIPTable);
            //Post Condition Check
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestBroadcastPacketSingleTarget01()
        {
            GeneralFunction generalFunc = new GeneralFunction();
            int portNo = 6557;
            string messgae = "Testing broadcast";
            string callingMod = "GeneralFunctionTests.TestBroadcastPacket01";
            //Test Procedure Call
            generalFunc.BroadcastPacketSingleTarget(portNo, messgae, callingMod, "127.0.0.1");
            //Post Condition Check
        }


        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestErr_BroadcastPacketSingleTarget01()
        {
            GeneralFunction generalFunc = new GeneralFunction();
            int portNo = 6557;
            string messgae = "Testing broadcast";
            string callingMod = "GeneralFunctionTests.TestBroadcastPacket01";
            //Test Procedure Call
            generalFunc.BroadcastPacketSingleTarget(portNo, messgae, callingMod, "127.0.0.1");
            //Post Condition Check
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestConvertBoolToData01()
        {
            GeneralFunction generalFunc = new GeneralFunction();           
            //Test Procedure Call
            string res = generalFunc.ConvertBoolToData(true);
            //Post Condition Check
            Assert.AreEqual("Y", res);

            //Test Procedure Call
            res = generalFunc.ConvertBoolToData(false);
            //Post Condition Check
            Assert.AreEqual("N", res);
        }



        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestConvertDataToBool01()
        {
            GeneralFunction generalFunc = new GeneralFunction();
            //Test Procedure Call
            bool bRet = generalFunc.ConvertDataToBool("Y");
            //Post Condition Check
            Assert.IsTrue(bRet);

            //Test Procedure Call
            bRet = generalFunc.ConvertDataToBool("N");
            //Post Condition Check
            Assert.IsFalse(bRet);

            //Test Procedure Call
            bRet = generalFunc.ConvertDataToBool("Yes");
            //Post Condition Check
            Assert.IsFalse(bRet);

            //Test Procedure Call
            bRet = generalFunc.ConvertDataToBool("XXX");
            //Post Condition Check
            Assert.IsFalse(bRet);
        }


        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestExecuteOracleNonQuery01()
        {
            GeneralFunction generalFunc = new GeneralFunction();
            string query = "update XX set YY=0";
            Oracle.DataAccess.Client.OracleConnection connection = new Oracle.DataAccess.Client.OracleConnection();
            //Test Procedure Call
            generalFunc.ExecuteOracleNonQuery(query, connection, "TestExecuteOracleNonQuery01");
            //Post Condition Check            
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestErr_ExecuteOracleNonQuery01()
        {
            GeneralFunction generalFunc = new GeneralFunction();
            string query = "update XX set YY=0";
            Oracle.DataAccess.Client.OracleConnection connection = new Oracle.DataAccess.Client.OracleConnection();
            //Test Procedure Call
            generalFunc.ExecuteOracleNonQuery(query, connection, "TestExecuteOracleNonQuery01");
            //Post Condition Check            
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestGetBinaryFile01()
        {
            GeneralFunction generalFunc = new GeneralFunction();
            //create temp file
            try
            {
                string filename = "C:\\Testing_siva23012013.txt";
                System.IO.FileStream fs = System.IO.File.Open(filename, System.IO.FileMode.CreateNew, System.IO.FileAccess.Write);
                System.IO.StreamWriter sw = new System.IO.StreamWriter(fs, System.Text.Encoding.UTF8);
                string sInput = "Hi, How are u?Whats UP!!";
                sw.WriteLine(sInput);
                sw.Close();
                sw = null;
                fs.Close();
                fs = null;
                //Test Procedure Call
                byte[] readBuf = generalFunc.GetBinaryFile(filename);
                //Post Condition Check 
          
                //delete temp file
                //GS Stub is not doing delete operation
                //System.IO.File.Delete(filename);
            }
            catch (System.Exception ex)
            {
            	
            }
        }


        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestIsBoolean01()
        {
            GeneralFunction generalFunc = new GeneralFunction();
            //Test Procedure Call
            bool ret = generalFunc.IsBoolean("true");
            //Post Condition Check            
            Assert.IsTrue(ret);

            //Test Procedure Call
            ret = generalFunc.IsBoolean("1");
            //Post Condition Check            
            Assert.IsFalse(ret);

            //Test Procedure Call
            ret = generalFunc.IsBoolean("0");
            //Post Condition Check            
            Assert.IsFalse(ret);


            //Test Procedure Call
            ret = generalFunc.IsBoolean("sss");
            //Post Condition Check            
            Assert.IsFalse(ret);

            //Test Procedure Call
            ret = generalFunc.IsBoolean("345");
            //Post Condition Check            
            Assert.IsFalse(ret);

        }


        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestIsNumeric01()
        {
            GeneralFunction generalFunc = new GeneralFunction();
            //Test Procedure Call
            bool ret = generalFunc.IsNumeric("true",System.Globalization.NumberStyles.Number);
            //Post Condition Check            
            Assert.IsFalse(ret);          
                        

            //Test Procedure Call
            ret = generalFunc.IsNumeric("345", System.Globalization.NumberStyles.Number);
            //Post Condition Check            
            Assert.IsTrue(ret);

        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestExecuteSQLNonQuery01()
        {
            GeneralFunction generalFunc = new GeneralFunction();
            generalFunc.sqlConnectionString = "User ID=IT271350_5;Database=192.168.123.41:3306/TRA_OCC;";
            string query = "update XX set YY=0";
            //Test Procedure Call
            //generalFunc.ExecuteSQLNonQuery(query, "TestExecuteSQLNonQuery01");
            //Post Condition Check            
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestErr_ExecuteSQLNonQuery01()
        {
            GeneralFunction generalFunc = new GeneralFunction();
            string query = "update XX set YY=0";
            //Test Procedure Call
            //generalFunc.ExecuteSQLNonQuery(query, "TestErr_ExecuteSQLNonQuery01");
            //Post Condition Check            
        }


        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestGetINIData01()
        {
            GeneralFunction generalFunc = new GeneralFunction();          
            //Test Procedure Call
            generalFunc.GetINIData("xx", "YY", "ddd", 255, "xxxttt");
            //Post Condition Check            
        }


        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestGetINIDataString01()
        {
            GeneralFunction generalFunc = new GeneralFunction();
            //Test Procedure Call
            generalFunc.GetINIDataString("xx", "YY", "ddd", 255, "xxxttt");
            //Post Condition Check            
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestGetIntFromQuery01()
        {
            GeneralFunction generalFunc = new GeneralFunction();
            Oracle.DataAccess.Client.OracleConnection localConnection = new Oracle.DataAccess.Client.OracleConnection("");
            Oracle.DataAccess.Client.OracleCommand command = new Oracle.DataAccess.Client.OracleCommand("UPDATE XX SET YY=ZZ", localConnection);
            //Test Procedure Call
            generalFunc.GetIntFromQuery(command, "TestGetIntFromQuery01");
            //Post Condition Check            
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestErr_GetIntFromQuery01()
        {
            GeneralFunction generalFunc = new GeneralFunction();
            Oracle.DataAccess.Client.OracleConnection localConnection = new Oracle.DataAccess.Client.OracleConnection("Data Source = C955;User Id = IT271350_5 ;Password = IT271350_5 ;");
            Oracle.DataAccess.Client.OracleCommand command = new Oracle.DataAccess.Client.OracleCommand("UPDATE OPC_DT_SAMPLE_GRP SET DELTA_VALUE=1;", localConnection);
            //Test Procedure Call
            generalFunc.GetIntFromQuery(command, "TestGetIntFromQuery01");
            //Post Condition Check            
        }


        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestWriteEventLog01()
        {
            GeneralFunction generalFunc = new GeneralFunction();
            Accessor generalFuncAccessor = ReflectionAccessor.Wrap(generalFunc);
            string pathString = System.IO.Path.Combine((string)generalFuncAccessor.GetField("configFolder"), "logs");
            bool directoryExists = System.IO.Directory.Exists(pathString);
            if(!directoryExists)
            {
                System.IO.Directory.CreateDirectory(pathString);
            }            
            //Test Procedure Call
            generalFunc.WriteEventLog("testinglog", "testModule");
            //Post Condition Check   

            //delete created folder
            System.IO.Directory.Delete(pathString, true);
            directoryExists = System.IO.Directory.Exists(pathString);

        }


        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestPreparePagingStatement01()
        {
            GeneralFunction generalFunc = new GeneralFunction();
            //Test Procedure Call
            string query = generalFunc.PreparePagingStatement("SELECT A FROM B", 0, 9);
            //Post Condition Check            
        }  



        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestGetTccHostIP01()
        {
            GeneralFunction generalFunc = new GeneralFunction();
            Oracle.DataAccess.Client.OracleConnection localConnection = new Oracle.DataAccess.Client.OracleConnection();
            //Test Procedure Call
            generalFunc.GetTccHostIP(localConnection, "TestGetTccHostIP01");           
            //Post Condition Check            
        }


        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestGetStringFromQuery01()
        {
            GeneralFunction generalFunc = new GeneralFunction();
            Oracle.DataAccess.Client.OracleConnection localConnection = new Oracle.DataAccess.Client.OracleConnection();
            //Test Procedure Call
            generalFunc.GetStringFromQuery("SELECT STRINGCOL FROM TABLE1", localConnection, "TestGetStringFromQuery01");
            //Post Condition Check            
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestGetSQLQuery10()
        {
            //Testing -- Exception thrown
            GeneralFunction generalFunc = new GeneralFunction();
            Oracle.DataAccess.Client.OracleConnection localConnection = new Oracle.DataAccess.Client.OracleConnection();
            //Test Procedure Call
            generalFunc.GetSQLQuery("sqlquery", "dATAsETnAME1", localConnection);
            //Post Condition Check            
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestGetSQLQuery11()
        {
            //Testing -- valid flow
            GeneralFunction generalFunc = new GeneralFunction();
            Oracle.DataAccess.Client.OracleConnection localConnection = new Oracle.DataAccess.Client.OracleConnection();
            //Test Procedure Call
            generalFunc.GetSQLQuery("sqlquery", "dATAsETnAME1", localConnection);
            //Post Condition Check            
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestGetSQLQuery02()
        {
            GeneralFunction generalFunc = new GeneralFunction();
            Oracle.DataAccess.Client.OracleConnection localConnection = new Oracle.DataAccess.Client.OracleConnection();
            //Test Procedure Call
            generalFunc.GetSQLQuery("Select * from Table1", localConnection);
            //Post Condition Check            
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestGetIntFromQuery03()
        {
            GeneralFunction generalFunc = new GeneralFunction();
            Oracle.DataAccess.Client.OracleConnection localConnection = new Oracle.DataAccess.Client.OracleConnection();
            //Test Procedure Call
            generalFunc.GetIntFromQuery("Select * from Table1", localConnection,"Callingmod");
            //Post Condition Check            
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestGetSingleStringFromQuery01()
        {
            GeneralFunction generalFunc = new GeneralFunction();
            Oracle.DataAccess.Client.OracleConnection localConnection = new Oracle.DataAccess.Client.OracleConnection();
            Oracle.DataAccess.Client.OracleCommand command = new Oracle.DataAccess.Client.OracleCommand("select pkey from entity", localConnection);
            //Test Procedure Call
            generalFunc.GetSingleStringFromQuery(command, "Callingmod");
            //Post Condition Check            
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestGetSingleStringFromQuery02()
        {
            GeneralFunction generalFunc = new GeneralFunction();
            Oracle.DataAccess.Client.OracleConnection localConnection = new Oracle.DataAccess.Client.OracleConnection();
            //Test Procedure Call
            generalFunc.GetSingleStringFromQuery("select pkey from entity",localConnection, "Callingmod");
            //Post Condition Check            
        }



    }
}

