using Dottest.Framework;
using Dottest.Framework.RecordState;
using NUnit.Framework;
using OPCTrendLib;
using System;

namespace DotTest.OPCTrendLib
{
    [TestFixture()]
    public class EvalExceptionTests
    {
        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("+drT9w", "+KO9fw")]
        public void TestEvalExceptionConstructor01()
        {
            string msg = string.Empty;
            EvalException evalException = new EvalException(msg);
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((string)evalException.HelpLink);
            recorder.Record((string)evalException.Message);
            recorder.Record((string)evalException.Source);
            recorder.Record((string)evalException.StackTrace);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/kmmnA", "+mR72A")]
        public void TestVariableNotExist01()
        {
            string varName = string.Empty;
            EvalException evalException = EvalException.VariableNotExist(varName);
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record<string>(delegate { return (string)evalException.HelpLink; });
            recorder.Record<string>(delegate { return (string)evalException.Message; });
            recorder.Record<string>(delegate { return (string)evalException.Source; });
            recorder.Record<string>(delegate { return (string)evalException.StackTrace; });
            recorder.FinishRecording();
            #endregion
        }

    }
}
