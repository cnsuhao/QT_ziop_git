using Dottest.Framework;
using NUnit.Framework;
using OPCTrendLib.OPCHeader;

namespace DotTest.OPCTrendLib.OPCHeader
{
    [TestFixture()]
    public class DUMMY_VARIANTTests
    {
        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestVarEnumToString01()
        {
            System.Runtime.InteropServices.VarEnum varEnum = (System.Runtime.InteropServices.VarEnum)DUMMY_VARIANT.VT_ILLEGAL;
            //Test Procedure Call
            string str = DUMMY_VARIANT.VarEnumToString(varEnum);
            //Post Condition Check
            Assert.AreEqual("VT_ILLEGAL", str);
            
            //test
            varEnum = (System.Runtime.InteropServices.VarEnum)DUMMY_VARIANT.VT_ARRAY;
            //Test Procedure Call
            str = DUMMY_VARIANT.VarEnumToString(varEnum);
            //Post Condition Check
            Assert.AreEqual("VT_ARRAY | VT_EMPTY", str);

            //test
            varEnum = (System.Runtime.InteropServices.VarEnum)DUMMY_VARIANT.VT_BYREF;
            //Test Procedure Call
            str = DUMMY_VARIANT.VarEnumToString(varEnum);
            //Post Condition Check
            Assert.AreEqual("VT_BYREF | VT_EMPTY", str);

            //test
            varEnum = (System.Runtime.InteropServices.VarEnum)DUMMY_VARIANT.VT_VECTOR;
            //Test Procedure Call
            str = DUMMY_VARIANT.VarEnumToString(varEnum);
            //Post Condition Check
            Assert.AreEqual("VT_VECTOR | VT_EMPTY", str);

            //test
            varEnum = (System.Runtime.InteropServices.VarEnum)DUMMY_VARIANT.VT_TYPEMASK;
            //Test Procedure Call
            str = DUMMY_VARIANT.VarEnumToString(varEnum);


            //test
            varEnum = System.Runtime.InteropServices.VarEnum.VT_I4;
            //Test Procedure Call
            str = DUMMY_VARIANT.VarEnumToString(varEnum);
            //Post Condition Check
            Assert.AreEqual("VT_I4", str);
        }

    }
}
