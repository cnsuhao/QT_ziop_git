using Dottest.Framework;
using Dottest.Framework.RecordState;
using NUnit.Framework;
using OPCTrendLib;

namespace DotTest.OPCTrendLib
{
    [TestFixture()]
    public class ConditionalOpTests
    {
        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/kTzSQ", "/fgMoA")]
        public void TestConditionalOpConstructor01()
        {
            ConditionalOp conditionalOp = new ConditionalOp();
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((OperatorPriority)conditionalOp.Priority);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestEval01()
        {
            ConditionalOp conditionalOp = new ConditionalOp();
            Result[] arrResult = new Result[3];
            Result res1 = new Result(true);
            Result res2 = new Result(1);
            Result res3 = new Result(0);
            arrResult[0] = res1;
            arrResult[1] = res2;
            arrResult[2] = res3;
            Evaluator evalutor = new Evaluator();
            //Test Procedure Call
            Result result = conditionalOp.Eval(evalutor, arrResult);
            //Post Condition Check
            Assert.AreEqual(1, result.Value);
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestEval02()
        {
            ConditionalOp conditionalOp = new ConditionalOp();
            conditionalOp.ToString();
            Result[] arrResult = new Result[3];
            Result res1 = new Result(false);
            Result res2 = new Result(1);
            Result res3 = new Result(0);
            arrResult[0] = res1;
            arrResult[1] = res2;
            arrResult[2] = res3;
            Evaluator evalutor = new Evaluator();
            //Test Procedure Call
            Result result = conditionalOp.Eval(evalutor, arrResult);
            //Post Condition Check
            Assert.AreEqual(0, result.Value);
        }

    }
}
