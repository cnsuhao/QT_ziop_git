using Dottest.Framework;
using NUnit.Framework;
using System;
using System.Collections.Generic;
using OPCTrendLib;

namespace DotTest.OPCTrendLib
{
    [TestFixture()]
    class BinaryHelperTests
    {
        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestComparePrimitiveType01()
        {
            //Test Procedure Call
            int comparedValue = 0;
            bool result = BinaryHelper.ComparePrimitiveType(null, null, out comparedValue);
            //Post Condition Check
            Assert.IsFalse(result);
            Assert.AreEqual(0, comparedValue);

            //test2 --- first type is invalid type
            //Test Procedure Call
            result = BinaryHelper.ComparePrimitiveType(typeof(object), typeof(string), out comparedValue);
            //Post Condition Check
            Assert.IsFalse(result);
            Assert.AreEqual(0, comparedValue);

            //test3 --- second type greater type
            //Test Procedure Call
            result = BinaryHelper.ComparePrimitiveType(typeof(int), typeof(string), out comparedValue);
            //Post Condition Check
            Assert.IsTrue(result);
            Assert.AreEqual(-1, comparedValue);


            //test4 --- first type greater type
            //Test Procedure Call
            result = BinaryHelper.ComparePrimitiveType(typeof(string), typeof(int), out comparedValue);
            //Post Condition Check
            Assert.IsTrue(result);
            Assert.AreEqual(1, comparedValue);

            //test5 --- second type is invalid type
            //Test Procedure Call
            result = BinaryHelper.ComparePrimitiveType(typeof(int), typeof(object), out comparedValue);
            //Post Condition Check
            Assert.IsFalse(result);
            Assert.AreEqual(0, comparedValue);

        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestGetType01()
        {
            //Test Procedure Call           
            Type returnType = BinaryHelper.GetType(null);
            //Post Condition Check
            Assert.IsNull(returnType);

            //Test Procedure Call           
            int i = 0;
            returnType = BinaryHelper.GetType(i);
            //Post Condition Check            
                
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestIsPrimitiveType01()
        {
            //Test Procedure Call          
            bool result = BinaryHelper.IsPrimitiveType(null);
            //Post Condition Check
            Assert.IsFalse(result);
            
            
            //Test Procedure Call          
            result = BinaryHelper.IsPrimitiveType(typeof(object));
            //Post Condition Check
            Assert.IsFalse(result);


            //Test Procedure Call          
            result = BinaryHelper.IsPrimitiveType(typeof(int));
            //Post Condition Check
            Assert.IsTrue(result);
        }

    }
}
