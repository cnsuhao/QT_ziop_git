using Dottest.Framework;
using Dottest.Framework.RecordState;
using NUnit.Framework;
using OPCTrendLib;

namespace DotTest.OPCTrendLib
{
    [TestFixture()]
    public class BinaryOpTests
    {
        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/i6Gjw", "+5JlEQ")]
        public void TestCreateOp01()
        {
            Token type = Token.Add;
            BinaryOp binaryOp = BinaryOp.CreateOp(type);
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestCreateOp02()
        {
            Token type = Token.Inequality;
            BinaryOp binaryOp = BinaryOp.CreateOp(type);            
        }


        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestCreateOp03()
        {
            Token type = Token.Equality;
            BinaryOp binaryOp = BinaryOp.CreateOp(type);

            type = Token.LessThanOrEqual;
            BinaryOp B1 = BinaryOp.CreateOp(type);

            type = Token.GreaterThanOrEqual;
            B1 = BinaryOp.CreateOp(type);

            type = Token.BitwiseOr;
            B1 = BinaryOp.CreateOp(type);
        }

    }
}
