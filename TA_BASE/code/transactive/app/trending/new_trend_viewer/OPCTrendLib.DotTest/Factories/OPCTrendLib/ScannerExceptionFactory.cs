using Dottest.Framework;
using Dottest.Framework.RecordState;
using NUnit.Framework;
using OPCTrendLib;
using System;

namespace DotTest.Factories.OPCTrendLib
{
    [TestFixture(), ObjectFactoryType()]
    public class ScannerExceptionFactory
    {
        [ObjectFactoryMethod]
        [HashCode("+c3fcQ", "+VBkTg")]
        public static ScannerException CreateScannerException01()
        {
            Error errorCode = Error.IdentfierConstUnaryOrLeftParenExpected;
            int pos = 1;
            ScannerException scannerException = new ScannerException(errorCode, pos);
            return scannerException;
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestCreateScannerException01()
        {
            ScannerException scannerException = CreateScannerException01();
            Assert.IsNotNull(scannerException);
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((string)scannerException.HelpLink);
            recorder.Record((string)scannerException.Message);
            recorder.Record((string)scannerException.Source);
            recorder.Record((string)scannerException.StackTrace);
            recorder.FinishRecording();
            #endregion
        }

        [ObjectFactoryMethod]
        [HashCode("+c3fcQ", "+sUhTw")]
        public static ScannerException CreateScannerException02()
        {
            Error errorCode = Error.IdentfierConstUnaryOrLeftParenExpected;
            int pos = int.MaxValue;
            ScannerException scannerException = new ScannerException(errorCode, pos);
            return scannerException;
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestCreateScannerException02()
        {
            ScannerException scannerException = CreateScannerException02();
            Assert.IsNotNull(scannerException);
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((string)scannerException.HelpLink);
            recorder.Record((string)scannerException.Message);
            recorder.Record((string)scannerException.Source);
            recorder.Record((string)scannerException.StackTrace);
            recorder.FinishRecording();
            #endregion
        }

        [ObjectFactoryMethod]
        [HashCode("+c3fcQ", "/dLJLw")]
        public static ScannerException CreateScannerException03()
        {
            Error errorCode = Error.IdentfierConstUnaryOrLeftParenExpected;
            int pos = 0;
            ScannerException scannerException = new ScannerException(errorCode, pos);
            return scannerException;
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestCreateScannerException03()
        {
            ScannerException scannerException = CreateScannerException03();
            Assert.IsNotNull(scannerException);
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((string)scannerException.HelpLink);
            recorder.Record((string)scannerException.Message);
            recorder.Record((string)scannerException.Source);
            recorder.Record((string)scannerException.StackTrace);
            recorder.FinishRecording();
            #endregion
        }

    }
}
