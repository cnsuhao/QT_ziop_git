using Dottest.Framework;
using NUnit.Framework;
using OPCTrendLib;

namespace DotTest.Factories.OPCTrendLib
{
    [TestFixture(), ObjectFactoryType()]
    public class ExpressionFactory
    {
        [ObjectFactoryMethod]
        [HashCode("/0C+tg", "/tiuhw")]
        internal static Expression CreateExpression01()
        {
            Token type = Token.LessThan;
            Expression expression = BinaryOp.CreateOp(type);
            return expression;
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestCreateExpression01()
        {
            Expression expression = CreateExpression01();
            Assert.IsNotNull(expression);
        }

        [ObjectFactoryMethod]
        [HashCode("/0C+tg", "/2RecQ")]
        internal static Expression CreateExpression02()
        {
            Token type = Token.BooleanNot;
            Expression expression = UnaryOp.CreateOp(type);
            return expression;
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestCreateExpression02()
        {
            Expression expression = CreateExpression02();
            Assert.IsNotNull(expression);
        }

        [ObjectFactoryMethod]
        [HashCode("/0C+tg", "/evD2w")]
        internal static Expression CreateExpression03()
        {
            Expression expression = new AdditiveOp();
            return expression;
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestCreateExpression03()
        {
            Expression expression = CreateExpression03();
            Assert.IsNotNull(expression);
        }

    }
}
