using Dottest.Framework;
using Dottest.Framework.RecordState;
using NUnit.Framework;
using OPCTrendLib;
using System;

namespace DotTest.Factories.OPCTrendLib
{
    [TestFixture(), ObjectFactoryType()]
    public class ExecutorFactory
    {
        [ObjectFactoryMethod]
        [HashCode("/g8a1A", "/tt8pQ")]
        internal static Executor CreateExecutor01()
        {
            Executor executor = new BooleanOrExecutor();
            return executor;
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestCreateExecutor01()
        {
            Executor executor = CreateExecutor01();
            Assert.IsNotNull(executor);
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((int)ReflectionAccessor.Wrap(executor).GetProperty("CurrentIndex"));
            recorder.FinishRecording();
            #endregion
        }

        [ObjectFactoryMethod]
        [HashCode("/g8a1A", "+pcZqg")]
        internal static Executor CreateExecutor02()
        {
            Executor executor = new Executor();
            return executor;
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestCreateExecutor02()
        {
            Executor executor = CreateExecutor02();
            Assert.IsNotNull(executor);
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((int)ReflectionAccessor.Wrap(executor).GetProperty("CurrentIndex"));
            recorder.FinishRecording();
            #endregion
        }

        [ObjectFactoryMethod]
        [HashCode("/g8a1A", "+NLaxA")]
        internal static Executor CreateExecutor03()
        {
            Executor executor = new BinaryOpExecutor();
            string tag = (string) executor.Tag;
            executor.Tag = tag;   
            return executor;
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestCreateExecutor03()
        {
            Executor executor = CreateExecutor03();
            Assert.IsNotNull(executor);
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((int)ReflectionAccessor.Wrap(executor).GetProperty("CurrentIndex"));
            recorder.FinishRecording();
            #endregion
        }

    }
}
