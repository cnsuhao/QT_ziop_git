using Dottest.Framework;
using Dottest.Framework.RecordState;
using NUnit.Framework;
using STEE.ISCS.MulLanguage;
using System;
using System.Windows.Forms;

namespace STEE.ISCS.MulLanguage.DotTest
{
    [TestFixture()]
    public class MessageBoxDialogTests
    {
        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/+BeIA", "/M3fqw")]
        public void TestShow01()
        {
            string text = string.Empty;
            DialogResult dialogResult = MessageBoxDialog.Show(text);

            //test ---- with owner
            dialogResult = MessageBoxDialog.Show(new System.Windows.Forms.Form(), "test");

        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("+8EiDA", "//XJiQ")]
        public void TestShow02()
        {
            string text = string.Empty;
            string caption = string.Empty;
            DialogResult dialogResult = MessageBoxDialog.Show(text, caption);

            //test ---- with owner
            dialogResult = MessageBoxDialog.Show(new System.Windows.Forms.Form(), text,caption);
          
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/tzZPA", "+HMpSw")]
        public void TestShow03()
        {
            string text = string.Empty;
            string caption = string.Empty;
            MessageBoxButtons buttons = MessageBoxButtons.OK;
            DialogResult dialogResult = MessageBoxDialog.Show(text, caption, buttons);

            //test ---- with owner
            dialogResult = MessageBoxDialog.Show(new System.Windows.Forms.Form(), text, caption,buttons);
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/tzZPA", "+6DonA")]
        public void TestShow04()
        {
            string text = string.Empty;
            string caption = string.Empty;
            MessageBoxButtons buttons = MessageBoxButtons.AbortRetryIgnore;
            DialogResult dialogResult = MessageBoxDialog.Show(text, caption, buttons);


            //test ---- with owner
            dialogResult = MessageBoxDialog.Show(new System.Windows.Forms.Form(), text, caption,buttons);
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("+5D0Eg", "/DenmA")]
        public void TestShow05()
        {
            string text = string.Empty;
            string caption = string.Empty;
            MessageBoxButtons buttons = MessageBoxButtons.OKCancel;
            MessageBoxIcon icon = MessageBoxIcon.Warning;
            DialogResult dialogResult = MessageBoxDialog.Show(text, caption, buttons, icon);
            //test ---- with owner
            dialogResult = MessageBoxDialog.Show(new System.Windows.Forms.Form(), text, caption, buttons,icon);
            
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("+5D0Eg", "/vaTEw")]
        public void TestShow06()
        {
            string text = string.Empty;
            string caption = string.Empty;
            MessageBoxButtons buttons = MessageBoxButtons.YesNo;
            MessageBoxIcon icon = MessageBoxIcon.Hand;
            DialogResult dialogResult = MessageBoxDialog.Show(text, caption, buttons, icon);
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record(dialogResult);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("+hYMKA", "+r8dew")]
        public void TestShow07()
        {
            string text = string.Empty;
            string caption = string.Empty;
            MessageBoxButtons buttons = MessageBoxButtons.AbortRetryIgnore;
            MessageBoxIcon icon = MessageBoxIcon.Hand;
            MessageBoxDefaultButton defaultButton = MessageBoxDefaultButton.Button2;
            DialogResult dialogResult = MessageBoxDialog.Show(text, caption, buttons, icon, defaultButton);

            //test ---- with owner
            dialogResult = MessageBoxDialog.Show(new System.Windows.Forms.Form(), text, caption,buttons, icon,defaultButton);

        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("+hYMKA", "/ji86A")]
        public void TestShow08()
        {
            string text = string.Empty;
            string caption = string.Empty;
            MessageBoxButtons buttons = MessageBoxButtons.OK;
            MessageBoxIcon icon = MessageBoxIcon.Warning;
            MessageBoxDefaultButton defaultButton = MessageBoxDefaultButton.Button3;
            DialogResult dialogResult = MessageBoxDialog.Show(text, caption, buttons, icon, defaultButton);
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record(dialogResult);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("+0oJ4A", "/vsYJA")]
        public void TestShow09()
        {
            string text = string.Empty;
            string caption = string.Empty;
            MessageBoxButtons buttons = MessageBoxButtons.OKCancel;
            MessageBoxIcon icon = MessageBoxIcon.Information;
            MessageBoxDefaultButton defaultButton = MessageBoxDefaultButton.Button2;
            MessageBoxOptions options = MessageBoxOptions.ServiceNotification;
            DialogResult dialogResult = MessageBoxDialog.Show(text, caption, buttons, icon, defaultButton, options);

            //test ---- with owner
            dialogResult = MessageBoxDialog.Show(new System.Windows.Forms.Form(), text, caption, buttons, icon,defaultButton,options);

        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("+0oJ4A", "+52kFQ")]
        public void TestShow10()
        {
            string text = string.Empty;
            string caption = string.Empty;
            MessageBoxButtons buttons = MessageBoxButtons.OKCancel;
            MessageBoxIcon icon = MessageBoxIcon.Information;
            MessageBoxDefaultButton defaultButton = MessageBoxDefaultButton.Button2;
            MessageBoxOptions options = MessageBoxOptions.RtlReading;
            DialogResult dialogResult = MessageBoxDialog.Show(text, caption, buttons, icon, defaultButton, options);
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record(dialogResult);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/w9o1w", "/AJ15A")]
        public void TestMessageBoxDialogConstructor01()
        {
            MessageBoxDialog messageBoxDialog = new MessageBoxDialog();
        }

    }
}
