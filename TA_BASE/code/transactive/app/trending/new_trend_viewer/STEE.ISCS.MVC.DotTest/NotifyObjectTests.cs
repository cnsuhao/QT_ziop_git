using Dottest.Framework;
using Dottest.Framework.RecordState;
using NUnit.Framework;
using STEE.ISCS.MVC;
using STEE.ISCS.MVC.DotTest.Factories;
using System;

namespace STEE.ISCS.MVC.DotTest
{
    [TestFixture()]
    public class NotifyObjectTests
    {
        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/prnow", "+1nFSA")]
        public void TestBodyGetter01()
        {
            NotifyObject notifyObject = NotifyObjectFactory.CreateNotifyObject01();
            object body = notifyObject.Body;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((string)notifyObject.Name);
            recorder.Record((string)notifyObject.Type);
            recorder.FinishRecording();
            #endregion
            #region Assertions
            Assert.IsNull((string)notifyObject.Name);
            Assert.IsNull((string)notifyObject.Type);
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/SAbBw", "+oT5+g")]
        public void TestBodySetter01()
        {
            NotifyObject notifyObject = NotifyObjectFactory.CreateNotifyObject01();
            object body = NotifyObjectFactory.CreateNotifyObject01();
            notifyObject.Body = body;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((string)notifyObject.Name);
            recorder.Record((string)notifyObject.Type);
            recorder.FinishRecording();
            #endregion
            #region Assertions
            Assert.IsNull((string)notifyObject.Name);
            Assert.IsNull((string)notifyObject.Type);
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/SAbBw", "+xiusQ")]
        public void TestBodySetter02()
        {
            NotifyObject notifyObject = NotifyObjectFactory.CreateNotifyObject01();
            object body = ViewManagerFactory.CreateViewManager01();
            notifyObject.Body = body;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((string)notifyObject.Name);
            recorder.Record((string)notifyObject.Type);
            recorder.FinishRecording();
            #endregion
            #region Assertions
            Assert.IsNull((string)notifyObject.Name);
            Assert.IsNull((string)notifyObject.Type);
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/qV7sw", "/2z0xw")]
        public void TestNameGetter01()
        {
            NotifyObject notifyObject = NotifyObjectFactory.CreateNotifyObject01();
            string name = notifyObject.Name;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record(name);
            recorder.Record((string)notifyObject.Name);
            recorder.Record((string)notifyObject.Type);
            recorder.FinishRecording();
            #endregion
            #region Assertions
            Assert.IsNull(name);
            Assert.IsNull((string)notifyObject.Name);
            Assert.IsNull((string)notifyObject.Type);
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("+MYJNw", "/MwzHw")]
        public void TestNameSetter01()
        {
            NotifyObject notifyObject = NotifyObjectFactory.CreateNotifyObject01();
            string name = string.Empty;
            notifyObject.Name = name;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((string)notifyObject.Name);
            recorder.Record((string)notifyObject.Type);
            recorder.FinishRecording();
            #endregion
            #region Assertions
            Assert.AreEqual("", (string)notifyObject.Name);
            Assert.IsNull((string)notifyObject.Type);
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/T0RFw", "/FAxew")]
        public void TestTypeGetter01()
        {
            NotifyObject notifyObject = NotifyObjectFactory.CreateNotifyObject01();
            string type = notifyObject.Type;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record(type);
            recorder.Record((string)notifyObject.Name);
            recorder.Record((string)notifyObject.Type);
            recorder.FinishRecording();
            #endregion
            #region Assertions
            Assert.IsNull(type);
            Assert.IsNull((string)notifyObject.Name);
            Assert.IsNull((string)notifyObject.Type);
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/w0cHA", "/985ww")]
        public void TestTypeSetter01()
        {
            NotifyObject notifyObject = NotifyObjectFactory.CreateNotifyObject01();
            string type = string.Empty;
            notifyObject.Type = type;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((string)notifyObject.Name);
            recorder.Record((string)notifyObject.Type);
            recorder.FinishRecording();
            #endregion
            #region Assertions
            Assert.IsNull((string)notifyObject.Name);
            Assert.AreEqual("", (string)notifyObject.Type);
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("+LY4Wg", "/7H6Zg")]
        public void TestNotifyObjectConstructor01()
        {
            NotifyObject notifyObject = new NotifyObject();
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((string)notifyObject.Name);
            recorder.Record((string)notifyObject.Type);
            recorder.FinishRecording();
            #endregion
            #region Assertions
            Assert.IsNull((string)notifyObject.Name);
            Assert.IsNull((string)notifyObject.Type);
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/SAbBw", "+QZ/9A")]
        public void TestBodySetter03()
        {
            NotifyObject notifyObject = NotifyObjectFactory.CreateNotifyObject01();
            object body = NotifyManagerFactory.CreateNotifyManager01();
            notifyObject.Body = body;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((string)notifyObject.Name);
            recorder.Record((string)notifyObject.Type);
            recorder.FinishRecording();
            #endregion
            #region Assertions
            Assert.IsNull((string)notifyObject.Name);
            Assert.IsNull((string)notifyObject.Type);
            #endregion
        }

    }
}
