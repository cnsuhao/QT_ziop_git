using Dottest.Framework;
using Dottest.Framework.RecordState;
using Entity.Trending;
using NUnit.Framework;
using System;

namespace Entity.Trending.DotTest
{
    [TestFixture()]
    public class EtyDataPointTests
    {

        private EtyDataPoint etyDataPoint;

        [TestFixtureSetUp]
        public void FixtureSetUp()
        {
            etyDataPoint = new EtyDataPoint();
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("+kwhUA", "/Cpu3w")]
        public void TestEtyDataPointConstructor01()
        {
            EtyDataPoint etyDataPoint = new EtyDataPoint();
        }

        [Test]
        public void TestProperties()
        {
            string s = etyDataPoint.ConfigName;
            etyDataPoint.ConfigName = s;

            s = etyDataPoint.Description;
            etyDataPoint.Description = s;

            s = etyDataPoint.DPColor;
            etyDataPoint.DPColor = s;

            bool b = etyDataPoint.DPEnabled;
            etyDataPoint.DPEnabled = b;

            s = etyDataPoint.DPHost;
            etyDataPoint.DPHost = s;

            b = etyDataPoint.DPLblEnabled;
            etyDataPoint.DPLblEnabled = b;

            s = etyDataPoint.DPLblName;
            etyDataPoint.DPLblName = s;

            s = etyDataPoint.DPName;
            etyDataPoint.DPName = s;

            s = etyDataPoint.DPServer;
            etyDataPoint.DPServer = s;

            LineType lineType = etyDataPoint.DPType;
            etyDataPoint.DPType = lineType;

            b = etyDataPoint.DPVisible;
            etyDataPoint.DPVisible = b;

            ulong pkey = etyDataPoint.PKey;
            etyDataPoint.PKey = pkey;

            s = etyDataPoint.DisplayName;
            etyDataPoint.DisplayName = s;

        }

    }
}
