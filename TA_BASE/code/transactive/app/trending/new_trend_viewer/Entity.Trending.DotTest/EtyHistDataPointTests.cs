using Dottest.Framework;
using Dottest.Framework.RecordState;
using Entity.Trending;
using NUnit.Framework;
using System;

namespace Entity.Trending.DotTest
{
    [TestFixture()]
    public class EtyHistDataPointTests
    {
        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("+l6SIw", "+UXrtA")]
        public void TestEtyHistDataPoint01()
        {
            EtyHistDataPoint etyHistDataPoint = new EtyHistDataPoint();

            string s = etyHistDataPoint.ConfigName;
            etyHistDataPoint.ConfigName = s;

            s = etyHistDataPoint.DisplayName;
            etyHistDataPoint.DisplayName=s;

            s = etyHistDataPoint.Description;
            etyHistDataPoint.Description = s;

            s = etyHistDataPoint.DPColor;
            etyHistDataPoint.DPColor = s;

            bool b = etyHistDataPoint.DPEnabled;
            etyHistDataPoint.DPEnabled = b;

            DateTime dt = etyHistDataPoint.DPEndDateTime;
            etyHistDataPoint.DPEndDateTime = dt;

            s = etyHistDataPoint.DPHost;
            etyHistDataPoint.DPHost = s;

            b = etyHistDataPoint.DPLblEnabled;
            etyHistDataPoint.DPLblEnabled = b;

            s = etyHistDataPoint.DPLblName;
            etyHistDataPoint.DPLblName =s;

            s = etyHistDataPoint.DPName;
            etyHistDataPoint.DPName = s;

            s = etyHistDataPoint.DPServer;
            etyHistDataPoint.DPServer =s;

            dt = etyHistDataPoint.DPStartDateTime;
            etyHistDataPoint.DPStartDateTime = dt;

            LineType lineType = etyHistDataPoint.DPType;
            etyHistDataPoint.DPType = lineType;

            ulong pkey = etyHistDataPoint.PKey;
            etyHistDataPoint.PKey = pkey;

            etyHistDataPoint.EntityKey = 1;
            etyHistDataPoint.EntityKey = etyHistDataPoint.EntityKey;
        }

    }
}
