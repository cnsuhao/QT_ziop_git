using DAO.Trending;
using Dottest.Framework;
using NUnit.Framework;
using Entity.Trending;

namespace DAO.Trending.DotTest
{
    [TestFixture()]
    public class DatalogDPTrendDAOTests
    {
        [TestFixtureSetUp]
        public void FixtureSetUp()
        {
            TestDBInit.openConn();
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/WgxmA", "/uFaIg")]
        public void TestGetInstance01()
        {
            DatalogDPTrendDAO datalogDPTrendDAO = DatalogDPTrendDAO.GetInstance();
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("+zJqOA", "/mvLlg")]
        public void TestReleaseInstance01()
        {
            DatalogDPTrendDAO.ReleaseInstance();
        }


//         [Test]
//         public void TestGetAllOPCDataNode()
//         {
//             string serverRootName = TestDBInit.SERVER_ROOT_NAME;
//             string opcServerName = TestDBInit.OPCSERVER_NAME;
// 
//             DatalogDPTrendDAO.GetInstance().GetAllOPCDataNode(serverRootName, opcServerName);
// 
//         }
// 
//         [Test]
//         public void TestGetChildOPCDataNode()
//         {
//             string parentKeyId = TestDBInit.SCADA_PKEY_STR;
//             string opcServerName = TestDBInit.OPCSERVER_NAME;
// 
//             DatalogDPTrendDAO.GetInstance().GetChildOPCDataNode(parentKeyId, opcServerName);
//         }

        [Test]
        public void TestGetOPCDataPoint()
        {
            string opcServerName = TestDBInit.OPCSERVER_NAME;
            string filterString = " AND  SAMPLE_GRP_ID =5";  //" AND  SAMPLE_GRP_ID =112"; //for my local Env
            DatalogDPTrendDAO.GetInstance().GetOPCDataPoint(opcServerName, filterString);
            DatalogDPTrendDAO.GetInstance().GetOPCDataPoint(opcServerName, "");
        }

        [Test]
        public void TestGetDataPointByName()
        {
            string opcServerName = TestDBInit.OPCSERVER_NAME;
            string dataPointNameSubstr = "OCC";
            // SELECT et.PKEY,et.PARENTKEY,CONCAT(et.NAME,'.Value')as NAME ,et.DESCRIPTION, 
            //dt.SAMPLE_GRP_ID FROM ENTITY et, OPC_DT_PT dt WHERE TYPEKEY = (SELECT PKEY FROM ENTITYTYPE WHERE NAME = 'DataPoint') AND UPPER(NAME) LIKE '%BMF.SWC%' AND et.PKEY = dt.KEYID(+)
            DatalogDPTrendDAO.GetInstance().GetDataPointByName(opcServerName, dataPointNameSubstr);
        }
        [Test]
        public void TestGetDataPointByName02()
        {
            //exception
            string opcServerName = TestDBInit.OPCSERVER_NAME;
            string dataPointNameSubstr = "OCC";
            DatalogDPTrendDAO.GetInstance().GetDataPointByName(opcServerName, dataPointNameSubstr);
        }

        [Test]
        public void TestGetOPCDataPointByGrpId()
        {
            double grpId = 6;  // for my local Evn grpId =7
            DatalogDPTrendDAO.GetInstance().GetOPCDataPointByGrpId(grpId);

            grpId = 9999;
            DatalogDPTrendDAO.GetInstance().GetOPCDataPointByGrpId(grpId);
        }

        [Test]
        public void TestGetOPCDataPointByGrpId02()
        {
            //exception
            double grpId = 6;  
            DatalogDPTrendDAO.GetInstance().GetOPCDataPointByGrpId(grpId);

        }
//         [Test]
//         public void TestGetUniqueEnabledOPCDataPoint()
//         {
//             string hostName = TestDBInit.HOST_NAME; //"127.0.0.1";
//             string serverName = TestDBInit.OPCSERVER_NAME;  //"TransActiveDataSource";
// 
//             DatalogDPTrendDAO.GetInstance().GetUniqueEnabledOPCDataPoint(hostName, serverName);
//         }
// 
//         [Test]
//         public void TestUpdateOPCDataPointByGrpId()
//         {
//             bool disabled = false;
//             string opcServerName = TestDBInit.OPCSERVER_NAME;
//             double sampleGrpId = 7;
// 
//             DatalogDPTrendDAO.GetInstance().UpdateOPCDataPointByGrpId(disabled, opcServerName, sampleGrpId);
//         }
// 
//         [Test]
//         public void TestUpdateOPCDataPointByName()
//         {
//             EtyOPCDataPoint etyDataPoint =
//                 DatalogDPTrendDAO.GetInstance().GetUniqueEnabledOPCDataPoint(TestDBInit.HOST_NAME, TestDBInit.OPCSERVER_NAME)[0];
//             etyDataPoint.OPCDataPointName = etyDataPoint.OPCDataPointName + "_UnitTest";
// 
//             etyDataPoint.OPCDataPointServer = "";
//             DatalogDPTrendDAO.GetInstance().UpdateOPCDataPointByName(etyDataPoint); //will actually insert a new record
//             DatalogDPTrendDAO.GetInstance().UpdateOPCDataPointByName(etyDataPoint); //will update this record
//         }

        [Test]
        public void TestDisableGrpDataPoint()
        {
            double sampleGrpId = 18;
            DatalogDPTrendDAO.GetInstance().DisableGrpDataPoint(sampleGrpId);
        }

        [Test]
        public void TestGetGrpIDByDPName()
        {
            string dpName = "DT19.BMF.ATS.SERVER.diiATSSVR-StopRun.Value";
            DatalogDPTrendDAO.GetInstance().GetGrpIDByDPName(dpName);
            DatalogDPTrendDAO.GetInstance().GetOPCDataPointByName(dpName);
        }
        [Test]
        public void TestGetGrpIDByDPName02()
        {
            //exception
            string dpName = "DT19.BMF.ATS.SERVER.diiATSSVR-StopRun.Value";
            DatalogDPTrendDAO.GetInstance().GetGrpIDByDPName(dpName);
            DatalogDPTrendDAO.GetInstance().GetOPCDataPointByName(dpName);
            DatalogDPTrendDAO.GetInstance().GetOPCDataPoint("", "");
        }

        [Test]
        public void TestInsertOPCDataPoint_UpdateOPCDataPointByName()
        {

            EtyDataLogDPTrend etyDataLogDPTrend = new EtyDataLogDPTrend();
            etyDataLogDPTrend.OPCDataPointName = "DT18.LV.MSB.LF211.diiPWRC-MSBCBNotcloseClose.Value";
            etyDataLogDPTrend.OPCSampleGrpId = 6;
            etyDataLogDPTrend.Disabled = false;
            DatalogDPTrendDAO.GetInstance().InsertOPCDataPoint(etyDataLogDPTrend);
            DatalogDPTrendDAO.GetInstance().UpdateOPCDataPointByName(etyDataLogDPTrend);
        }

        [Test]
        public void TestUpdateOPCDataPointByGrpId()
        {
            DatalogDPTrendDAO.GetInstance().UpdateOPCDataPointByGrpId(true, 11);
        }


    }
}
