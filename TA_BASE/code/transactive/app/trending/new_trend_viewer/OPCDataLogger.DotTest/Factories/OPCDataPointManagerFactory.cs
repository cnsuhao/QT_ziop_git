using Dottest.Framework;
using NUnit.Framework;
using OPCDataLogger;

namespace OPCDataLogger.DotTest.Factories
{
    [TestFixture(), ObjectFactoryType()]
    public class OPCDataPointManagerFactory
    {
        [ObjectFactoryMethod]
        [HashCode("/zFOag", "/jQIqw")]
        internal static OPCDataPointManager CreateOPCDataPointManager01()
        {
            OPCDataPointManager oPCDataPointManager = OPCDataPointManager.GetInstance();
            return oPCDataPointManager;
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestCreateOPCDataPointManager01()
        {
            OPCDataPointManager oPCDataPointManager = CreateOPCDataPointManager01();
            Assert.IsNotNull(oPCDataPointManager);
        }

        [ObjectFactoryMethod]
        [HashCode("/zFOag", "+Teodw")]
        internal static OPCDataPointManager CreateOPCDataPointManager02()
        {
            OPCDataPointManager oPCDataPointManager = (OPCDataPointManager)ReflectionAccessor.Construct("OPCDataLogger.OPCDataPointManager");
            return oPCDataPointManager;
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestCreateOPCDataPointManager02()
        {
            OPCDataPointManager oPCDataPointManager = CreateOPCDataPointManager02();
            Assert.IsNotNull(oPCDataPointManager);
        }

    }
}
