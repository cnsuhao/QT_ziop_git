using Dottest.Framework;
using Dottest.Framework.RecordState;
using NUnit.Framework;
using OPCDataLogger;
using System;

namespace OPCDataLogger.DotTest.Factories
{
    [TestFixture(), ObjectFactoryType()]
    public class ConfigureFileHelperFactory
    {
        [ObjectFactoryMethod]
        [HashCode("/N0E5Q", "/y/Xkw")]
        internal static ConfigureFileHelper CreateConfigureFileHelper01()
        {
            ConfigureFileHelper configureFileHelper = ConfigureFileHelper.GetInstance();
            return configureFileHelper;
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestCreateConfigureFileHelper01()
        {
            ConfigureFileHelper configureFileHelper = CreateConfigureFileHelper01();
            Assert.IsNotNull(configureFileHelper);
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((string)configureFileHelper.AboutMessage);
            recorder.Record((string)configureFileHelper.ConnectionString);
            recorder.Record((string)configureFileHelper.DefaultFolder);
            recorder.Record((int)configureFileHelper.DefaultLineThickness);
            recorder.Record((string)configureFileHelper.DTTimeInteval);
            recorder.Record((string)configureFileHelper.OPCDTSever1Host);
            recorder.Record((string)configureFileHelper.OPCDTSever1Name);
            recorder.Record((string)configureFileHelper.OPCDTSever2Host);
            recorder.Record((string)configureFileHelper.OPCDTSever2Name);
            recorder.Record((string)configureFileHelper.OPCServerName);
            recorder.Record((string)configureFileHelper.OPCServerRootName);
            recorder.Record((string)configureFileHelper.TimeIntevalMS);
            recorder.FinishRecording();
            #endregion
        }

        [ObjectFactoryMethod]
        [HashCode("/N0E5Q", "/ArFEw")]
        internal static ConfigureFileHelper CreateConfigureFileHelper02()
        {
            ConfigureFileHelper configureFileHelper = new ConfigureFileHelper();
            return configureFileHelper;
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestCreateConfigureFileHelper02()
        {
            ConfigureFileHelper configureFileHelper = CreateConfigureFileHelper02();
            Assert.IsNotNull(configureFileHelper);
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((string)configureFileHelper.AboutMessage);
            recorder.Record((string)configureFileHelper.ConnectionString);
            recorder.Record((string)configureFileHelper.DefaultFolder);
            recorder.Record((int)configureFileHelper.DefaultLineThickness);
            recorder.Record((string)configureFileHelper.DTTimeInteval);
            recorder.Record((string)configureFileHelper.OPCDTSever1Host);
            recorder.Record((string)configureFileHelper.OPCDTSever1Name);
            recorder.Record((string)configureFileHelper.OPCDTSever2Host);
            recorder.Record((string)configureFileHelper.OPCDTSever2Name);
            recorder.Record((string)configureFileHelper.OPCServerName);
            recorder.Record((string)configureFileHelper.OPCServerRootName);
            recorder.Record((string)configureFileHelper.TimeIntevalMS);
            recorder.FinishRecording();
            #endregion
        }

    }
}
