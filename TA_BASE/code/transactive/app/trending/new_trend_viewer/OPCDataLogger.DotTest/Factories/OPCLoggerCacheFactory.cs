using Dottest.Framework;
using NUnit.Framework;
using OPCDataLogger;

namespace OPCDataLogger.DotTest.Factories
{
    [TestFixture(), ObjectFactoryType()]
    public class OPCLoggerCacheFactory
    {
        [ObjectFactoryMethod]
        [HashCode("+FRo6w", "+wp9AA")]
        internal static OPCLoggerCache CreateOPCLoggerCache01()
        {
            OPCLoggerCache oPCLoggerCache = OPCLoggerCache.GetInstance();
            return oPCLoggerCache;
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestCreateOPCLoggerCache01()
        {
            OPCLoggerCache oPCLoggerCache = CreateOPCLoggerCache01();
            Assert.IsNotNull(oPCLoggerCache);
        }

        [ObjectFactoryMethod]
        [HashCode("+FRo6w", "+4N4vg")]
        internal static OPCLoggerCache CreateOPCLoggerCache02()
        {
            OPCLoggerCache oPCLoggerCache = (OPCLoggerCache)ReflectionAccessor.Construct("OPCDataLogger.OPCLoggerCache");
            return oPCLoggerCache;
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestCreateOPCLoggerCache02()
        {
            OPCLoggerCache oPCLoggerCache = CreateOPCLoggerCache02();
            Assert.IsNotNull(oPCLoggerCache);
        }

    }
}
