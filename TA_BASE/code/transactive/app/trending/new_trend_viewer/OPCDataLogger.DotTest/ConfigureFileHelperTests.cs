using Dottest.Framework;
using Dottest.Framework.RecordState;
using NUnit.Framework;
using OPCDataLogger;
using System;
using OPCDataLogger.DotTest.Factories;

namespace OPCDataLogger.DotTest
{
    [TestFixture()]
    public class ConfigureFileHelperTests
    {
        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("+H0k5w", "+QpREA")]
        public void TestGetINIDataString01()
        {
            string entryCategory = string.Empty;
            string entryKey = string.Empty;
            string entryDefault = string.Empty;
            int entrySize = int.MaxValue;
            string entryFile = string.Empty;
            //string str = ConfigureFileHelper.GetINIDataString(entryCategory, entryKey, entryDefault, entrySize, entryFile);

        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/RncLg", "/EPE2w")]
        public void TestGetInstance01()
        {
            ConfigureFileHelper configureFileHelper = ConfigureFileHelper.GetInstance();
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record<string>(delegate { return (string)configureFileHelper.AboutMessage; });
            recorder.Record<string>(delegate { return (string)configureFileHelper.ConnectionString; });
            recorder.Record<string>(delegate { return (string)configureFileHelper.DefaultFolder; });
            recorder.Record<int>(delegate { return (int)configureFileHelper.DefaultLineThickness; });
            recorder.Record<string>(delegate { return (string)configureFileHelper.DTTimeInteval; });
            recorder.Record<string>(delegate { return (string)configureFileHelper.OPCDTSever1Host; });
            recorder.Record<string>(delegate { return (string)configureFileHelper.OPCDTSever1Name; });
            recorder.Record<string>(delegate { return (string)configureFileHelper.OPCDTSever2Host; });
            recorder.Record<string>(delegate { return (string)configureFileHelper.OPCDTSever2Name; });
            recorder.Record<string>(delegate { return (string)configureFileHelper.OPCServerName; });
            recorder.Record<string>(delegate { return (string)configureFileHelper.OPCServerRootName; });
            recorder.Record<string>(delegate { return (string)configureFileHelper.TimeIntevalMS; });
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("+ks37w", "/0rC0g")]
        public void Testinit01()
        {
            ConfigureFileHelper configureFileHelper = ConfigureFileHelperFactory.CreateConfigureFileHelper02();
            configureFileHelper.init();
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((string)configureFileHelper.AboutMessage);
            recorder.Record((string)configureFileHelper.ConnectionString);
            recorder.Record((string)configureFileHelper.DefaultFolder);
            recorder.Record((int)configureFileHelper.DefaultLineThickness);
            recorder.Record((string)configureFileHelper.DTTimeInteval);
            recorder.Record((string)configureFileHelper.OPCDTSever1Host);
            recorder.Record((string)configureFileHelper.OPCDTSever1Name);
            recorder.Record((string)configureFileHelper.OPCDTSever2Host);
            recorder.Record((string)configureFileHelper.OPCDTSever2Name);
            recorder.Record((string)configureFileHelper.OPCServerName);
            recorder.Record((string)configureFileHelper.OPCServerRootName);
            recorder.Record((string)configureFileHelper.TimeIntevalMS);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("+9CBlQ", "+0X+sA")]
        public void TestOPCServerNameGetter01()
        {
            ConfigureFileHelper configureFileHelper = ConfigureFileHelperFactory.CreateConfigureFileHelper01();
            string oPCServerName = configureFileHelper.OPCServerName;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record(oPCServerName);
            recorder.Record((string)configureFileHelper.AboutMessage);
            recorder.Record((string)configureFileHelper.ConnectionString);
            recorder.Record((string)configureFileHelper.DefaultFolder);
            recorder.Record((int)configureFileHelper.DefaultLineThickness);
            recorder.Record((string)configureFileHelper.DTTimeInteval);
            recorder.Record((string)configureFileHelper.OPCDTSever1Host);
            recorder.Record((string)configureFileHelper.OPCDTSever1Name);
            recorder.Record((string)configureFileHelper.OPCDTSever2Host);
            recorder.Record((string)configureFileHelper.OPCDTSever2Name);
            recorder.Record((string)configureFileHelper.OPCServerName);
            recorder.Record((string)configureFileHelper.OPCServerRootName);
            recorder.Record((string)configureFileHelper.TimeIntevalMS);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("+K07ug", "/nM5iw")]
        public void TestOPCServerNameSetter01()
        {
            ConfigureFileHelper configureFileHelper = ConfigureFileHelperFactory.CreateConfigureFileHelper02();
            string oPCServerName = string.Empty;
            configureFileHelper.OPCServerName = oPCServerName;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((string)configureFileHelper.AboutMessage);
            recorder.Record((string)configureFileHelper.ConnectionString);
            recorder.Record((string)configureFileHelper.DefaultFolder);
            recorder.Record((int)configureFileHelper.DefaultLineThickness);
            recorder.Record((string)configureFileHelper.DTTimeInteval);
            recorder.Record((string)configureFileHelper.OPCDTSever1Host);
            recorder.Record((string)configureFileHelper.OPCDTSever1Name);
            recorder.Record((string)configureFileHelper.OPCDTSever2Host);
            recorder.Record((string)configureFileHelper.OPCDTSever2Name);
            recorder.Record((string)configureFileHelper.OPCServerName);
            recorder.Record((string)configureFileHelper.OPCServerRootName);
            recorder.Record((string)configureFileHelper.TimeIntevalMS);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/8P5iw", "/uGhAQ")]
        public void TestOPCServerRootNameGetter01()
        {
            ConfigureFileHelper configureFileHelper = ConfigureFileHelperFactory.CreateConfigureFileHelper02();
            string oPCServerRootName = configureFileHelper.OPCServerRootName;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record(oPCServerRootName);
            recorder.Record((string)configureFileHelper.AboutMessage);
            recorder.Record((string)configureFileHelper.ConnectionString);
            recorder.Record((string)configureFileHelper.DefaultFolder);
            recorder.Record((int)configureFileHelper.DefaultLineThickness);
            recorder.Record((string)configureFileHelper.DTTimeInteval);
            recorder.Record((string)configureFileHelper.OPCDTSever1Host);
            recorder.Record((string)configureFileHelper.OPCDTSever1Name);
            recorder.Record((string)configureFileHelper.OPCDTSever2Host);
            recorder.Record((string)configureFileHelper.OPCDTSever2Name);
            recorder.Record((string)configureFileHelper.OPCServerName);
            recorder.Record((string)configureFileHelper.OPCServerRootName);
            recorder.Record((string)configureFileHelper.TimeIntevalMS);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("+6UFsA", "+966nw")]
        public void TestOPCServerRootNameSetter01()
        {
            ConfigureFileHelper configureFileHelper = ConfigureFileHelperFactory.CreateConfigureFileHelper02();
            string oPCServerRootName = string.Empty;
            configureFileHelper.OPCServerRootName = oPCServerRootName;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((string)configureFileHelper.AboutMessage);
            recorder.Record((string)configureFileHelper.ConnectionString);
            recorder.Record((string)configureFileHelper.DefaultFolder);
            recorder.Record((int)configureFileHelper.DefaultLineThickness);
            recorder.Record((string)configureFileHelper.DTTimeInteval);
            recorder.Record((string)configureFileHelper.OPCDTSever1Host);
            recorder.Record((string)configureFileHelper.OPCDTSever1Name);
            recorder.Record((string)configureFileHelper.OPCDTSever2Host);
            recorder.Record((string)configureFileHelper.OPCDTSever2Name);
            recorder.Record((string)configureFileHelper.OPCServerName);
            recorder.Record((string)configureFileHelper.OPCServerRootName);
            recorder.Record((string)configureFileHelper.TimeIntevalMS);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/pPQfA", "/LObNQ")]
        public void TestDefaultFolderGetter01()
        {
            ConfigureFileHelper configureFileHelper = ConfigureFileHelperFactory.CreateConfigureFileHelper01();
            string defaultFolder = configureFileHelper.DefaultFolder;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record(defaultFolder);
            recorder.Record((string)configureFileHelper.AboutMessage);
            recorder.Record((string)configureFileHelper.ConnectionString);
            recorder.Record((string)configureFileHelper.DefaultFolder);
            recorder.Record((int)configureFileHelper.DefaultLineThickness);
            recorder.Record((string)configureFileHelper.DTTimeInteval);
            recorder.Record((string)configureFileHelper.OPCDTSever1Host);
            recorder.Record((string)configureFileHelper.OPCDTSever1Name);
            recorder.Record((string)configureFileHelper.OPCDTSever2Host);
            recorder.Record((string)configureFileHelper.OPCDTSever2Name);
            recorder.Record((string)configureFileHelper.OPCServerName);
            recorder.Record((string)configureFileHelper.OPCServerRootName);
            recorder.Record((string)configureFileHelper.TimeIntevalMS);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("+eK5xg", "/OCm5Q")]
        public void TestDefaultFolderSetter01()
        {
            ConfigureFileHelper configureFileHelper = ConfigureFileHelperFactory.CreateConfigureFileHelper02();
            string defaultFolder = string.Empty;
            configureFileHelper.DefaultFolder = defaultFolder;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((string)configureFileHelper.AboutMessage);
            recorder.Record((string)configureFileHelper.ConnectionString);
            recorder.Record((string)configureFileHelper.DefaultFolder);
            recorder.Record((int)configureFileHelper.DefaultLineThickness);
            recorder.Record((string)configureFileHelper.DTTimeInteval);
            recorder.Record((string)configureFileHelper.OPCDTSever1Host);
            recorder.Record((string)configureFileHelper.OPCDTSever1Name);
            recorder.Record((string)configureFileHelper.OPCDTSever2Host);
            recorder.Record((string)configureFileHelper.OPCDTSever2Name);
            recorder.Record((string)configureFileHelper.OPCServerName);
            recorder.Record((string)configureFileHelper.OPCServerRootName);
            recorder.Record((string)configureFileHelper.TimeIntevalMS);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("+h7aHQ", "/pwMkA")]
        public void TestConnectionStringGetter01()
        {
            ConfigureFileHelper configureFileHelper = ConfigureFileHelperFactory.CreateConfigureFileHelper02();
            string connectionString = configureFileHelper.ConnectionString;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record(connectionString);
            recorder.Record((string)configureFileHelper.AboutMessage);
            recorder.Record((string)configureFileHelper.ConnectionString);
            recorder.Record((string)configureFileHelper.DefaultFolder);
            recorder.Record((int)configureFileHelper.DefaultLineThickness);
            recorder.Record((string)configureFileHelper.DTTimeInteval);
            recorder.Record((string)configureFileHelper.OPCDTSever1Host);
            recorder.Record((string)configureFileHelper.OPCDTSever1Name);
            recorder.Record((string)configureFileHelper.OPCDTSever2Host);
            recorder.Record((string)configureFileHelper.OPCDTSever2Name);
            recorder.Record((string)configureFileHelper.OPCServerName);
            recorder.Record((string)configureFileHelper.OPCServerRootName);
            recorder.Record((string)configureFileHelper.TimeIntevalMS);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("+kQpWQ", "/qOt3w")]
        public void TestConnectionStringSetter01()
        {
            ConfigureFileHelper configureFileHelper = ConfigureFileHelperFactory.CreateConfigureFileHelper02();
            string connectionString = string.Empty;
            configureFileHelper.ConnectionString = connectionString;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((string)configureFileHelper.AboutMessage);
            recorder.Record((string)configureFileHelper.ConnectionString);
            recorder.Record((string)configureFileHelper.DefaultFolder);
            recorder.Record((int)configureFileHelper.DefaultLineThickness);
            recorder.Record((string)configureFileHelper.DTTimeInteval);
            recorder.Record((string)configureFileHelper.OPCDTSever1Host);
            recorder.Record((string)configureFileHelper.OPCDTSever1Name);
            recorder.Record((string)configureFileHelper.OPCDTSever2Host);
            recorder.Record((string)configureFileHelper.OPCDTSever2Name);
            recorder.Record((string)configureFileHelper.OPCServerName);
            recorder.Record((string)configureFileHelper.OPCServerRootName);
            recorder.Record((string)configureFileHelper.TimeIntevalMS);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("+sMoMA", "/zW68A")]
        public void TestDefaultLineThicknessGetter01()
        {
            ConfigureFileHelper configureFileHelper = ConfigureFileHelperFactory.CreateConfigureFileHelper02();
            int defaultLineThickness = configureFileHelper.DefaultLineThickness;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record(defaultLineThickness);
            recorder.Record((string)configureFileHelper.AboutMessage);
            recorder.Record((string)configureFileHelper.ConnectionString);
            recorder.Record((string)configureFileHelper.DefaultFolder);
            recorder.Record((int)configureFileHelper.DefaultLineThickness);
            recorder.Record((string)configureFileHelper.DTTimeInteval);
            recorder.Record((string)configureFileHelper.OPCDTSever1Host);
            recorder.Record((string)configureFileHelper.OPCDTSever1Name);
            recorder.Record((string)configureFileHelper.OPCDTSever2Host);
            recorder.Record((string)configureFileHelper.OPCDTSever2Name);
            recorder.Record((string)configureFileHelper.OPCServerName);
            recorder.Record((string)configureFileHelper.OPCServerRootName);
            recorder.Record((string)configureFileHelper.TimeIntevalMS);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/3BdGw", "+ToZMA")]
        public void TestDefaultLineThicknessSetter01()
        {
            ConfigureFileHelper configureFileHelper = ConfigureFileHelperFactory.CreateConfigureFileHelper02();
            int defaultLineThickness = 1;
            configureFileHelper.DefaultLineThickness = defaultLineThickness;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((string)configureFileHelper.AboutMessage);
            recorder.Record((string)configureFileHelper.ConnectionString);
            recorder.Record((string)configureFileHelper.DefaultFolder);
            recorder.Record((int)configureFileHelper.DefaultLineThickness);
            recorder.Record((string)configureFileHelper.DTTimeInteval);
            recorder.Record((string)configureFileHelper.OPCDTSever1Host);
            recorder.Record((string)configureFileHelper.OPCDTSever1Name);
            recorder.Record((string)configureFileHelper.OPCDTSever2Host);
            recorder.Record((string)configureFileHelper.OPCDTSever2Name);
            recorder.Record((string)configureFileHelper.OPCServerName);
            recorder.Record((string)configureFileHelper.OPCServerRootName);
            recorder.Record((string)configureFileHelper.TimeIntevalMS);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/Wfl4A", "/+inSg")]
        public void TestAboutMessageGetter01()
        {
            ConfigureFileHelper configureFileHelper = ConfigureFileHelperFactory.CreateConfigureFileHelper01();
            string aboutMessage = configureFileHelper.AboutMessage;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record(aboutMessage);
            recorder.Record((string)configureFileHelper.AboutMessage);
            recorder.Record((string)configureFileHelper.ConnectionString);
            recorder.Record((string)configureFileHelper.DefaultFolder);
            recorder.Record((int)configureFileHelper.DefaultLineThickness);
            recorder.Record((string)configureFileHelper.DTTimeInteval);
            recorder.Record((string)configureFileHelper.OPCDTSever1Host);
            recorder.Record((string)configureFileHelper.OPCDTSever1Name);
            recorder.Record((string)configureFileHelper.OPCDTSever2Host);
            recorder.Record((string)configureFileHelper.OPCDTSever2Name);
            recorder.Record((string)configureFileHelper.OPCServerName);
            recorder.Record((string)configureFileHelper.OPCServerRootName);
            recorder.Record((string)configureFileHelper.TimeIntevalMS);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("+7rAnQ", "+8kmSw")]
        public void TestAboutMessageSetter01()
        {
            ConfigureFileHelper configureFileHelper = ConfigureFileHelperFactory.CreateConfigureFileHelper01();
            string aboutMessage = string.Empty;
            configureFileHelper.AboutMessage = aboutMessage;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((string)configureFileHelper.AboutMessage);
            recorder.Record((string)configureFileHelper.ConnectionString);
            recorder.Record((string)configureFileHelper.DefaultFolder);
            recorder.Record((int)configureFileHelper.DefaultLineThickness);
            recorder.Record((string)configureFileHelper.DTTimeInteval);
            recorder.Record((string)configureFileHelper.OPCDTSever1Host);
            recorder.Record((string)configureFileHelper.OPCDTSever1Name);
            recorder.Record((string)configureFileHelper.OPCDTSever2Host);
            recorder.Record((string)configureFileHelper.OPCDTSever2Name);
            recorder.Record((string)configureFileHelper.OPCServerName);
            recorder.Record((string)configureFileHelper.OPCServerRootName);
            recorder.Record((string)configureFileHelper.TimeIntevalMS);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/hisQQ", "+cHSGw")]
        public void TestOPCDTSever1HostGetter01()
        {
            ConfigureFileHelper configureFileHelper = ConfigureFileHelperFactory.CreateConfigureFileHelper01();
            string oPCDTSever1Host = configureFileHelper.OPCDTSever1Host;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record(oPCDTSever1Host);
            recorder.Record((string)configureFileHelper.AboutMessage);
            recorder.Record((string)configureFileHelper.ConnectionString);
            recorder.Record((string)configureFileHelper.DefaultFolder);
            recorder.Record((int)configureFileHelper.DefaultLineThickness);
            recorder.Record((string)configureFileHelper.DTTimeInteval);
            recorder.Record((string)configureFileHelper.OPCDTSever1Host);
            recorder.Record((string)configureFileHelper.OPCDTSever1Name);
            recorder.Record((string)configureFileHelper.OPCDTSever2Host);
            recorder.Record((string)configureFileHelper.OPCDTSever2Name);
            recorder.Record((string)configureFileHelper.OPCServerName);
            recorder.Record((string)configureFileHelper.OPCServerRootName);
            recorder.Record((string)configureFileHelper.TimeIntevalMS);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("+tJbFg", "+qOC/g")]
        public void TestOPCDTSever1HostSetter01()
        {
            ConfigureFileHelper configureFileHelper = ConfigureFileHelperFactory.CreateConfigureFileHelper01();
            string oPCDTSever1Host = string.Empty;
            configureFileHelper.OPCDTSever1Host = oPCDTSever1Host;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((string)configureFileHelper.AboutMessage);
            recorder.Record((string)configureFileHelper.ConnectionString);
            recorder.Record((string)configureFileHelper.DefaultFolder);
            recorder.Record((int)configureFileHelper.DefaultLineThickness);
            recorder.Record((string)configureFileHelper.DTTimeInteval);
            recorder.Record((string)configureFileHelper.OPCDTSever1Host);
            recorder.Record((string)configureFileHelper.OPCDTSever1Name);
            recorder.Record((string)configureFileHelper.OPCDTSever2Host);
            recorder.Record((string)configureFileHelper.OPCDTSever2Name);
            recorder.Record((string)configureFileHelper.OPCServerName);
            recorder.Record((string)configureFileHelper.OPCServerRootName);
            recorder.Record((string)configureFileHelper.TimeIntevalMS);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/41Peg", "+aneqQ")]
        public void TestOPCDTSever1NameGetter01()
        {
            ConfigureFileHelper configureFileHelper = ConfigureFileHelperFactory.CreateConfigureFileHelper02();
            string oPCDTSever1Name = configureFileHelper.OPCDTSever1Name;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record(oPCDTSever1Name);
            recorder.Record((string)configureFileHelper.AboutMessage);
            recorder.Record((string)configureFileHelper.ConnectionString);
            recorder.Record((string)configureFileHelper.DefaultFolder);
            recorder.Record((int)configureFileHelper.DefaultLineThickness);
            recorder.Record((string)configureFileHelper.DTTimeInteval);
            recorder.Record((string)configureFileHelper.OPCDTSever1Host);
            recorder.Record((string)configureFileHelper.OPCDTSever1Name);
            recorder.Record((string)configureFileHelper.OPCDTSever2Host);
            recorder.Record((string)configureFileHelper.OPCDTSever2Name);
            recorder.Record((string)configureFileHelper.OPCServerName);
            recorder.Record((string)configureFileHelper.OPCServerRootName);
            recorder.Record((string)configureFileHelper.TimeIntevalMS);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/iD7rw", "/1EyDQ")]
        public void TestOPCDTSever1NameSetter01()
        {
            ConfigureFileHelper configureFileHelper = ConfigureFileHelperFactory.CreateConfigureFileHelper02();
            string oPCDTSever1Name = string.Empty;
            configureFileHelper.OPCDTSever1Name = oPCDTSever1Name;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((string)configureFileHelper.AboutMessage);
            recorder.Record((string)configureFileHelper.ConnectionString);
            recorder.Record((string)configureFileHelper.DefaultFolder);
            recorder.Record((int)configureFileHelper.DefaultLineThickness);
            recorder.Record((string)configureFileHelper.DTTimeInteval);
            recorder.Record((string)configureFileHelper.OPCDTSever1Host);
            recorder.Record((string)configureFileHelper.OPCDTSever1Name);
            recorder.Record((string)configureFileHelper.OPCDTSever2Host);
            recorder.Record((string)configureFileHelper.OPCDTSever2Name);
            recorder.Record((string)configureFileHelper.OPCServerName);
            recorder.Record((string)configureFileHelper.OPCServerRootName);
            recorder.Record((string)configureFileHelper.TimeIntevalMS);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/FuPqA", "+vhQrA")]
        public void TestOPCDTSever2HostGetter01()
        {
            ConfigureFileHelper configureFileHelper = ConfigureFileHelperFactory.CreateConfigureFileHelper02();
            string oPCDTSever2Host = configureFileHelper.OPCDTSever2Host;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record(oPCDTSever2Host);
            recorder.Record((string)configureFileHelper.AboutMessage);
            recorder.Record((string)configureFileHelper.ConnectionString);
            recorder.Record((string)configureFileHelper.DefaultFolder);
            recorder.Record((int)configureFileHelper.DefaultLineThickness);
            recorder.Record((string)configureFileHelper.DTTimeInteval);
            recorder.Record((string)configureFileHelper.OPCDTSever1Host);
            recorder.Record((string)configureFileHelper.OPCDTSever1Name);
            recorder.Record((string)configureFileHelper.OPCDTSever2Host);
            recorder.Record((string)configureFileHelper.OPCDTSever2Name);
            recorder.Record((string)configureFileHelper.OPCServerName);
            recorder.Record((string)configureFileHelper.OPCServerRootName);
            recorder.Record((string)configureFileHelper.TimeIntevalMS);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("+BNrLg", "+FY5rQ")]
        public void TestOPCDTSever2HostSetter01()
        {
            ConfigureFileHelper configureFileHelper = ConfigureFileHelperFactory.CreateConfigureFileHelper01();
            string oPCDTSever2Host = string.Empty;
            configureFileHelper.OPCDTSever2Host = oPCDTSever2Host;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((string)configureFileHelper.AboutMessage);
            recorder.Record((string)configureFileHelper.ConnectionString);
            recorder.Record((string)configureFileHelper.DefaultFolder);
            recorder.Record((int)configureFileHelper.DefaultLineThickness);
            recorder.Record((string)configureFileHelper.DTTimeInteval);
            recorder.Record((string)configureFileHelper.OPCDTSever1Host);
            recorder.Record((string)configureFileHelper.OPCDTSever1Name);
            recorder.Record((string)configureFileHelper.OPCDTSever2Host);
            recorder.Record((string)configureFileHelper.OPCDTSever2Name);
            recorder.Record((string)configureFileHelper.OPCServerName);
            recorder.Record((string)configureFileHelper.OPCServerRootName);
            recorder.Record((string)configureFileHelper.TimeIntevalMS);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/c5skw", "+pBcHg")]
        public void TestOPCDTSever2NameGetter01()
        {
            ConfigureFileHelper configureFileHelper = ConfigureFileHelperFactory.CreateConfigureFileHelper01();
            string oPCDTSever2Name = configureFileHelper.OPCDTSever2Name;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record(oPCDTSever2Name);
            recorder.Record((string)configureFileHelper.AboutMessage);
            recorder.Record((string)configureFileHelper.ConnectionString);
            recorder.Record((string)configureFileHelper.DefaultFolder);
            recorder.Record((int)configureFileHelper.DefaultLineThickness);
            recorder.Record((string)configureFileHelper.DTTimeInteval);
            recorder.Record((string)configureFileHelper.OPCDTSever1Host);
            recorder.Record((string)configureFileHelper.OPCDTSever1Name);
            recorder.Record((string)configureFileHelper.OPCDTSever2Host);
            recorder.Record((string)configureFileHelper.OPCDTSever2Name);
            recorder.Record((string)configureFileHelper.OPCServerName);
            recorder.Record((string)configureFileHelper.OPCServerRootName);
            recorder.Record((string)configureFileHelper.TimeIntevalMS);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/OHLlw", "/NpXlQ")]
        public void TestOPCDTSever2NameSetter01()
        {
            ConfigureFileHelper configureFileHelper = ConfigureFileHelperFactory.CreateConfigureFileHelper01();
            string oPCDTSever2Name = string.Empty;
            configureFileHelper.OPCDTSever2Name = oPCDTSever2Name;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((string)configureFileHelper.AboutMessage);
            recorder.Record((string)configureFileHelper.ConnectionString);
            recorder.Record((string)configureFileHelper.DefaultFolder);
            recorder.Record((int)configureFileHelper.DefaultLineThickness);
            recorder.Record((string)configureFileHelper.DTTimeInteval);
            recorder.Record((string)configureFileHelper.OPCDTSever1Host);
            recorder.Record((string)configureFileHelper.OPCDTSever1Name);
            recorder.Record((string)configureFileHelper.OPCDTSever2Host);
            recorder.Record((string)configureFileHelper.OPCDTSever2Name);
            recorder.Record((string)configureFileHelper.OPCServerName);
            recorder.Record((string)configureFileHelper.OPCServerRootName);
            recorder.Record((string)configureFileHelper.TimeIntevalMS);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("+YNPJw", "+L2jzA")]
        public void TestDTTimeIntevalGetter01()
        {
            ConfigureFileHelper configureFileHelper = ConfigureFileHelperFactory.CreateConfigureFileHelper02();
            string dTTimeInteval = configureFileHelper.DTTimeInteval;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record(dTTimeInteval);
            recorder.Record((string)configureFileHelper.AboutMessage);
            recorder.Record((string)configureFileHelper.ConnectionString);
            recorder.Record((string)configureFileHelper.DefaultFolder);
            recorder.Record((int)configureFileHelper.DefaultLineThickness);
            recorder.Record((string)configureFileHelper.DTTimeInteval);
            recorder.Record((string)configureFileHelper.OPCDTSever1Host);
            recorder.Record((string)configureFileHelper.OPCDTSever1Name);
            recorder.Record((string)configureFileHelper.OPCDTSever2Host);
            recorder.Record((string)configureFileHelper.OPCDTSever2Name);
            recorder.Record((string)configureFileHelper.OPCServerName);
            recorder.Record((string)configureFileHelper.OPCServerRootName);
            recorder.Record((string)configureFileHelper.TimeIntevalMS);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("//NJgA", "/BkG5Q")]
        public void TestDTTimeIntevalSetter01()
        {
            ConfigureFileHelper configureFileHelper = ConfigureFileHelperFactory.CreateConfigureFileHelper02();
            string dTTimeInteval = string.Empty;
            configureFileHelper.DTTimeInteval = dTTimeInteval;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((string)configureFileHelper.AboutMessage);
            recorder.Record((string)configureFileHelper.ConnectionString);
            recorder.Record((string)configureFileHelper.DefaultFolder);
            recorder.Record((int)configureFileHelper.DefaultLineThickness);
            recorder.Record((string)configureFileHelper.DTTimeInteval);
            recorder.Record((string)configureFileHelper.OPCDTSever1Host);
            recorder.Record((string)configureFileHelper.OPCDTSever1Name);
            recorder.Record((string)configureFileHelper.OPCDTSever2Host);
            recorder.Record((string)configureFileHelper.OPCDTSever2Name);
            recorder.Record((string)configureFileHelper.OPCServerName);
            recorder.Record((string)configureFileHelper.OPCServerRootName);
            recorder.Record((string)configureFileHelper.TimeIntevalMS);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/f46Vg", "/krvxg")]
        public void TestTimeIntevalMSGetter01()
        {
            ConfigureFileHelper configureFileHelper = ConfigureFileHelperFactory.CreateConfigureFileHelper02();
            string timeIntevalMS = configureFileHelper.TimeIntevalMS;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record(timeIntevalMS);
            recorder.Record((string)configureFileHelper.AboutMessage);
            recorder.Record((string)configureFileHelper.ConnectionString);
            recorder.Record((string)configureFileHelper.DefaultFolder);
            recorder.Record((int)configureFileHelper.DefaultLineThickness);
            recorder.Record((string)configureFileHelper.DTTimeInteval);
            recorder.Record((string)configureFileHelper.OPCDTSever1Host);
            recorder.Record((string)configureFileHelper.OPCDTSever1Name);
            recorder.Record((string)configureFileHelper.OPCDTSever2Host);
            recorder.Record((string)configureFileHelper.OPCDTSever2Name);
            recorder.Record((string)configureFileHelper.OPCServerName);
            recorder.Record((string)configureFileHelper.OPCServerRootName);
            recorder.Record((string)configureFileHelper.TimeIntevalMS);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("+Avg4g", "/cI7oA")]
        public void TestTimeIntevalMSSetter01()
        {
            ConfigureFileHelper configureFileHelper = ConfigureFileHelperFactory.CreateConfigureFileHelper01();
            string timeIntevalMS = string.Empty;
            configureFileHelper.TimeIntevalMS = timeIntevalMS;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((string)configureFileHelper.AboutMessage);
            recorder.Record((string)configureFileHelper.ConnectionString);
            recorder.Record((string)configureFileHelper.DefaultFolder);
            recorder.Record((int)configureFileHelper.DefaultLineThickness);
            recorder.Record((string)configureFileHelper.DTTimeInteval);
            recorder.Record((string)configureFileHelper.OPCDTSever1Host);
            recorder.Record((string)configureFileHelper.OPCDTSever1Name);
            recorder.Record((string)configureFileHelper.OPCDTSever2Host);
            recorder.Record((string)configureFileHelper.OPCDTSever2Name);
            recorder.Record((string)configureFileHelper.OPCServerName);
            recorder.Record((string)configureFileHelper.OPCServerRootName);
            recorder.Record((string)configureFileHelper.TimeIntevalMS);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/Ubr5w", "/DLbLA")]
        public void TestConfigureFileHelperConstructor01()
        {
            ConfigureFileHelper configureFileHelper = new ConfigureFileHelper();
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((string)configureFileHelper.AboutMessage);
            recorder.Record((string)configureFileHelper.ConnectionString);
            recorder.Record((string)configureFileHelper.DefaultFolder);
            recorder.Record((int)configureFileHelper.DefaultLineThickness);
            recorder.Record((string)configureFileHelper.DTTimeInteval);
            recorder.Record((string)configureFileHelper.OPCDTSever1Host);
            recorder.Record((string)configureFileHelper.OPCDTSever1Name);
            recorder.Record((string)configureFileHelper.OPCDTSever2Host);
            recorder.Record((string)configureFileHelper.OPCDTSever2Name);
            recorder.Record((string)configureFileHelper.OPCServerName);
            recorder.Record((string)configureFileHelper.OPCServerRootName);
            recorder.Record((string)configureFileHelper.TimeIntevalMS);
            recorder.FinishRecording();
            #endregion
        }

    }
}
