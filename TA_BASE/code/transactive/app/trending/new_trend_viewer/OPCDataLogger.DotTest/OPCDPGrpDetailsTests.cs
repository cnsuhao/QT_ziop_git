using Dottest.Framework;
using Dottest.Framework.RecordState;
using NUnit.Framework;
using OPCDataLogger;
using OPCDataLogger.DotTest.Factories;
using System;

namespace OPCDataLogger.DotTest
{
    [TestFixture()]
    public class OPCDPGrpDetailsTests
    {
        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("+avd5A", "/NiOTg")]
        public void TestDT_PT_NameGetter01()
        {
            OPCDPGrpDetails oPCDPGrpDetails = OPCDPGrpDetailsFactory.CreateOPCDPGrpDetails01();
            string dT_PT_Name = oPCDPGrpDetails.DT_PT_Name;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record(dT_PT_Name);
            recorder.Record((double)oPCDPGrpDetails.Delta);
            recorder.Record((string)oPCDPGrpDetails.DT_PT_Name);
            recorder.Record((double)oPCDPGrpDetails.Interval);
            recorder.Record((string)oPCDPGrpDetails.OldValue);
            recorder.Record((string)oPCDPGrpDetails.Value);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("+IxcQg", "+wkM5A")]
        public void TestDT_PT_NameSetter01()
        {
            OPCDPGrpDetails oPCDPGrpDetails = OPCDPGrpDetailsFactory.CreateOPCDPGrpDetails01();
            string dT_PT_Name = string.Empty;
            oPCDPGrpDetails.DT_PT_Name = dT_PT_Name;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((double)oPCDPGrpDetails.Delta);
            recorder.Record((string)oPCDPGrpDetails.DT_PT_Name);
            recorder.Record((double)oPCDPGrpDetails.Interval);
            recorder.Record((string)oPCDPGrpDetails.OldValue);
            recorder.Record((string)oPCDPGrpDetails.Value);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("+coDnQ", "+PafLg")]
        public void TestValueGetter01()
        {
            OPCDPGrpDetails oPCDPGrpDetails = OPCDPGrpDetailsFactory.CreateOPCDPGrpDetails01();
            string value1 = oPCDPGrpDetails.Value;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record(value1);
            recorder.Record((double)oPCDPGrpDetails.Delta);
            recorder.Record((string)oPCDPGrpDetails.DT_PT_Name);
            recorder.Record((double)oPCDPGrpDetails.Interval);
            recorder.Record((string)oPCDPGrpDetails.OldValue);
            recorder.Record((string)oPCDPGrpDetails.Value);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/s+xrg", "+VLj0g")]
        public void TestValueSetter01()
        {
            OPCDPGrpDetails oPCDPGrpDetails = OPCDPGrpDetailsFactory.CreateOPCDPGrpDetails01();
            string value1 = string.Empty;
            oPCDPGrpDetails.Value = value1;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((double)oPCDPGrpDetails.Delta);
            recorder.Record((string)oPCDPGrpDetails.DT_PT_Name);
            recorder.Record((double)oPCDPGrpDetails.Interval);
            recorder.Record((string)oPCDPGrpDetails.OldValue);
            recorder.Record((string)oPCDPGrpDetails.Value);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/Wzf0A", "+OiIZw")]
        public void TestOldValueGetter01()
        {
            OPCDPGrpDetails oPCDPGrpDetails = OPCDPGrpDetailsFactory.CreateOPCDPGrpDetails01();
            string oldValue = oPCDPGrpDetails.OldValue;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record(oldValue);
            recorder.Record((double)oPCDPGrpDetails.Delta);
            recorder.Record((string)oPCDPGrpDetails.DT_PT_Name);
            recorder.Record((double)oPCDPGrpDetails.Interval);
            recorder.Record((string)oPCDPGrpDetails.OldValue);
            recorder.Record((string)oPCDPGrpDetails.Value);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("+mz/qQ", "/LLZew")]
        public void TestOldValueSetter01()
        {
            OPCDPGrpDetails oPCDPGrpDetails = OPCDPGrpDetailsFactory.CreateOPCDPGrpDetails01();
            string oldValue = string.Empty;
            oPCDPGrpDetails.OldValue = oldValue;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((double)oPCDPGrpDetails.Delta);
            recorder.Record((string)oPCDPGrpDetails.DT_PT_Name);
            recorder.Record((double)oPCDPGrpDetails.Interval);
            recorder.Record((string)oPCDPGrpDetails.OldValue);
            recorder.Record((string)oPCDPGrpDetails.Value);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/T4n/w", "/n3XKg")]
        public void TestIntervalGetter01()
        {
            OPCDPGrpDetails oPCDPGrpDetails = OPCDPGrpDetailsFactory.CreateOPCDPGrpDetails01();
            double interval = oPCDPGrpDetails.Interval;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record(interval);
            recorder.Record((double)oPCDPGrpDetails.Delta);
            recorder.Record((string)oPCDPGrpDetails.DT_PT_Name);
            recorder.Record((double)oPCDPGrpDetails.Interval);
            recorder.Record((string)oPCDPGrpDetails.OldValue);
            recorder.Record((string)oPCDPGrpDetails.Value);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/ZJhiQ", "/rXR0Q")]
        public void TestIntervalSetter01()
        {
            OPCDPGrpDetails oPCDPGrpDetails = OPCDPGrpDetailsFactory.CreateOPCDPGrpDetails01();
            double interval = double.MaxValue;
            oPCDPGrpDetails.Interval = interval;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((double)oPCDPGrpDetails.Delta);
            recorder.Record((string)oPCDPGrpDetails.DT_PT_Name);
            recorder.Record((double)oPCDPGrpDetails.Interval);
            recorder.Record((string)oPCDPGrpDetails.OldValue);
            recorder.Record((string)oPCDPGrpDetails.Value);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("+AJKwA", "/JHGrQ")]
        public void TestDeltaGetter01()
        {
            OPCDPGrpDetails oPCDPGrpDetails = OPCDPGrpDetailsFactory.CreateOPCDPGrpDetails01();
            double delta = oPCDPGrpDetails.Delta;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record(delta);
            recorder.Record((double)oPCDPGrpDetails.Delta);
            recorder.Record((string)oPCDPGrpDetails.DT_PT_Name);
            recorder.Record((double)oPCDPGrpDetails.Interval);
            recorder.Record((string)oPCDPGrpDetails.OldValue);
            recorder.Record((string)oPCDPGrpDetails.Value);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/4J8PA", "/VwRxw")]
        public void TestDeltaSetter01()
        {
            OPCDPGrpDetails oPCDPGrpDetails = OPCDPGrpDetailsFactory.CreateOPCDPGrpDetails01();
            double delta = double.MaxValue;
            oPCDPGrpDetails.Delta = delta;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((double)oPCDPGrpDetails.Delta);
            recorder.Record((string)oPCDPGrpDetails.DT_PT_Name);
            recorder.Record((double)oPCDPGrpDetails.Interval);
            recorder.Record((string)oPCDPGrpDetails.OldValue);
            recorder.Record((string)oPCDPGrpDetails.Value);
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/jcMLQ", "+WojGA")]
        public void TestNextSampleTimeGetter01()
        {
            OPCDPGrpDetails oPCDPGrpDetails = OPCDPGrpDetailsFactory.CreateOPCDPGrpDetails01();
            DateTime? nextSampleTime = oPCDPGrpDetails.NextSampleTime;
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((double)oPCDPGrpDetails.Delta);
            recorder.Record((string)oPCDPGrpDetails.DT_PT_Name);
            recorder.Record((double)oPCDPGrpDetails.Interval);
            recorder.Record((string)oPCDPGrpDetails.OldValue);
            recorder.Record((string)oPCDPGrpDetails.Value);
            recorder.Record<bool>(delegate { return (bool)nextSampleTime.HasValue; });
            recorder.FinishRecording();
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/d5nhA", "+gOu+g")]
        public void TestOPCDPGrpDetailsConstructor01()
        {
            OPCDPGrpDetails oPCDPGrpDetails = new OPCDPGrpDetails();
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((double)oPCDPGrpDetails.Delta);
            recorder.Record((string)oPCDPGrpDetails.DT_PT_Name);
            recorder.Record((double)oPCDPGrpDetails.Interval);
            recorder.Record((string)oPCDPGrpDetails.OldValue);
            recorder.Record((string)oPCDPGrpDetails.Value);
            recorder.FinishRecording();
            #endregion
        }

    }
}
