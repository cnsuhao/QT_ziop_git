using Dottest.Framework;
using NUnit.Framework;
using OPCSampleGrpConfig.Controller;
using OPCSampleGrpConfig.DotTest.Factories.Controller;
using OPCSampleGrpConfig.DotTest.Factories.Model;
using OPCSampleGrpConfig.DotTest.Factories.View;
using STEE.ISCS.MVC;
using Dottest.Framework.RecordState;
using STEE.ISCS.MVC.DotTest.Factories;
using System;
using System.Windows.Forms;

namespace OPCSampleGrpConfig.DotTest.Controller
{
    [TestFixture()]
    public class OPCDataSelectorControllerTests
    {
        OPCDataSelectorController oPCDataSelectorController = null;
        [SetUp]
        public void FixtureSetUp()
        {
            oPCDataSelectorController  = new OPCDataSelectorController();
            IModel model = new OPCSampleGrpConfig.Model.OPCDataSelectorModel();
            OPCSampleGrpConfig.View.OPCDataSelector viewob = OPCDataSelectorFactory.CreateOPCDataSelector01();
            oPCDataSelectorController.Attach(model, viewob);
        }

        [TearDown]
        public void FixtureTearUp()
        {
            OPCDataSelectorController oPCDataSelectorController = null;
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("+xYhqA", "/yUa+A")]
        public void TestOPCDataSelectorControllerConstructor01()
        {
            OPCDataSelectorController oPCDataSelectorController1 = new OPCDataSelectorController();
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/Y6OUw", "/qHY8w")]
        public void TestAttachCallBack01()
        {
            //using (OPCDataSelectorController oPCDataSelectorController = OPCDataSelectorControllerFactory.CreateOPCDataSelectorController01())
            //{
                IModel model = OPCDataSelectorModelFactory.CreateOPCDataSelectorModel01();
                IView view = OPCDataSelectorFactory.CreateOPCDataSelector01();
                oPCDataSelectorController.AttachCallBack(model, view);
            //}
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("+pzqEw", "+fJ/kA")]
        public void TestNotifyObserver01()
        {
            //using (OPCDataSelectorController oPCDataSelectorController = OPCDataSelectorControllerFactory.CreateOPCDataSelectorController01())
            //{
            NotifyObject notifyObj = NotifyObjectFactory.CreateNotifyObject01();
            oPCDataSelectorController.NotifyObserver(notifyObj);
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record<string>(delegate { return (string)notifyObj.Name; });
            recorder.Record<string>(delegate { return (string)notifyObj.Type; });
            recorder.FinishRecording();
            #endregion
            #region Assertions
            Assert.IsNull((string)notifyObj.Name);
            Assert.IsNull((string)notifyObj.Type);
            #endregion
            // }
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/kihIA", "+QxTRg")]
        public void TestGetDataPointList01()
        {
            // using (OPCDataSelectorController oPCDataSelectorController = OPCDataSelectorControllerFactory.CreateOPCDataSelectorController01())
            // {
            string opcServerName = string.Empty;
            string filterString = string.Empty;
            oPCDataSelectorController.GetDataPointList(opcServerName, filterString);
            //  }
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("//+gqw", "+lT5aA")]
        public void TestWriteEventLog01()
        {
            using (OPCDataSelectorController oPCDataSelectorController = OPCDataSelectorControllerFactory.CreateOPCDataSelectorController01())
            {
                string messageContent = "Message testing";
                string moduleName ="Module1";
                Accessor oPCDataSelectorControllerAccessor = ReflectionAccessor.Wrap(oPCDataSelectorController);
                //mkdir logs.
                string pathString = System.IO.Path.Combine((string)oPCDataSelectorControllerAccessor.GetField("CONFIGFOLDER"), "logs");
                System.IO.Directory.CreateDirectory(pathString);
                oPCDataSelectorController.WriteEventLog(messageContent, moduleName);

                //delete created folder
                System.IO.Directory.Delete(pathString,true);
                bool directoryExists = System.IO.Directory.Exists(pathString);



            }
        }


        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestWriteEventLog02()
        {
            //using (OPCDataSelectorController oPCDataSelectorController = OPCDataSelectorControllerFactory.CreateOPCDataSelectorController01())
            //{
                //Exception thrown
                string messageContent = string.Empty;
                string moduleName = string.Empty;
                oPCDataSelectorController.WriteEventLog(messageContent, moduleName);
            //}
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TesttreeOpcItems_AfterSelect01()
        {
            //using (OPCDataSelectorController oPCDataSelectorController = OPCDataSelectorControllerFactory.CreateOPCDataSelectorController01())
            // {
            System.Windows.Forms.TreeView treeSender = new System.Windows.Forms.TreeView();
            //Test Procedure Call
            oPCDataSelectorController.treeOpcItems_AfterSelect(treeSender, null);
            //}
        }


        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TesttreeOpcItems_NodeMouseClick01()
        {
            //using (OPCDataSelectorController oPCDataSelectorController = OPCDataSelectorControllerFactory.CreateOPCDataSelectorController01())
            //{
            //test1 exception case
                System.Windows.Forms.TreeNode node = new System.Windows.Forms.TreeNode("testing");
                node.Name = "TestingName";
                System.Windows.Forms.TreeNodeMouseClickEventArgs treenodeEvent = new System.Windows.Forms.TreeNodeMouseClickEventArgs(node,System.Windows.Forms.MouseButtons.Left,1,10,22);
                //Test Procedure Call
                oPCDataSelectorController.treeOpcItems_NodeMouseClick(null, treenodeEvent);

            //test 2
                node = new System.Windows.Forms.TreeNode("testing");
                node.Name = "TestingName12";
                node.Tag = 1.0;
                treenodeEvent = new System.Windows.Forms.TreeNodeMouseClickEventArgs(node, System.Windows.Forms.MouseButtons.Left, 1, 10, 22);
                //Test Procedure Call
                oPCDataSelectorController.treeOpcItems_NodeMouseClick(null, treenodeEvent);

            //test3
                node = new System.Windows.Forms.TreeNode("testing");
                node.Name = "";                
                treenodeEvent = new System.Windows.Forms.TreeNodeMouseClickEventArgs(node, System.Windows.Forms.MouseButtons.Left, 1, 10, 22);
                //Test Procedure Call
                oPCDataSelectorController.treeOpcItems_NodeMouseClick(null, treenodeEvent);


           // }
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestcancelCmd_Click01()
        {
            //using (OPCDataSelectorController oPCDataSelectorController = OPCDataSelectorControllerFactory.CreateOPCDataSelectorController01())
            //{
                //Test Procedure Call
                oPCDataSelectorController.cancelCmd_Click(null, null);
            //}
        }


        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestokCmd_Click01()
        {
            //using (OPCDataSelectorController oPCDataSelectorController = OPCDataSelectorControllerFactory.CreateOPCDataSelectorController01())
           // {
                Accessor oPCDataSelectorControllerAccessor = ReflectionAccessor.Wrap(oPCDataSelectorController);
                oPCDataSelectorControllerAccessor.SetField("m_localIntervalGrpID","1");
                oPCDataSelectorControllerAccessor.GetFieldAccessor("m_view").SetField("m_selectedDataPointsModified",true);
                System.Windows.Forms.ListBox listSender = new ListBox();
                listSender.Items.Add("datapoint1");
                listSender.Items.Add("datapoint2");
                listSender.Items.Add("datapoint3");
                oPCDataSelectorControllerAccessor.GetFieldAccessor("m_view").SetField("selectDataPointListBox", listSender);


                //Test Procedure Call
                oPCDataSelectorController.okCmd_Click(null, null);
           // }
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestokCmd_Click02()
        {
            //Test ---- exception
            Accessor oPCDataSelectorControllerAccessor = ReflectionAccessor.Wrap(oPCDataSelectorController);
            oPCDataSelectorControllerAccessor.GetFieldAccessor("m_view").SetField("m_selectedDataPointsModified", true);
             oPCDataSelectorControllerAccessor.GetFieldAccessor("m_view").SetField("selectDataPointListBox", null);

            oPCDataSelectorControllerAccessor.SetField("m_localIntervalGrpID", "1");
            //Test Procedure Call
            oPCDataSelectorController.okCmd_Click(null, null);
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestaddToolStripMenuItem_Click01()
        {
            //using (OPCDataSelectorController oPCDataSelectorController = OPCDataSelectorControllerFactory.CreateOPCDataSelectorController01())
            //{
   
                //Test Procedure Call
                oPCDataSelectorController.addToolStripMenuItem_Click(null, null);
            //}
        }


        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestcontextMenuStrip2_Click01()
        {
            //using (OPCDataSelectorController oPCDataSelectorController = OPCDataSelectorControllerFactory.CreateOPCDataSelectorController01())
            //{
                //Test Procedure Call
                oPCDataSelectorController.contextMenuStrip2_Click(null, null);
           // }
        }


        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [ExpectedException("DAO.Trending.Common.DatabaseConnectionException")]
        [TestAuthor("user")]
        [Test]
        public void TestsearchBtn_Click01()
        {
            //using (OPCDataSelectorController oPCDataSelectorController = OPCDataSelectorControllerFactory.CreateOPCDataSelectorController01())
            // {

            //test1 empty m_currentOpcServerName
            //Test Procedure Call
            oPCDataSelectorController.searchBtn_Click(null, null);

            //test2
            Accessor oPCDataSelectorControllerAccessor = ReflectionAccessor.Wrap(oPCDataSelectorController);
            oPCDataSelectorControllerAccessor.SetField("m_currentOpcServerName", "TransActiveDataSource");
            oPCDataSelectorControllerAccessor.GetFieldAccessor("m_view").GetFieldAccessor("searchTextBox").SetProperty("Text", "abc");
            oPCDataSelectorController.searchBtn_Click(null, null);

            // }
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestremoveToolStripMenuItem_Click01()
        {
            //using (OPCDataSelectorController oPCDataSelectorController = OPCDataSelectorControllerFactory.CreateOPCDataSelectorController01())
           // {
              
                //Test Procedure Call
                oPCDataSelectorController.removeToolStripMenuItem_Click(null, null);
           // }
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestOPCDataSelector_Paint01()
        {
           // using (OPCDataSelectorController oPCDataSelectorController = OPCDataSelectorControllerFactory.CreateOPCDataSelectorController01())
          //  {
            System.Drawing.Rectangle clipRect = new System.Drawing.Rectangle();
            Accessor oPCDataSelectorControllerAccessor = ReflectionAccessor.Wrap(oPCDataSelectorController);
            OPCSampleGrpConfig.View.OPCDataSelector mmView = (OPCSampleGrpConfig.View.OPCDataSelector) oPCDataSelectorControllerAccessor.GetField("m_view");

            System.Drawing.Graphics graphics =  mmView.CreateGraphics();
            PaintEventArgs e = new PaintEventArgs(graphics,clipRect);
                //Test Procedure Call
                oPCDataSelectorController.OPCDataSelector_Paint(null, e);
          //  }
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestselectDataPointListBox_DoubleClick01()
        {
           // using (OPCDataSelectorController oPCDataSelectorController = OPCDataSelectorControllerFactory.CreateOPCDataSelectorController01())
           // {
            System.Windows.Forms.ListBox listSender = new ListBox();
            listSender.Items.Add("datapoint1");
            listSender.Items.Add("datapoint2");
            listSender.Items.Add("datapoint3");
            Accessor oPCDataSelectorControllerAccessor = ReflectionAccessor.Wrap(oPCDataSelectorController);
            oPCDataSelectorControllerAccessor.GetFieldAccessor("m_view").SetField("selectDataPointListBox",listSender);
            listSender.SelectedItem = "datapoint2";
            //Test Procedure Call
            oPCDataSelectorController.selectDataPointListBox_DoubleClick(listSender, null);
            //Post Condition Check
            Assert.AreEqual(2, oPCDataSelectorControllerAccessor.GetFieldAccessor("m_view").GetFieldAccessor("selectDataPointListBox").GetPropertyAccessor("Items").GetProperty("Count"));
           // }
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestopcItemDataGridView_CellDoubleClick01()
        {
            //using (OPCDataSelectorController oPCDataSelectorController = OPCDataSelectorControllerFactory.CreateOPCDataSelectorController01())
            // {
            System.Windows.Forms.DataGridViewCellEventArgs e = new System.Windows.Forms.DataGridViewCellEventArgs(0, 0);
            Accessor oPCDataSelectorControllerAccessor = ReflectionAccessor.Wrap(oPCDataSelectorController);
            oPCDataSelectorControllerAccessor.GetFieldAccessor("m_view").Call("InitializeOpcItemDataGridView");
            OPCSampleGrpConfig.Model.OPCDataSelectorModel model = OPCSampleGrpConfig.DotTest.Factories.Model.OPCDataSelectorModelFactory.CreateOPCDataSelectorModel01();
            Accessor controllerAccessor = ReflectionAccessor.Wrap(oPCDataSelectorController);
            controllerAccessor.Call("Attach", model, oPCDataSelectorControllerAccessor.GetFieldAccessor("m_view"));

            System.Windows.Forms.DataGridView gridView = (System.Windows.Forms.DataGridView)oPCDataSelectorControllerAccessor.GetFieldAccessor("m_view").GetField("opcItemDataGridView");
            gridView.Rows.Add();
            System.Windows.Forms.DataGridViewRow row1 = gridView.Rows[0];
            row1.Cells[0].Value = "1";
            row1.Cells[1].Value = "1";

            //Test Procedure Call
            oPCDataSelectorController.opcItemDataGridView_CellDoubleClick(gridView, e);
            // }
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestopcServerIPBox_SelectedIndexChanged01()
        {
            //using (OPCDataSelectorController oPCDataSelectorController = OPCDataSelectorControllerFactory.CreateOPCDataSelectorController01())
            // {
            ComboBox comBoxSender = new ComboBox();
            comBoxSender.Items.Add("ServerName1");
            comBoxSender.Items.Add("ServerName2");
            comBoxSender.SelectedIndex = 0;
            //Test Procedure Call
            oPCDataSelectorController.opcServerIPBox_SelectedIndexChanged(comBoxSender, null);

            //Test2 -----
            comBoxSender.SelectedIndex = 1;
            //Test Procedure Call
            oPCDataSelectorController.opcServerIPBox_SelectedIndexChanged(comBoxSender, null);

            // }
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestCanAddDataPoint01()
        {
            //testing not OCC location with data point configured in OCC
            bool bRes = oPCDataSelectorController.CanAddDataPoint("testingDP");

            Assert.IsFalse(bRes);
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestCanAddDataPoint02()
        {
            //testing not OCC location with data point not configured in OCC
            bool bRes = oPCDataSelectorController.CanAddDataPoint("testingDP");

            Assert.IsTrue(bRes);
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestCanAddDataPoint03()
        {
            //testing current location is OCC
            // sample group belongs to location X and selected data point of station location Y
            bool bRes = oPCDataSelectorController.CanAddDataPoint("testingDP");

            Assert.IsFalse(bRes);
        }

    }
}
