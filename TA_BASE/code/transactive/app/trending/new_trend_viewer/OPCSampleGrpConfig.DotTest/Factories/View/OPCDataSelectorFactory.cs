using Dottest.Framework;
using Dottest.Framework.RecordState;
using NUnit.Framework;
using OPCSampleGrpConfig.View;
using System;
using System.Windows.Forms;
using STEE.ISCS.MVC;

namespace OPCSampleGrpConfig.DotTest.Factories.View
{
    [TestFixture(), ObjectFactoryType()]
    public class OPCDataSelectorFactory
    {
        ///<summary>A caller is responsible for disposing the result</summary>
        [ObjectFactoryMethod]
        [HashCode("+O6HNw", "+0B24w")]
        public static OPCDataSelector CreateOPCDataSelector01()
        {
            OPCDataSelector oPCDataSelector = new OPCDataSelector();
            return oPCDataSelector;
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestCreateOPCDataSelector01()
        {
            using (OPCDataSelector oPCDataSelector = CreateOPCDataSelector01())
            {
                Assert.IsNotNull(oPCDataSelector);
                #region Record State
                ValueRecorder recorder = new ValueRecorder();
                recorder.Record((string)oPCDataSelector.AccessibleDefaultActionDescription);
                recorder.Record((string)oPCDataSelector.AccessibleDescription);
                recorder.Record((string)oPCDataSelector.AccessibleName);
                recorder.Record((AccessibleRole)oPCDataSelector.AccessibleRole);
                recorder.Record((bool)oPCDataSelector.AllowDrop);
                recorder.Record((bool)oPCDataSelector.AllowTransparency);
                recorder.Record((AnchorStyles)oPCDataSelector.Anchor);
                recorder.Record((AutoScaleMode)oPCDataSelector.AutoScaleMode);
                recorder.Record((bool)oPCDataSelector.AutoScroll);
                recorder.Record((bool)oPCDataSelector.AutoSize);
                recorder.Record((AutoSizeMode)oPCDataSelector.AutoSizeMode);
                recorder.Record((AutoValidate)oPCDataSelector.AutoValidate);
                recorder.Record((ImageLayout)oPCDataSelector.BackgroundImageLayout);
                recorder.Record((int)oPCDataSelector.Bottom);
                recorder.Record((bool)oPCDataSelector.CanFocus);
                recorder.Record((bool)oPCDataSelector.CanSelect);
                recorder.Record((bool)oPCDataSelector.Capture);
                recorder.Record((bool)oPCDataSelector.CausesValidation);
                recorder.Record((string)oPCDataSelector.CompanyName);
                recorder.Record((bool)oPCDataSelector.ContainsFocus);
                recorder.Record((bool)oPCDataSelector.ControlBox);
                recorder.Record((bool)oPCDataSelector.Created);
                recorder.Record((DialogResult)oPCDataSelector.DialogResult);
                recorder.Record((bool)oPCDataSelector.Disposing);
                recorder.Record((DockStyle)oPCDataSelector.Dock);
                recorder.Record((bool)oPCDataSelector.Enabled);
                recorder.Record((bool)oPCDataSelector.Focused);
                recorder.Record((FormBorderStyle)oPCDataSelector.FormBorderStyle);
                recorder.Record((bool)oPCDataSelector.HasChildren);
                recorder.Record((int)oPCDataSelector.Height);
                recorder.Record((bool)oPCDataSelector.HelpButton);
                recorder.Record((ImeMode)oPCDataSelector.ImeMode);
                recorder.Record((bool)oPCDataSelector.InvokeRequired);
                recorder.Record((bool)oPCDataSelector.IsAccessible);
                recorder.Record((bool)oPCDataSelector.IsDisposed);
                recorder.Record((bool)oPCDataSelector.IsHandleCreated);
                recorder.Record((bool)oPCDataSelector.IsMdiChild);
                recorder.Record((bool)oPCDataSelector.IsMdiContainer);
                recorder.Record((bool)oPCDataSelector.IsMirrored);
                recorder.Record((bool)oPCDataSelector.IsRestrictedWindow);
                recorder.Record((bool)oPCDataSelector.KeyPreview);
                recorder.Record((int)oPCDataSelector.Left);
                recorder.Record((bool)oPCDataSelector.MaximizeBox);
                recorder.Record((bool)oPCDataSelector.MinimizeBox);
                recorder.Record((bool)oPCDataSelector.Modal);
                recorder.Record((string)oPCDataSelector.Name);
                recorder.Record((double)oPCDataSelector.Opacity);
                recorder.Record((string)oPCDataSelector.ProductName);
                recorder.Record((string)oPCDataSelector.ProductVersion);
                recorder.Record((bool)oPCDataSelector.RecreatingHandle);
                recorder.Record((int)oPCDataSelector.Right);
                recorder.Record((RightToLeft)oPCDataSelector.RightToLeft);
                recorder.Record((bool)oPCDataSelector.RightToLeftLayout);
                recorder.Record((bool)oPCDataSelector.ShowIcon);
                recorder.Record((bool)oPCDataSelector.ShowInTaskbar);
                recorder.Record((SizeGripStyle)oPCDataSelector.SizeGripStyle);
                recorder.Record((FormStartPosition)oPCDataSelector.StartPosition);
                recorder.Record((bool)ReflectionAccessor.Wrap(oPCDataSelector).GetProperty("System.Windows.Forms.Layout.IArrangedElement.ParticipatesInLayout"));
                recorder.Record((int)oPCDataSelector.TabIndex);
                recorder.Record((bool)oPCDataSelector.TabStop);
                recorder.Record((string)oPCDataSelector.Text);
                recorder.Record((int)oPCDataSelector.Top);
                recorder.Record((bool)oPCDataSelector.TopLevel);
                recorder.Record((bool)oPCDataSelector.TopMost);
                recorder.Record((bool)oPCDataSelector.UseWaitCursor);
                recorder.Record((string)oPCDataSelector.ViewID);
                recorder.Record((string)oPCDataSelector.ViewType);
                recorder.Record((bool)oPCDataSelector.Visible);
                recorder.Record((int)oPCDataSelector.Width);
                recorder.Record((FormWindowState)oPCDataSelector.WindowState);
                recorder.FinishRecording();
                #endregion
                #region Assertions
                Assert.IsNull((string)oPCDataSelector.AccessibleDefaultActionDescription);
                Assert.IsFalse((bool)oPCDataSelector.AllowDrop);
                Assert.AreEqual(global::System.Windows.Forms.AutoScaleMode.Font, (AutoScaleMode)oPCDataSelector.AutoScaleMode);
                Assert.AreEqual(global::System.Windows.Forms.AutoValidate.EnablePreventFocusChange, (AutoValidate)oPCDataSelector.AutoValidate);
                Assert.IsFalse((bool)oPCDataSelector.CanFocus);
                Assert.AreEqual("ST Electronics Ltd", (string)oPCDataSelector.CompanyName);
                Assert.IsFalse((bool)oPCDataSelector.Created);
                Assert.IsTrue((bool)oPCDataSelector.Enabled);
                Assert.IsTrue((bool)oPCDataSelector.HasChildren);
                Assert.IsFalse((bool)oPCDataSelector.InvokeRequired);
                Assert.IsFalse((bool)oPCDataSelector.IsHandleCreated);
                Assert.IsFalse((bool)oPCDataSelector.IsRestrictedWindow);
                Assert.IsTrue((bool)oPCDataSelector.MaximizeBox);
                Assert.AreEqual(1.0, (double)oPCDataSelector.Opacity, 1E-7);
                Assert.IsFalse((bool)oPCDataSelector.RecreatingHandle);
                Assert.IsTrue((bool)oPCDataSelector.ShowIcon);
                Assert.AreEqual(global::System.Windows.Forms.FormStartPosition.CenterScreen, (FormStartPosition)oPCDataSelector.StartPosition);
                Assert.AreEqual("Select OPC Data Point", (string)oPCDataSelector.Text);
                Assert.IsFalse((bool)oPCDataSelector.TopMost);
                Assert.IsFalse((bool)oPCDataSelector.Visible);
                #endregion
            }
        }

    }
}
