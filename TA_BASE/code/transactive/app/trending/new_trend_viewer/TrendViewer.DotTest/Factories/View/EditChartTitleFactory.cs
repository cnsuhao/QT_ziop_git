using Dottest.Framework;
using Dottest.Framework.RecordState;
using NUnit.Framework;
using System;
using System.Windows.Forms;
using TrendViewer.View;

namespace TrendViewer.DotTest.Factories.View
{
    [TestFixture(), ObjectFactoryType()]
    public class EditChartTitleFactory
    {
        ///<summary>A caller is responsible for disposing the result</summary>
        [ObjectFactoryMethod]
        [HashCode("/rpfAg", "+BpAGw")]
        public static EditChartTitle CreateEditChartTitle01()
        {
            EditChartTitle editChartTitle = new EditChartTitle();
            return editChartTitle;
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestCreateEditChartTitle01()
        {
            using (EditChartTitle editChartTitle = CreateEditChartTitle01())
            {
                Assert.IsNotNull(editChartTitle);
                #region Record State
                ValueRecorder recorder = new ValueRecorder();
                recorder.Record((string)editChartTitle.AccessibleDefaultActionDescription);
                recorder.Record((string)editChartTitle.AccessibleDescription);
                recorder.Record((string)editChartTitle.AccessibleName);
                recorder.Record((AccessibleRole)editChartTitle.AccessibleRole);
                recorder.Record((bool)editChartTitle.AllowDrop);
                recorder.Record((bool)editChartTitle.AllowTransparency);
                recorder.Record((AnchorStyles)editChartTitle.Anchor);
                recorder.Record((AutoScaleMode)editChartTitle.AutoScaleMode);
                recorder.Record((bool)editChartTitle.AutoScroll);
                recorder.Record((bool)editChartTitle.AutoSize);
                recorder.Record((AutoSizeMode)editChartTitle.AutoSizeMode);
                recorder.Record((AutoValidate)editChartTitle.AutoValidate);
                recorder.Record((ImageLayout)editChartTitle.BackgroundImageLayout);
                recorder.Record((int)editChartTitle.Bottom);
                recorder.Record((bool)editChartTitle.CanFocus);
                recorder.Record((bool)editChartTitle.CanSelect);
                recorder.Record((bool)editChartTitle.Capture);
                recorder.Record((bool)editChartTitle.CausesValidation);
                recorder.Record((string)editChartTitle.CompanyName);
                recorder.Record((bool)editChartTitle.ContainsFocus);
                recorder.Record((bool)editChartTitle.ControlBox);
                recorder.Record((bool)editChartTitle.Created);
                recorder.Record((DialogResult)editChartTitle.DialogResult);
                recorder.Record((bool)editChartTitle.Disposing);
                recorder.Record((DockStyle)editChartTitle.Dock);
                recorder.Record((bool)editChartTitle.Enabled);
                recorder.Record((bool)editChartTitle.Focused);
                recorder.Record((FormBorderStyle)editChartTitle.FormBorderStyle);
                recorder.Record((bool)editChartTitle.HasChildren);
                recorder.Record((int)editChartTitle.Height);
                recorder.Record((bool)editChartTitle.HelpButton);
                recorder.Record((ImeMode)editChartTitle.ImeMode);
                recorder.Record((bool)editChartTitle.InvokeRequired);
                recorder.Record((bool)editChartTitle.IsAccessible);
                recorder.Record((bool)editChartTitle.IsDisposed);
                recorder.Record((bool)editChartTitle.IsHandleCreated);
                recorder.Record((bool)editChartTitle.IsMdiChild);
                recorder.Record((bool)editChartTitle.IsMdiContainer);
                recorder.Record((bool)editChartTitle.IsMirrored);
                recorder.Record((bool)editChartTitle.IsRestrictedWindow);
                recorder.Record((bool)editChartTitle.KeyPreview);
                recorder.Record((int)editChartTitle.Left);
                recorder.Record((bool)editChartTitle.MaximizeBox);
                recorder.Record((bool)editChartTitle.MinimizeBox);
                recorder.Record((bool)editChartTitle.Modal);
                recorder.Record((string)editChartTitle.Name);
                recorder.Record((double)editChartTitle.Opacity);
                recorder.Record((string)editChartTitle.ProductName);
                recorder.Record((string)editChartTitle.ProductVersion);
                recorder.Record((bool)editChartTitle.RecreatingHandle);
                recorder.Record((int)editChartTitle.Right);
                recorder.Record((RightToLeft)editChartTitle.RightToLeft);
                recorder.Record((bool)editChartTitle.RightToLeftLayout);
                recorder.Record((bool)editChartTitle.ShowIcon);
                recorder.Record((bool)editChartTitle.ShowInTaskbar);
                recorder.Record((SizeGripStyle)editChartTitle.SizeGripStyle);
                recorder.Record((FormStartPosition)editChartTitle.StartPosition);
                recorder.Record((bool)ReflectionAccessor.Wrap(editChartTitle).GetProperty("System.Windows.Forms.Layout.IArrangedElement.ParticipatesInLayout"));
                recorder.Record((int)editChartTitle.TabIndex);
                recorder.Record((bool)editChartTitle.TabStop);
                recorder.Record((string)editChartTitle.Text);
                recorder.Record((int)editChartTitle.Top);
                recorder.Record((bool)editChartTitle.TopLevel);
                recorder.Record((bool)editChartTitle.TopMost);
                recorder.Record((bool)editChartTitle.UseWaitCursor);
                recorder.Record((string)editChartTitle.ViewID);
                recorder.Record((string)editChartTitle.ViewType);
                recorder.Record((bool)editChartTitle.Visible);
                recorder.Record((int)editChartTitle.Width);
                recorder.Record((FormWindowState)editChartTitle.WindowState);
                recorder.FinishRecording();
                #endregion
                #region Assertions
                Assert.IsNull((string)editChartTitle.AccessibleDefaultActionDescription);
                Assert.IsFalse((bool)editChartTitle.AllowDrop);
                Assert.AreEqual(global::System.Windows.Forms.AutoScaleMode.Font, (AutoScaleMode)editChartTitle.AutoScaleMode);
                Assert.AreEqual(global::System.Windows.Forms.AutoValidate.EnablePreventFocusChange, (AutoValidate)editChartTitle.AutoValidate);
                Assert.IsFalse((bool)editChartTitle.CanFocus);
                Assert.AreEqual("ST Electronics Ltd", (string)editChartTitle.CompanyName);
                Assert.IsFalse((bool)editChartTitle.Created);
                Assert.IsTrue((bool)editChartTitle.Enabled);
                Assert.IsTrue((bool)editChartTitle.HasChildren);
                Assert.IsFalse((bool)editChartTitle.InvokeRequired);
                Assert.IsFalse((bool)editChartTitle.IsHandleCreated);
                Assert.IsFalse((bool)editChartTitle.IsRestrictedWindow);
                Assert.IsFalse((bool)editChartTitle.MaximizeBox);
                Assert.AreEqual(1.0, (double)editChartTitle.Opacity, 1E-7);
                Assert.IsFalse((bool)editChartTitle.RecreatingHandle);
                Assert.IsTrue((bool)editChartTitle.ShowIcon);
                Assert.AreEqual(global::System.Windows.Forms.FormStartPosition.CenterScreen, (FormStartPosition)editChartTitle.StartPosition);
                Assert.AreEqual("Change Trend Title", (string)editChartTitle.Text);
                Assert.IsFalse((bool)editChartTitle.TopMost);
                Assert.IsFalse((bool)editChartTitle.Visible);
                #endregion
            }
        }

    }
}
