using Dottest.Framework;
using Dottest.Framework.RecordState;
using NUnit.Framework;
using System;
using System.Windows.Forms;
using TrendViewer.View;

namespace TrendViewer.DotTest.Factories.View
{
    [TestFixture(), ObjectFactoryType()]
    public class FormulaGroupFactory
    {
        ///<summary>A caller is responsible for disposing the result</summary>
        [ObjectFactoryMethod]
        [HashCode("/zam+g", "+sOoEg")]
        public static FormulaGroup CreateFormulaGroup01()
        {
            FormulaGroup formulaGroup = new FormulaGroup();
            return formulaGroup;
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestCreateFormulaGroup01()
        {
            using (FormulaGroup formulaGroup = CreateFormulaGroup01())
            {
                Assert.IsNotNull(formulaGroup);
                #region Record State
                ValueRecorder recorder = new ValueRecorder();
                recorder.Record((string)formulaGroup.AccessibleDefaultActionDescription);
                recorder.Record((string)formulaGroup.AccessibleDescription);
                recorder.Record((string)formulaGroup.AccessibleName);
                recorder.Record((AccessibleRole)formulaGroup.AccessibleRole);
                recorder.Record((bool)formulaGroup.AllowDrop);
                recorder.Record((bool)formulaGroup.AllowTransparency);
                recorder.Record((AnchorStyles)formulaGroup.Anchor);
                recorder.Record((AutoScaleMode)formulaGroup.AutoScaleMode);
                recorder.Record((bool)formulaGroup.AutoScroll);
                recorder.Record((bool)formulaGroup.AutoSize);
                recorder.Record((AutoSizeMode)formulaGroup.AutoSizeMode);
                recorder.Record((AutoValidate)formulaGroup.AutoValidate);
                recorder.Record((ImageLayout)formulaGroup.BackgroundImageLayout);
                recorder.Record((int)formulaGroup.Bottom);
                recorder.Record((bool)formulaGroup.CanFocus);
                recorder.Record((bool)formulaGroup.CanSelect);
                recorder.Record((bool)formulaGroup.Capture);
                recorder.Record((bool)formulaGroup.CausesValidation);
                recorder.Record((string)formulaGroup.CompanyName);
                recorder.Record((bool)formulaGroup.ContainsFocus);
                recorder.Record((bool)formulaGroup.ControlBox);
                recorder.Record((bool)formulaGroup.Created);
                recorder.Record((DialogResult)formulaGroup.DialogResult);
                recorder.Record((bool)formulaGroup.Disposing);
                recorder.Record((DockStyle)formulaGroup.Dock);
                recorder.Record((bool)formulaGroup.Enabled);
                recorder.Record((bool)formulaGroup.Focused);
                recorder.Record((FormBorderStyle)formulaGroup.FormBorderStyle);
                recorder.Record((bool)formulaGroup.HasChildren);
                recorder.Record((int)formulaGroup.Height);
                recorder.Record((bool)formulaGroup.HelpButton);
                recorder.Record((ImeMode)formulaGroup.ImeMode);
                recorder.Record((bool)formulaGroup.InvokeRequired);
                recorder.Record((bool)formulaGroup.IsAccessible);
                recorder.Record((bool)formulaGroup.IsDisposed);
                recorder.Record((bool)formulaGroup.IsHandleCreated);
                recorder.Record((bool)formulaGroup.IsMdiChild);
                recorder.Record((bool)formulaGroup.IsMdiContainer);
                recorder.Record((bool)formulaGroup.IsMirrored);
                recorder.Record((bool)formulaGroup.IsRestrictedWindow);
                recorder.Record((bool)formulaGroup.KeyPreview);
                recorder.Record((int)formulaGroup.Left);
                recorder.Record((bool)formulaGroup.MaximizeBox);
                recorder.Record((bool)formulaGroup.MinimizeBox);
                recorder.Record((bool)formulaGroup.Modal);
                recorder.Record((string)formulaGroup.Name);
                recorder.Record((double)formulaGroup.Opacity);
                recorder.Record((string)formulaGroup.ProductName);
                recorder.Record((string)formulaGroup.ProductVersion);
                recorder.Record((bool)formulaGroup.RecreatingHandle);
                recorder.Record((int)formulaGroup.Right);
                recorder.Record((RightToLeft)formulaGroup.RightToLeft);
                recorder.Record((bool)formulaGroup.RightToLeftLayout);
                recorder.Record((bool)formulaGroup.ShowIcon);
                recorder.Record((bool)formulaGroup.ShowInTaskbar);
                recorder.Record((SizeGripStyle)formulaGroup.SizeGripStyle);
                recorder.Record((FormStartPosition)formulaGroup.StartPosition);
                recorder.Record((bool)ReflectionAccessor.Wrap(formulaGroup).GetProperty("System.Windows.Forms.Layout.IArrangedElement.ParticipatesInLayout"));
                recorder.Record((int)formulaGroup.TabIndex);
                recorder.Record((bool)formulaGroup.TabStop);
                recorder.Record((string)formulaGroup.Text);
                recorder.Record((int)formulaGroup.Top);
                recorder.Record((bool)formulaGroup.TopLevel);
                recorder.Record((bool)formulaGroup.TopMost);
                recorder.Record((bool)formulaGroup.UseWaitCursor);
                recorder.Record((string)formulaGroup.ViewID);
                recorder.Record((string)formulaGroup.ViewType);
                recorder.Record((bool)formulaGroup.Visible);
                recorder.Record((int)formulaGroup.Width);
                recorder.Record((FormWindowState)formulaGroup.WindowState);
                recorder.FinishRecording();
                #endregion
                #region Assertions
                Assert.IsNull((string)formulaGroup.AccessibleDefaultActionDescription);
                Assert.IsFalse((bool)formulaGroup.AllowDrop);
                Assert.AreEqual(global::System.Windows.Forms.AutoScaleMode.Font, (AutoScaleMode)formulaGroup.AutoScaleMode);
                Assert.AreEqual(global::System.Windows.Forms.AutoValidate.EnablePreventFocusChange, (AutoValidate)formulaGroup.AutoValidate);
                Assert.IsFalse((bool)formulaGroup.CanFocus);
                Assert.AreEqual("ST Electronics Ltd", (string)formulaGroup.CompanyName);
                Assert.IsFalse((bool)formulaGroup.Created);
                Assert.IsTrue((bool)formulaGroup.Enabled);
                Assert.IsTrue((bool)formulaGroup.HasChildren);
                Assert.IsFalse((bool)formulaGroup.InvokeRequired);
                Assert.IsFalse((bool)formulaGroup.IsHandleCreated);
                Assert.IsFalse((bool)formulaGroup.IsRestrictedWindow);
                Assert.IsFalse((bool)formulaGroup.MaximizeBox);
                Assert.AreEqual(1.0, (double)formulaGroup.Opacity, 1E-7);
                Assert.IsFalse((bool)formulaGroup.RecreatingHandle);
                Assert.IsTrue((bool)formulaGroup.ShowIcon);
                Assert.AreEqual(global::System.Windows.Forms.FormStartPosition.CenterScreen, (FormStartPosition)formulaGroup.StartPosition);
                Assert.AreEqual("Load Formula Configuration", (string)formulaGroup.Text);
                Assert.IsFalse((bool)formulaGroup.TopMost);
                Assert.IsFalse((bool)formulaGroup.Visible);
                #endregion
            }
        }

    }
}
