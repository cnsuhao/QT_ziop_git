using Dottest.Framework;
using Dottest.Framework.RecordState;
using NUnit.Framework;
using System;
using System.Windows.Forms;
using TrendViewer.View;

namespace TrendViewer.DotTest.Factories.View
{
    [TestFixture(), ObjectFactoryType()]
    public class FormulaListFactory
    {
        ///<summary>A caller is responsible for disposing the result</summary>
        [ObjectFactoryMethod]
        [HashCode("+/nmyQ", "/jyAiA")]
        public static FormulaList CreateFormulaList01()
        {
            FormulaList formulaList = new FormulaList();
            return formulaList;
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        public void TestCreateFormulaList01()
        {
            using (FormulaList formulaList = CreateFormulaList01())
            {
                Assert.IsNotNull(formulaList);
                #region Record State
                ValueRecorder recorder = new ValueRecorder();
                recorder.Record((string)formulaList.AccessibleDefaultActionDescription);
                recorder.Record((string)formulaList.AccessibleDescription);
                recorder.Record((string)formulaList.AccessibleName);
                recorder.Record((AccessibleRole)formulaList.AccessibleRole);
                recorder.Record((bool)formulaList.AllowDrop);
                recorder.Record((bool)formulaList.AllowTransparency);
                recorder.Record((AnchorStyles)formulaList.Anchor);
                recorder.Record((AutoScaleMode)formulaList.AutoScaleMode);
                recorder.Record((bool)formulaList.AutoScroll);
                recorder.Record((bool)formulaList.AutoSize);
                recorder.Record((AutoSizeMode)formulaList.AutoSizeMode);
                recorder.Record((AutoValidate)formulaList.AutoValidate);
                recorder.Record((ImageLayout)formulaList.BackgroundImageLayout);
                recorder.Record((int)formulaList.Bottom);
                recorder.Record((bool)formulaList.CanFocus);
                recorder.Record((bool)formulaList.CanSelect);
                recorder.Record((bool)formulaList.Capture);
                recorder.Record((bool)formulaList.CausesValidation);
                recorder.Record((string)formulaList.CompanyName);
                recorder.Record((bool)formulaList.ContainsFocus);
                recorder.Record((bool)formulaList.ControlBox);
                recorder.Record((bool)formulaList.Created);
                recorder.Record((DialogResult)formulaList.DialogResult);
                recorder.Record((bool)formulaList.Disposing);
                recorder.Record((DockStyle)formulaList.Dock);
                recorder.Record((bool)formulaList.Enabled);
                recorder.Record((bool)formulaList.Focused);
                recorder.Record((FormBorderStyle)formulaList.FormBorderStyle);
                recorder.Record((bool)formulaList.HasChildren);
                recorder.Record((int)formulaList.Height);
                recorder.Record((bool)formulaList.HelpButton);
                recorder.Record((ImeMode)formulaList.ImeMode);
                recorder.Record((bool)formulaList.InvokeRequired);
                recorder.Record((bool)formulaList.IsAccessible);
                recorder.Record((bool)formulaList.IsDisposed);
                recorder.Record((bool)formulaList.IsHandleCreated);
                recorder.Record((bool)formulaList.IsMdiChild);
                recorder.Record((bool)formulaList.IsMdiContainer);
                recorder.Record((bool)formulaList.IsMirrored);
                recorder.Record((bool)formulaList.IsRestrictedWindow);
                recorder.Record((bool)formulaList.KeyPreview);
                recorder.Record((int)formulaList.Left);
                recorder.Record((bool)formulaList.MaximizeBox);
                recorder.Record((bool)formulaList.MinimizeBox);
                recorder.Record((bool)formulaList.Modal);
                recorder.Record((string)formulaList.Name);
                recorder.Record((double)formulaList.Opacity);
                recorder.Record((string)formulaList.ProductName);
                recorder.Record((string)formulaList.ProductVersion);
                recorder.Record((bool)formulaList.RecreatingHandle);
                recorder.Record((int)formulaList.Right);
                recorder.Record((RightToLeft)formulaList.RightToLeft);
                recorder.Record((bool)formulaList.RightToLeftLayout);
                recorder.Record((bool)formulaList.ShowIcon);
                recorder.Record((bool)formulaList.ShowInTaskbar);
                recorder.Record((SizeGripStyle)formulaList.SizeGripStyle);
                recorder.Record((FormStartPosition)formulaList.StartPosition);
                recorder.Record((bool)ReflectionAccessor.Wrap(formulaList).GetProperty("System.Windows.Forms.Layout.IArrangedElement.ParticipatesInLayout"));
                recorder.Record((int)formulaList.TabIndex);
                recorder.Record((bool)formulaList.TabStop);
                recorder.Record((string)formulaList.Text);
                recorder.Record((int)formulaList.Top);
                recorder.Record((bool)formulaList.TopLevel);
                recorder.Record((bool)formulaList.TopMost);
                recorder.Record((bool)formulaList.UseWaitCursor);
                recorder.Record((string)formulaList.ViewID);
                recorder.Record((string)formulaList.ViewType);
                recorder.Record((bool)formulaList.Visible);
                recorder.Record((int)formulaList.Width);
                recorder.Record((FormWindowState)formulaList.WindowState);
                recorder.FinishRecording();
                #endregion
                #region Assertions
                Assert.IsNull((string)formulaList.AccessibleDefaultActionDescription);
                Assert.IsFalse((bool)formulaList.AllowDrop);
                Assert.AreEqual(global::System.Windows.Forms.AutoScaleMode.Font, (AutoScaleMode)formulaList.AutoScaleMode);
                Assert.AreEqual(global::System.Windows.Forms.AutoValidate.EnablePreventFocusChange, (AutoValidate)formulaList.AutoValidate);
                Assert.IsFalse((bool)formulaList.CanFocus);
                Assert.AreEqual("ST Electronics Ltd", (string)formulaList.CompanyName);
                Assert.IsFalse((bool)formulaList.Created);
                Assert.IsTrue((bool)formulaList.Enabled);
                Assert.IsTrue((bool)formulaList.HasChildren);
                Assert.IsFalse((bool)formulaList.InvokeRequired);
                Assert.IsFalse((bool)formulaList.IsHandleCreated);
                Assert.IsFalse((bool)formulaList.IsRestrictedWindow);
                Assert.IsFalse((bool)formulaList.MaximizeBox);
                Assert.AreEqual(1.0, (double)formulaList.Opacity, 1E-7);
                Assert.IsFalse((bool)formulaList.RecreatingHandle);
                Assert.IsTrue((bool)formulaList.ShowIcon);
                Assert.AreEqual(global::System.Windows.Forms.FormStartPosition.CenterScreen, (FormStartPosition)formulaList.StartPosition);
                Assert.AreEqual("Datapoint Formula Viewer", (string)formulaList.Text);
                Assert.IsFalse((bool)formulaList.TopMost);
                Assert.IsFalse((bool)formulaList.Visible);
                #endregion
            }
        }

    }
}
