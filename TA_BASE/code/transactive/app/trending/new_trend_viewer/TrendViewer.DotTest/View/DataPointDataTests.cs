using Dottest.Framework;
using Dottest.Framework.RecordState;
using NUnit.Framework;
using System;
using System.Windows.Forms;
using TrendViewer.View;
using STEE.ISCS.MVC;
using TrendViewer.Controller;
using Entity.Trending;

namespace TrendViewer.DotTest.View
{
    [TestFixture()]
    public class DataPointDataTests
    {

        private DataPointData dataPointData;

        [TestFixtureSetUp]
        public void FixtureSetUp()
        {
            dataPointData = new DataPointData();
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/DNgVg", "/rUEEg")]
        public void TestDataPointDataConstructor01()
        {
            DataPointData dataPointData = new DataPointData();
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((string)dataPointData.AccessibleDefaultActionDescription);
            recorder.Record((string)dataPointData.AccessibleDescription);
            recorder.Record((string)dataPointData.AccessibleName);
            recorder.Record((AccessibleRole)dataPointData.AccessibleRole);
            recorder.Record((bool)dataPointData.AllowDrop);
            recorder.Record((bool)dataPointData.AllowTransparency);
            recorder.Record((AnchorStyles)dataPointData.Anchor);
            recorder.Record((AutoScaleMode)dataPointData.AutoScaleMode);
            recorder.Record((bool)dataPointData.AutoScroll);
            recorder.Record((bool)dataPointData.AutoSize);
            recorder.Record((AutoSizeMode)dataPointData.AutoSizeMode);
            recorder.Record((AutoValidate)dataPointData.AutoValidate);
            recorder.Record((ImageLayout)dataPointData.BackgroundImageLayout);
            recorder.Record((int)dataPointData.Bottom);
            recorder.Record((bool)dataPointData.CanFocus);
            recorder.Record((bool)dataPointData.CanSelect);
            recorder.Record((bool)dataPointData.Capture);
            recorder.Record((bool)dataPointData.CausesValidation);
            recorder.Record((string)dataPointData.CompanyName);
            recorder.Record((bool)dataPointData.ContainsFocus);
            recorder.Record((bool)dataPointData.ControlBox);
            recorder.Record((bool)dataPointData.Created);
            recorder.Record((DialogResult)dataPointData.DialogResult);
            recorder.Record((bool)dataPointData.Disposing);
            recorder.Record((DockStyle)dataPointData.Dock);
            recorder.Record((bool)dataPointData.Enabled);
            recorder.Record((bool)dataPointData.Focused);
            recorder.Record((FormBorderStyle)dataPointData.FormBorderStyle);
            recorder.Record((bool)dataPointData.HasChildren);
            recorder.Record((int)dataPointData.Height);
            recorder.Record((bool)dataPointData.HelpButton);
            recorder.Record((ImeMode)dataPointData.ImeMode);
            recorder.Record((bool)dataPointData.InvokeRequired);
            recorder.Record((bool)dataPointData.IsAccessible);
            recorder.Record((bool)dataPointData.IsDisposed);
            recorder.Record((bool)dataPointData.IsHandleCreated);
            recorder.Record((bool)dataPointData.IsMdiChild);
            recorder.Record((bool)dataPointData.IsMdiContainer);
            recorder.Record((bool)dataPointData.IsMirrored);
            recorder.Record((bool)dataPointData.IsRestrictedWindow);
            recorder.Record((bool)dataPointData.KeyPreview);
            recorder.Record((int)dataPointData.Left);
            recorder.Record((bool)dataPointData.MaximizeBox);
            recorder.Record((bool)dataPointData.MinimizeBox);
            recorder.Record((bool)dataPointData.Modal);
            recorder.Record((string)dataPointData.Name);
            recorder.Record((double)dataPointData.Opacity);
            recorder.Record((string)dataPointData.ProductName);
            recorder.Record((string)dataPointData.ProductVersion);
            recorder.Record((bool)dataPointData.RecreatingHandle);
            recorder.Record((int)dataPointData.Right);
            recorder.Record((RightToLeft)dataPointData.RightToLeft);
            recorder.Record((bool)dataPointData.RightToLeftLayout);
            recorder.Record((bool)dataPointData.ShowIcon);
            recorder.Record((bool)dataPointData.ShowInTaskbar);
            recorder.Record((SizeGripStyle)dataPointData.SizeGripStyle);
            recorder.Record((FormStartPosition)dataPointData.StartPosition);
            recorder.Record((bool)ReflectionAccessor.Wrap(dataPointData).GetProperty("System.Windows.Forms.Layout.IArrangedElement.ParticipatesInLayout"));
            recorder.Record((int)dataPointData.TabIndex);
            recorder.Record((bool)dataPointData.TabStop);
            recorder.Record((string)dataPointData.Text);
            recorder.Record((int)dataPointData.Top);
            recorder.Record((bool)dataPointData.TopLevel);
            recorder.Record((bool)dataPointData.TopMost);
            recorder.Record((bool)dataPointData.UseWaitCursor);
            recorder.Record((string)dataPointData.ViewID);
            recorder.Record((string)dataPointData.ViewType);
            recorder.Record((bool)dataPointData.Visible);
            recorder.Record((int)dataPointData.Width);
            recorder.Record((FormWindowState)dataPointData.WindowState);
            recorder.FinishRecording();
            #endregion
            #region Assertions
            Assert.IsNull((string)dataPointData.AccessibleDefaultActionDescription);
            Assert.IsFalse((bool)dataPointData.AllowDrop);
            Assert.AreEqual(global::System.Windows.Forms.AutoScaleMode.Font, (AutoScaleMode)dataPointData.AutoScaleMode);
            Assert.AreEqual(global::System.Windows.Forms.AutoValidate.EnablePreventFocusChange, (AutoValidate)dataPointData.AutoValidate);
            Assert.IsFalse((bool)dataPointData.CanFocus);
            Assert.AreEqual("ST Electronics Ltd", (string)dataPointData.CompanyName);
            Assert.IsFalse((bool)dataPointData.Created);
            Assert.IsTrue((bool)dataPointData.Enabled);
            Assert.IsTrue((bool)dataPointData.HasChildren);
            Assert.IsFalse((bool)dataPointData.InvokeRequired);
            Assert.IsFalse((bool)dataPointData.IsHandleCreated);
            Assert.IsFalse((bool)dataPointData.IsRestrictedWindow);
            Assert.IsFalse((bool)dataPointData.MaximizeBox);
            Assert.AreEqual(1.0, (double)dataPointData.Opacity, 1E-7);
            Assert.IsFalse((bool)dataPointData.RecreatingHandle);
            Assert.IsTrue((bool)dataPointData.ShowIcon);
            Assert.AreEqual(global::System.Windows.Forms.FormStartPosition.CenterParent, (FormStartPosition)dataPointData.StartPosition);
            Assert.AreEqual("Edit Datapoint", (string)dataPointData.Text);
            Assert.IsFalse((bool)dataPointData.TopMost);
            Assert.IsFalse((bool)dataPointData.Visible);
            #endregion
        }

        [Test]
        public void TestDataPoint_Paint()
        {
            Accessor viewAccessor = ReflectionAccessor.Wrap(dataPointData);
            viewAccessor.Call("DataPoint_Paint", null, null);
        }
        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/ih60w", "/R5ppA")]
        public void TestAttachListener01()
        {
            dataPointData.SetFormType(FormType.Add);
            IController controller = new DataPointDataController(); /* TODO: Implement me */ ;
            dataPointData.AttachListener(controller);
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((string)dataPointData.AccessibleDefaultActionDescription);
            recorder.Record((string)dataPointData.AccessibleDescription);
            recorder.Record((string)dataPointData.AccessibleName);
            recorder.Record((AccessibleRole)dataPointData.AccessibleRole);
            recorder.Record((bool)dataPointData.AllowDrop);
            recorder.Record((bool)dataPointData.AllowTransparency);
            recorder.Record((AnchorStyles)dataPointData.Anchor);
            recorder.Record((AutoScaleMode)dataPointData.AutoScaleMode);
            recorder.Record((bool)dataPointData.AutoScroll);
            recorder.Record((bool)dataPointData.AutoSize);
            recorder.Record((AutoSizeMode)dataPointData.AutoSizeMode);
            recorder.Record((AutoValidate)dataPointData.AutoValidate);
            recorder.Record((ImageLayout)dataPointData.BackgroundImageLayout);
            recorder.Record((int)dataPointData.Bottom);
            recorder.Record((bool)dataPointData.CanFocus);
            recorder.Record((bool)dataPointData.CanSelect);
            recorder.Record((bool)dataPointData.Capture);
            recorder.Record((bool)dataPointData.CausesValidation);
            recorder.Record((string)dataPointData.CompanyName);
            recorder.Record((bool)dataPointData.ContainsFocus);
            recorder.Record((bool)dataPointData.ControlBox);
            recorder.Record((bool)dataPointData.Created);
            recorder.Record((DialogResult)dataPointData.DialogResult);
            recorder.Record((bool)dataPointData.Disposing);
            recorder.Record((DockStyle)dataPointData.Dock);
            recorder.Record((bool)dataPointData.Enabled);
            recorder.Record((bool)dataPointData.Focused);
            recorder.Record((FormBorderStyle)dataPointData.FormBorderStyle);
            recorder.Record((bool)dataPointData.HasChildren);
            recorder.Record((int)dataPointData.Height);
            recorder.Record((bool)dataPointData.HelpButton);
            recorder.Record((ImeMode)dataPointData.ImeMode);
            recorder.Record((bool)dataPointData.InvokeRequired);
            recorder.Record((bool)dataPointData.IsAccessible);
            recorder.Record((bool)dataPointData.IsDisposed);
            recorder.Record((bool)dataPointData.IsHandleCreated);
            recorder.Record((bool)dataPointData.IsMdiChild);
            recorder.Record((bool)dataPointData.IsMdiContainer);
            recorder.Record((bool)dataPointData.IsMirrored);
            recorder.Record((bool)dataPointData.IsRestrictedWindow);
            recorder.Record((bool)dataPointData.KeyPreview);
            recorder.Record((int)dataPointData.Left);
            recorder.Record((bool)dataPointData.MaximizeBox);
            recorder.Record((bool)dataPointData.MinimizeBox);
            recorder.Record((bool)dataPointData.Modal);
            recorder.Record((string)dataPointData.Name);
            recorder.Record((double)dataPointData.Opacity);
            recorder.Record((string)dataPointData.ProductName);
            recorder.Record((string)dataPointData.ProductVersion);
            recorder.Record((bool)dataPointData.RecreatingHandle);
            recorder.Record((int)dataPointData.Right);
            recorder.Record((RightToLeft)dataPointData.RightToLeft);
            recorder.Record((bool)dataPointData.RightToLeftLayout);
            recorder.Record((bool)dataPointData.ShowIcon);
            recorder.Record((bool)dataPointData.ShowInTaskbar);
            recorder.Record((SizeGripStyle)dataPointData.SizeGripStyle);
            recorder.Record((FormStartPosition)dataPointData.StartPosition);
            recorder.Record((bool)ReflectionAccessor.Wrap(dataPointData).GetProperty("System.Windows.Forms.Layout.IArrangedElement.ParticipatesInLayout"));
            recorder.Record((int)dataPointData.TabIndex);
            recorder.Record((bool)dataPointData.TabStop);
            recorder.Record((string)dataPointData.Text);
            recorder.Record((int)dataPointData.Top);
            recorder.Record((bool)dataPointData.TopLevel);
            recorder.Record((bool)dataPointData.TopMost);
            recorder.Record((bool)dataPointData.UseWaitCursor);
            recorder.Record((string)dataPointData.ViewID);
            recorder.Record((string)dataPointData.ViewType);
            recorder.Record((bool)dataPointData.Visible);
            recorder.Record((int)dataPointData.Width);
            recorder.Record((FormWindowState)dataPointData.WindowState);
            recorder.FinishRecording();
            #endregion
            #region Assertions
            Assert.IsNull((string)dataPointData.AccessibleDefaultActionDescription);
            Assert.IsFalse((bool)dataPointData.AllowDrop);
            Assert.AreEqual(global::System.Windows.Forms.AutoScaleMode.Font, (AutoScaleMode)dataPointData.AutoScaleMode);
            Assert.AreEqual(global::System.Windows.Forms.AutoValidate.EnablePreventFocusChange, (AutoValidate)dataPointData.AutoValidate);
            Assert.IsFalse((bool)dataPointData.CanFocus);
            Assert.AreEqual("ST Electronics Ltd", (string)dataPointData.CompanyName);
            Assert.IsFalse((bool)dataPointData.Created);
            Assert.IsTrue((bool)dataPointData.Enabled);
            Assert.IsTrue((bool)dataPointData.HasChildren);
            Assert.IsFalse((bool)dataPointData.InvokeRequired);
            Assert.IsFalse((bool)dataPointData.IsHandleCreated);
            Assert.IsFalse((bool)dataPointData.IsRestrictedWindow);
            Assert.IsFalse((bool)dataPointData.MaximizeBox);
            Assert.AreEqual(1.0, (double)dataPointData.Opacity, 1E-7);
            Assert.IsFalse((bool)dataPointData.RecreatingHandle);
            Assert.IsTrue((bool)dataPointData.ShowIcon);
            Assert.AreEqual(global::System.Windows.Forms.FormStartPosition.CenterParent, (FormStartPosition)dataPointData.StartPosition);
            Assert.AreEqual("Edit Datapoint", (string)dataPointData.Text);
            Assert.IsFalse((bool)dataPointData.TopMost);
            Assert.IsFalse((bool)dataPointData.Visible);
            #endregion
        }

        [Test]
        public void TestAttachListener02()
        {
            dataPointData.SetFormType(FormType.Edit);
            IController controller = new DataPointDataController(); /* TODO: Implement me */ ;
            dataPointData.AttachListener(controller);
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((string)dataPointData.AccessibleDefaultActionDescription);
            recorder.Record((string)dataPointData.AccessibleDescription);
            recorder.Record((string)dataPointData.AccessibleName);
            recorder.Record((AccessibleRole)dataPointData.AccessibleRole);
            recorder.Record((bool)dataPointData.AllowDrop);
            recorder.Record((bool)dataPointData.AllowTransparency);
            recorder.Record((AnchorStyles)dataPointData.Anchor);
            recorder.Record((AutoScaleMode)dataPointData.AutoScaleMode);
            recorder.Record((bool)dataPointData.AutoScroll);
            recorder.Record((bool)dataPointData.AutoSize);
            recorder.Record((AutoSizeMode)dataPointData.AutoSizeMode);
            recorder.Record((AutoValidate)dataPointData.AutoValidate);
            recorder.Record((ImageLayout)dataPointData.BackgroundImageLayout);
            recorder.Record((int)dataPointData.Bottom);
            recorder.Record((bool)dataPointData.CanFocus);
            recorder.Record((bool)dataPointData.CanSelect);
            recorder.Record((bool)dataPointData.Capture);
            recorder.Record((bool)dataPointData.CausesValidation);
            recorder.Record((string)dataPointData.CompanyName);
            recorder.Record((bool)dataPointData.ContainsFocus);
            recorder.Record((bool)dataPointData.ControlBox);
            recorder.Record((bool)dataPointData.Created);
            recorder.Record((DialogResult)dataPointData.DialogResult);
            recorder.Record((bool)dataPointData.Disposing);
            recorder.Record((DockStyle)dataPointData.Dock);
            recorder.Record((bool)dataPointData.Enabled);
            recorder.Record((bool)dataPointData.Focused);
            recorder.Record((FormBorderStyle)dataPointData.FormBorderStyle);
            recorder.Record((bool)dataPointData.HasChildren);
            recorder.Record((int)dataPointData.Height);
            recorder.Record((bool)dataPointData.HelpButton);
            recorder.Record((ImeMode)dataPointData.ImeMode);
            recorder.Record((bool)dataPointData.InvokeRequired);
            recorder.Record((bool)dataPointData.IsAccessible);
            recorder.Record((bool)dataPointData.IsDisposed);
            recorder.Record((bool)dataPointData.IsHandleCreated);
            recorder.Record((bool)dataPointData.IsMdiChild);
            recorder.Record((bool)dataPointData.IsMdiContainer);
            recorder.Record((bool)dataPointData.IsMirrored);
            recorder.Record((bool)dataPointData.IsRestrictedWindow);
            recorder.Record((bool)dataPointData.KeyPreview);
            recorder.Record((int)dataPointData.Left);
            recorder.Record((bool)dataPointData.MaximizeBox);
            recorder.Record((bool)dataPointData.MinimizeBox);
            recorder.Record((bool)dataPointData.Modal);
            recorder.Record((string)dataPointData.Name);
            recorder.Record((double)dataPointData.Opacity);
            recorder.Record((string)dataPointData.ProductName);
            recorder.Record((string)dataPointData.ProductVersion);
            recorder.Record((bool)dataPointData.RecreatingHandle);
            recorder.Record((int)dataPointData.Right);
            recorder.Record((RightToLeft)dataPointData.RightToLeft);
            recorder.Record((bool)dataPointData.RightToLeftLayout);
            recorder.Record((bool)dataPointData.ShowIcon);
            recorder.Record((bool)dataPointData.ShowInTaskbar);
            recorder.Record((SizeGripStyle)dataPointData.SizeGripStyle);
            recorder.Record((FormStartPosition)dataPointData.StartPosition);
            recorder.Record((bool)ReflectionAccessor.Wrap(dataPointData).GetProperty("System.Windows.Forms.Layout.IArrangedElement.ParticipatesInLayout"));
            recorder.Record((int)dataPointData.TabIndex);
            recorder.Record((bool)dataPointData.TabStop);
            recorder.Record((string)dataPointData.Text);
            recorder.Record((int)dataPointData.Top);
            recorder.Record((bool)dataPointData.TopLevel);
            recorder.Record((bool)dataPointData.TopMost);
            recorder.Record((bool)dataPointData.UseWaitCursor);
            recorder.Record((string)dataPointData.ViewID);
            recorder.Record((string)dataPointData.ViewType);
            recorder.Record((bool)dataPointData.Visible);
            recorder.Record((int)dataPointData.Width);
            recorder.Record((FormWindowState)dataPointData.WindowState);
            recorder.FinishRecording();
            #endregion
        }
        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("+/Iy8g", "+13k0g")]
        public void TestcolorCmd_Click01()
        {
            object sender = null; /* TODO: Implement me */ ;
            EventArgs e = null;
            Accessor dataPointDataAccessor = ReflectionAccessor.Wrap(dataPointData);
            dataPointDataAccessor.Call("colorCmd_Click", sender, e);

        }

        [Test]
        public void TestcolorCmd_Click02()
        {
            //Exception
            object sender = null; /* TODO: Implement me */ ;
            EventArgs e = null;
            Accessor dataPointDataAccessor = ReflectionAccessor.Wrap(dataPointData);
            dataPointDataAccessor.SetField("colorDialog1", null);
            dataPointDataAccessor.Call("colorCmd_Click", sender, e);

        }

        [Test]
        public void TestSetFormType()
        {
            dataPointData.SetFormType(FormType.Add);
        }

        [Test]
        public void TestTranslateCaption01()
        {
            dataPointData.SetFormType(FormType.Add);
            dataPointData.TranslateCaption();
        }
        [Test]
        public void TestTranslateCaption02()
        {
            dataPointData.SetFormType(FormType.Edit);
            dataPointData.TranslateCaption();
        }

        [Test]
        public void TestGetNewDataPoint()
        {
            dataPointData.GetNewDataPoint();
        }
        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("+NRZTg", "+JyaNA")]
        public void TestGetDataPointName01()
        {
            string str = dataPointData.GetDataPointName();
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record(str);
            recorder.Record((string)dataPointData.AccessibleDefaultActionDescription);
            recorder.Record((string)dataPointData.AccessibleDescription);
            recorder.Record((string)dataPointData.AccessibleName);
            recorder.Record((AccessibleRole)dataPointData.AccessibleRole);
            recorder.Record((bool)dataPointData.AllowDrop);
            recorder.Record((bool)dataPointData.AllowTransparency);
            recorder.Record((AnchorStyles)dataPointData.Anchor);
            recorder.Record((AutoScaleMode)dataPointData.AutoScaleMode);
            recorder.Record((bool)dataPointData.AutoScroll);
            recorder.Record((bool)dataPointData.AutoSize);
            recorder.Record((AutoSizeMode)dataPointData.AutoSizeMode);
            recorder.Record((AutoValidate)dataPointData.AutoValidate);
            recorder.Record((ImageLayout)dataPointData.BackgroundImageLayout);
            recorder.Record((int)dataPointData.Bottom);
            recorder.Record((bool)dataPointData.CanFocus);
            recorder.Record((bool)dataPointData.CanSelect);
            recorder.Record((bool)dataPointData.Capture);
            recorder.Record((bool)dataPointData.CausesValidation);
            recorder.Record((string)dataPointData.CompanyName);
            recorder.Record((bool)dataPointData.ContainsFocus);
            recorder.Record((bool)dataPointData.ControlBox);
            recorder.Record((bool)dataPointData.Created);
            recorder.Record((DialogResult)dataPointData.DialogResult);
            recorder.Record((bool)dataPointData.Disposing);
            recorder.Record((DockStyle)dataPointData.Dock);
            recorder.Record((bool)dataPointData.Enabled);
            recorder.Record((bool)dataPointData.Focused);
            recorder.Record((FormBorderStyle)dataPointData.FormBorderStyle);
            recorder.Record((bool)dataPointData.HasChildren);
            recorder.Record((int)dataPointData.Height);
            recorder.Record((bool)dataPointData.HelpButton);
            recorder.Record((ImeMode)dataPointData.ImeMode);
            recorder.Record((bool)dataPointData.InvokeRequired);
            recorder.Record((bool)dataPointData.IsAccessible);
            recorder.Record((bool)dataPointData.IsDisposed);
            recorder.Record((bool)dataPointData.IsHandleCreated);
            recorder.Record((bool)dataPointData.IsMdiChild);
            recorder.Record((bool)dataPointData.IsMdiContainer);
            recorder.Record((bool)dataPointData.IsMirrored);
            recorder.Record((bool)dataPointData.IsRestrictedWindow);
            recorder.Record((bool)dataPointData.KeyPreview);
            recorder.Record((int)dataPointData.Left);
            recorder.Record((bool)dataPointData.MaximizeBox);
            recorder.Record((bool)dataPointData.MinimizeBox);
            recorder.Record((bool)dataPointData.Modal);
            recorder.Record((string)dataPointData.Name);
            recorder.Record((double)dataPointData.Opacity);
            recorder.Record((string)dataPointData.ProductName);
            recorder.Record((string)dataPointData.ProductVersion);
            recorder.Record((bool)dataPointData.RecreatingHandle);
            recorder.Record((int)dataPointData.Right);
            recorder.Record((RightToLeft)dataPointData.RightToLeft);
            recorder.Record((bool)dataPointData.RightToLeftLayout);
            recorder.Record((bool)dataPointData.ShowIcon);
            recorder.Record((bool)dataPointData.ShowInTaskbar);
            recorder.Record((SizeGripStyle)dataPointData.SizeGripStyle);
            recorder.Record((FormStartPosition)dataPointData.StartPosition);
            recorder.Record((bool)ReflectionAccessor.Wrap(dataPointData).GetProperty("System.Windows.Forms.Layout.IArrangedElement.ParticipatesInLayout"));
            recorder.Record((int)dataPointData.TabIndex);
            recorder.Record((bool)dataPointData.TabStop);
            recorder.Record((string)dataPointData.Text);
            recorder.Record((int)dataPointData.Top);
            recorder.Record((bool)dataPointData.TopLevel);
            recorder.Record((bool)dataPointData.TopMost);
            recorder.Record((bool)dataPointData.UseWaitCursor);
            recorder.Record((string)dataPointData.ViewID);
            recorder.Record((string)dataPointData.ViewType);
            recorder.Record((bool)dataPointData.Visible);
            recorder.Record((int)dataPointData.Width);
            recorder.Record((FormWindowState)dataPointData.WindowState);
            recorder.FinishRecording();
            #endregion
            #region Assertions
            Assert.AreEqual("", str);
            Assert.AreEqual(global::System.Windows.Forms.AccessibleRole.Default, (AccessibleRole)dataPointData.AccessibleRole);
            Assert.AreEqual(global::System.Windows.Forms.AutoScaleMode.Font, (AutoScaleMode)dataPointData.AutoScaleMode);
            Assert.AreEqual(global::System.Windows.Forms.AutoSizeMode.GrowOnly, (AutoSizeMode)dataPointData.AutoSizeMode);
            Assert.IsFalse((bool)dataPointData.CanFocus);
            Assert.IsTrue((bool)dataPointData.CausesValidation);
            Assert.IsFalse((bool)dataPointData.Created);
            Assert.AreEqual(global::System.Windows.Forms.DockStyle.None, (DockStyle)dataPointData.Dock);
            Assert.IsTrue((bool)dataPointData.HasChildren);
            Assert.AreEqual(global::System.Windows.Forms.ImeMode.NoControl, (ImeMode)dataPointData.ImeMode);
            Assert.IsFalse((bool)dataPointData.IsHandleCreated);
            Assert.IsFalse((bool)dataPointData.IsRestrictedWindow);
            Assert.IsFalse((bool)dataPointData.MaximizeBox);
            Assert.AreEqual(1.0, (double)dataPointData.Opacity, 1E-7);
            Assert.IsFalse((bool)dataPointData.RecreatingHandle);
            Assert.IsTrue((bool)dataPointData.ShowIcon);
            Assert.AreEqual(global::System.Windows.Forms.FormStartPosition.CenterParent, (FormStartPosition)dataPointData.StartPosition);
            Assert.AreEqual("Edit Datapoint", (string)dataPointData.Text);
            Assert.IsFalse((bool)dataPointData.TopMost);
            Assert.IsFalse((bool)dataPointData.Visible);
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/ujf2w", "/XVeeQ")]
        public void TestGetDPLblName01()
        {
            string str = dataPointData.GetDPLblName();
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record(str);
            recorder.Record((string)dataPointData.AccessibleDefaultActionDescription);
            recorder.Record((string)dataPointData.AccessibleDescription);
            recorder.Record((string)dataPointData.AccessibleName);
            recorder.Record((AccessibleRole)dataPointData.AccessibleRole);
            recorder.Record((bool)dataPointData.AllowDrop);
            recorder.Record((bool)dataPointData.AllowTransparency);
            recorder.Record((AnchorStyles)dataPointData.Anchor);
            recorder.Record((AutoScaleMode)dataPointData.AutoScaleMode);
            recorder.Record((bool)dataPointData.AutoScroll);
            recorder.Record((bool)dataPointData.AutoSize);
            recorder.Record((AutoSizeMode)dataPointData.AutoSizeMode);
            recorder.Record((AutoValidate)dataPointData.AutoValidate);
            recorder.Record((ImageLayout)dataPointData.BackgroundImageLayout);
            recorder.Record((int)dataPointData.Bottom);
            recorder.Record((bool)dataPointData.CanFocus);
            recorder.Record((bool)dataPointData.CanSelect);
            recorder.Record((bool)dataPointData.Capture);
            recorder.Record((bool)dataPointData.CausesValidation);
            recorder.Record((string)dataPointData.CompanyName);
            recorder.Record((bool)dataPointData.ContainsFocus);
            recorder.Record((bool)dataPointData.ControlBox);
            recorder.Record((bool)dataPointData.Created);
            recorder.Record((DialogResult)dataPointData.DialogResult);
            recorder.Record((bool)dataPointData.Disposing);
            recorder.Record((DockStyle)dataPointData.Dock);
            recorder.Record((bool)dataPointData.Enabled);
            recorder.Record((bool)dataPointData.Focused);
            recorder.Record((FormBorderStyle)dataPointData.FormBorderStyle);
            recorder.Record((bool)dataPointData.HasChildren);
            recorder.Record((int)dataPointData.Height);
            recorder.Record((bool)dataPointData.HelpButton);
            recorder.Record((ImeMode)dataPointData.ImeMode);
            recorder.Record((bool)dataPointData.InvokeRequired);
            recorder.Record((bool)dataPointData.IsAccessible);
            recorder.Record((bool)dataPointData.IsDisposed);
            recorder.Record((bool)dataPointData.IsHandleCreated);
            recorder.Record((bool)dataPointData.IsMdiChild);
            recorder.Record((bool)dataPointData.IsMdiContainer);
            recorder.Record((bool)dataPointData.IsMirrored);
            recorder.Record((bool)dataPointData.IsRestrictedWindow);
            recorder.Record((bool)dataPointData.KeyPreview);
            recorder.Record((int)dataPointData.Left);
            recorder.Record((bool)dataPointData.MaximizeBox);
            recorder.Record((bool)dataPointData.MinimizeBox);
            recorder.Record((bool)dataPointData.Modal);
            recorder.Record((string)dataPointData.Name);
            recorder.Record((double)dataPointData.Opacity);
            recorder.Record((string)dataPointData.ProductName);
            recorder.Record((string)dataPointData.ProductVersion);
            recorder.Record((bool)dataPointData.RecreatingHandle);
            recorder.Record((int)dataPointData.Right);
            recorder.Record((RightToLeft)dataPointData.RightToLeft);
            recorder.Record((bool)dataPointData.RightToLeftLayout);
            recorder.Record((bool)dataPointData.ShowIcon);
            recorder.Record((bool)dataPointData.ShowInTaskbar);
            recorder.Record((SizeGripStyle)dataPointData.SizeGripStyle);
            recorder.Record((FormStartPosition)dataPointData.StartPosition);
            recorder.Record((bool)ReflectionAccessor.Wrap(dataPointData).GetProperty("System.Windows.Forms.Layout.IArrangedElement.ParticipatesInLayout"));
            recorder.Record((int)dataPointData.TabIndex);
            recorder.Record((bool)dataPointData.TabStop);
            recorder.Record((string)dataPointData.Text);
            recorder.Record((int)dataPointData.Top);
            recorder.Record((bool)dataPointData.TopLevel);
            recorder.Record((bool)dataPointData.TopMost);
            recorder.Record((bool)dataPointData.UseWaitCursor);
            recorder.Record((string)dataPointData.ViewID);
            recorder.Record((string)dataPointData.ViewType);
            recorder.Record((bool)dataPointData.Visible);
            recorder.Record((int)dataPointData.Width);
            recorder.Record((FormWindowState)dataPointData.WindowState);
            recorder.FinishRecording();
            #endregion
            #region Assertions
            Assert.AreEqual("", str);
            Assert.AreEqual(global::System.Windows.Forms.AccessibleRole.Default, (AccessibleRole)dataPointData.AccessibleRole);
            Assert.AreEqual(global::System.Windows.Forms.AutoScaleMode.Font, (AutoScaleMode)dataPointData.AutoScaleMode);
            Assert.AreEqual(global::System.Windows.Forms.AutoSizeMode.GrowOnly, (AutoSizeMode)dataPointData.AutoSizeMode);
            Assert.IsFalse((bool)dataPointData.CanFocus);
            Assert.IsTrue((bool)dataPointData.CausesValidation);
            Assert.IsFalse((bool)dataPointData.Created);
            Assert.AreEqual(global::System.Windows.Forms.DockStyle.None, (DockStyle)dataPointData.Dock);
            Assert.IsTrue((bool)dataPointData.HasChildren);
            Assert.AreEqual(global::System.Windows.Forms.ImeMode.NoControl, (ImeMode)dataPointData.ImeMode);
            Assert.IsFalse((bool)dataPointData.IsHandleCreated);
            Assert.IsFalse((bool)dataPointData.IsRestrictedWindow);
            Assert.IsFalse((bool)dataPointData.MaximizeBox);
            Assert.AreEqual(1.0, (double)dataPointData.Opacity, 1E-7);
            Assert.IsFalse((bool)dataPointData.RecreatingHandle);
            Assert.IsTrue((bool)dataPointData.ShowIcon);
            Assert.AreEqual(global::System.Windows.Forms.FormStartPosition.CenterParent, (FormStartPosition)dataPointData.StartPosition);
            Assert.AreEqual("Edit Datapoint", (string)dataPointData.Text);
            Assert.IsFalse((bool)dataPointData.TopMost);
            Assert.IsFalse((bool)dataPointData.Visible);
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/AH9nw", "+vccZw")]
        public void TestUpdateDPNameAndLabel01()
        {
            EtyDataPoint dp = new EtyDataPoint(); /* TODO: Implement me */ ;
            dp.DPName = "name";
            dp.DPLblName = "lblName";
            dataPointData.UpdateDPNameAndLabel(dp);
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((string)dataPointData.AccessibleDefaultActionDescription);
            recorder.Record((string)dataPointData.AccessibleDescription);
            recorder.Record((string)dataPointData.AccessibleName);
            recorder.Record((AccessibleRole)dataPointData.AccessibleRole);
            recorder.Record((bool)dataPointData.AllowDrop);
            recorder.Record((bool)dataPointData.AllowTransparency);
            recorder.Record((AnchorStyles)dataPointData.Anchor);
            recorder.Record((AutoScaleMode)dataPointData.AutoScaleMode);
            recorder.Record((bool)dataPointData.AutoScroll);
            recorder.Record((bool)dataPointData.AutoSize);
            recorder.Record((AutoSizeMode)dataPointData.AutoSizeMode);
            recorder.Record((AutoValidate)dataPointData.AutoValidate);
            recorder.Record((ImageLayout)dataPointData.BackgroundImageLayout);
            recorder.Record((int)dataPointData.Bottom);
            recorder.Record((bool)dataPointData.CanFocus);
            recorder.Record((bool)dataPointData.CanSelect);
            recorder.Record((bool)dataPointData.Capture);
            recorder.Record((bool)dataPointData.CausesValidation);
            recorder.Record((string)dataPointData.CompanyName);
            recorder.Record((bool)dataPointData.ContainsFocus);
            recorder.Record((bool)dataPointData.ControlBox);
            recorder.Record((bool)dataPointData.Created);
            recorder.Record((DialogResult)dataPointData.DialogResult);
            recorder.Record((bool)dataPointData.Disposing);
            recorder.Record((DockStyle)dataPointData.Dock);
            recorder.Record((bool)dataPointData.Enabled);
            recorder.Record((bool)dataPointData.Focused);
            recorder.Record((FormBorderStyle)dataPointData.FormBorderStyle);
            recorder.Record((bool)dataPointData.HasChildren);
            recorder.Record((int)dataPointData.Height);
            recorder.Record((bool)dataPointData.HelpButton);
            recorder.Record((ImeMode)dataPointData.ImeMode);
            recorder.Record((bool)dataPointData.InvokeRequired);
            recorder.Record((bool)dataPointData.IsAccessible);
            recorder.Record((bool)dataPointData.IsDisposed);
            recorder.Record((bool)dataPointData.IsHandleCreated);
            recorder.Record((bool)dataPointData.IsMdiChild);
            recorder.Record((bool)dataPointData.IsMdiContainer);
            recorder.Record((bool)dataPointData.IsMirrored);
            recorder.Record((bool)dataPointData.IsRestrictedWindow);
            recorder.Record((bool)dataPointData.KeyPreview);
            recorder.Record((int)dataPointData.Left);
            recorder.Record((bool)dataPointData.MaximizeBox);
            recorder.Record((bool)dataPointData.MinimizeBox);
            recorder.Record((bool)dataPointData.Modal);
            recorder.Record((string)dataPointData.Name);
            recorder.Record((double)dataPointData.Opacity);
            recorder.Record((string)dataPointData.ProductName);
            recorder.Record((string)dataPointData.ProductVersion);
            recorder.Record((bool)dataPointData.RecreatingHandle);
            recorder.Record((int)dataPointData.Right);
            recorder.Record((RightToLeft)dataPointData.RightToLeft);
            recorder.Record((bool)dataPointData.RightToLeftLayout);
            recorder.Record((bool)dataPointData.ShowIcon);
            recorder.Record((bool)dataPointData.ShowInTaskbar);
            recorder.Record((SizeGripStyle)dataPointData.SizeGripStyle);
            recorder.Record((FormStartPosition)dataPointData.StartPosition);
            recorder.Record((bool)ReflectionAccessor.Wrap(dataPointData).GetProperty("System.Windows.Forms.Layout.IArrangedElement.ParticipatesInLayout"));
            recorder.Record((int)dataPointData.TabIndex);
            recorder.Record((bool)dataPointData.TabStop);
            recorder.Record((string)dataPointData.Text);
            recorder.Record((int)dataPointData.Top);
            recorder.Record((bool)dataPointData.TopLevel);
            recorder.Record((bool)dataPointData.TopMost);
            recorder.Record((bool)dataPointData.UseWaitCursor);
            recorder.Record((string)dataPointData.ViewID);
            recorder.Record((string)dataPointData.ViewType);
            recorder.Record((bool)dataPointData.Visible);
            recorder.Record((int)dataPointData.Width);
            recorder.Record((FormWindowState)dataPointData.WindowState);
            recorder.Record<string>(delegate { return (string)dp.ConfigName; });
            recorder.Record<string>(delegate { return (string)dp.Description; });
            recorder.Record<string>(delegate { return (string)dp.DisplayName; });
            recorder.Record<string>(delegate { return (string)dp.DPColor; });
            recorder.Record<bool>(delegate { return (bool)dp.DPEnabled; });
            recorder.Record<string>(delegate { return (string)dp.DPHost; });
            recorder.Record<bool>(delegate { return (bool)dp.DPLblEnabled; });
            recorder.Record<string>(delegate { return (string)dp.DPLblName; });
            recorder.Record<string>(delegate { return (string)dp.DPName; });
            recorder.Record<string>(delegate { return (string)dp.DPServer; });
            recorder.Record<bool>(delegate { return (bool)dp.DPVisible; });
            recorder.Record<ulong>(delegate { return (ulong)dp.PKey; });
            recorder.FinishRecording();
            #endregion
            #region Assertions
            Assert.IsNull((string)dataPointData.AccessibleDefaultActionDescription);
            Assert.IsFalse((bool)dataPointData.AllowTransparency);
            Assert.IsFalse((bool)dataPointData.AutoSize);
            Assert.AreEqual(303, (int)dataPointData.Bottom);
            Assert.IsTrue((bool)dataPointData.CausesValidation);
            Assert.IsFalse((bool)dataPointData.Created);
            Assert.IsTrue((bool)dataPointData.Enabled);
            Assert.AreEqual(303, (int)dataPointData.Height);
            Assert.IsFalse((bool)dataPointData.IsAccessible);
            Assert.IsFalse((bool)dataPointData.IsMdiContainer);
            Assert.IsFalse((bool)dataPointData.MaximizeBox);
            Assert.AreEqual(1.0, (double)dataPointData.Opacity, 1E-7);
            Assert.AreEqual(717, (int)dataPointData.Right);
            Assert.IsTrue((bool)dataPointData.ShowInTaskbar);
            Assert.AreEqual(0, (int)dataPointData.TabIndex);
            Assert.IsTrue((bool)dataPointData.TopLevel);
            Assert.IsNull((string)dataPointData.ViewType);
            Assert.AreEqual("", (string)dp.ConfigName);
            Assert.IsTrue((bool)dp.DPEnabled);
            Assert.AreEqual("name", (string)dp.DPName);
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/s4tqw", "/s28tw")]
        public void TestDisplay01()
        {
            EtyDataPoint dp = new EtyDataPoint(); /* TODO: Implement me */ ;
            dataPointData.Display(dp);
            dp.DPName = "name";
            dp.DPLblName = "lblName";
            dataPointData.SetFormType(FormType.Edit);

        }

        [Test]
        public void TestDisplay02()
        {
            //ConfigureFileHelper.GetInstance() Exception
            EtyDataPoint dp = new EtyDataPoint(); /* TODO: Implement me */ ;
            dataPointData.Display(dp);
        }

        [Test]
        public void TestDispose()
        {
            Accessor formAccessor = ReflectionAccessor.Wrap(dataPointData);
            bool disposing = true;
            formAccessor.SetField("components", new System.ComponentModel.Container());
            formAccessor.Call("Dispose", disposing);
        }

//         [TestCaseUnverified("Test case not verified")]
//         [TestCaseAutogenerated]
//         [TestAuthor("user")]
//         [Test]
//         [HashCode("/Z+I2w", "+/0CdA")]
//         public void TestDataPoint_Paint01()
//         {
//             object sender = null; /* TODO: Implement me */ ;
//             PaintEventArgs e = new PaintEventArgs(new System.Drawing.Graphics(, new System.Drawing.Rectangle()); /* TODO: Implement me */ ;
//             Accessor dataPointDataAccessor = ReflectionAccessor.Wrap(dataPointData);
//             dataPointDataAccessor.Call("DataPoint_Paint", sender, e);
//             #region Record State
//             ValueRecorder recorder = new ValueRecorder();
//             recorder.Record((string)dataPointData.AccessibleDefaultActionDescription);
//             recorder.Record((string)dataPointData.AccessibleDescription);
//             recorder.Record((string)dataPointData.AccessibleName);
//             recorder.Record((AccessibleRole)dataPointData.AccessibleRole);
//             recorder.Record((bool)dataPointData.AllowDrop);
//             recorder.Record((bool)dataPointData.AllowTransparency);
//             recorder.Record((AnchorStyles)dataPointData.Anchor);
//             recorder.Record((AutoScaleMode)dataPointData.AutoScaleMode);
//             recorder.Record((bool)dataPointData.AutoScroll);
//             recorder.Record((bool)dataPointData.AutoSize);
//             recorder.Record((AutoSizeMode)dataPointData.AutoSizeMode);
//             recorder.Record((AutoValidate)dataPointData.AutoValidate);
//             recorder.Record((ImageLayout)dataPointData.BackgroundImageLayout);
//             recorder.Record((int)dataPointData.Bottom);
//             recorder.Record((bool)dataPointData.CanFocus);
//             recorder.Record((bool)dataPointData.CanSelect);
//             recorder.Record((bool)dataPointData.Capture);
//             recorder.Record((bool)dataPointData.CausesValidation);
//             recorder.Record((string)dataPointData.CompanyName);
//             recorder.Record((bool)dataPointData.ContainsFocus);
//             recorder.Record((bool)dataPointData.ControlBox);
//             recorder.Record((bool)dataPointData.Created);
//             recorder.Record((DialogResult)dataPointData.DialogResult);
//             recorder.Record((bool)dataPointData.Disposing);
//             recorder.Record((DockStyle)dataPointData.Dock);
//             recorder.Record((bool)dataPointData.Enabled);
//             recorder.Record((bool)dataPointData.Focused);
//             recorder.Record((FormBorderStyle)dataPointData.FormBorderStyle);
//             recorder.Record((bool)dataPointData.HasChildren);
//             recorder.Record((int)dataPointData.Height);
//             recorder.Record((bool)dataPointData.HelpButton);
//             recorder.Record((ImeMode)dataPointData.ImeMode);
//             recorder.Record((bool)dataPointData.InvokeRequired);
//             recorder.Record((bool)dataPointData.IsAccessible);
//             recorder.Record((bool)dataPointData.IsDisposed);
//             recorder.Record((bool)dataPointData.IsHandleCreated);
//             recorder.Record((bool)dataPointData.IsMdiChild);
//             recorder.Record((bool)dataPointData.IsMdiContainer);
//             recorder.Record((bool)dataPointData.IsMirrored);
//             recorder.Record((bool)dataPointData.IsRestrictedWindow);
//             recorder.Record((bool)dataPointData.KeyPreview);
//             recorder.Record((int)dataPointData.Left);
//             recorder.Record((bool)dataPointData.MaximizeBox);
//             recorder.Record((bool)dataPointData.MinimizeBox);
//             recorder.Record((bool)dataPointData.Modal);
//             recorder.Record((string)dataPointData.Name);
//             recorder.Record((double)dataPointData.Opacity);
//             recorder.Record((string)dataPointData.ProductName);
//             recorder.Record((string)dataPointData.ProductVersion);
//             recorder.Record((bool)dataPointData.RecreatingHandle);
//             recorder.Record((int)dataPointData.Right);
//             recorder.Record((RightToLeft)dataPointData.RightToLeft);
//             recorder.Record((bool)dataPointData.RightToLeftLayout);
//             recorder.Record((bool)dataPointData.ShowIcon);
//             recorder.Record((bool)dataPointData.ShowInTaskbar);
//             recorder.Record((SizeGripStyle)dataPointData.SizeGripStyle);
//             recorder.Record((FormStartPosition)dataPointData.StartPosition);
//             recorder.Record((bool)dataPointDataAccessor.GetProperty("System.Windows.Forms.Layout.IArrangedElement.ParticipatesInLayout"));
//             recorder.Record((int)dataPointData.TabIndex);
//             recorder.Record((bool)dataPointData.TabStop);
//             recorder.Record((string)dataPointData.Text);
//             recorder.Record((int)dataPointData.Top);
//             recorder.Record((bool)dataPointData.TopLevel);
//             recorder.Record((bool)dataPointData.TopMost);
//             recorder.Record((bool)dataPointData.UseWaitCursor);
//             recorder.Record((string)dataPointData.ViewID);
//             recorder.Record((string)dataPointData.ViewType);
//             recorder.Record((bool)dataPointData.Visible);
//             recorder.Record((int)dataPointData.Width);
//             recorder.Record((FormWindowState)dataPointData.WindowState);
//             recorder.FinishRecording();
//             #endregion
//         }

    }
}
