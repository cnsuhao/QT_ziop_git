using Dottest.Framework;
using Dottest.Framework.RecordState;
using NUnit.Framework;
using System;
using System.Windows.Forms;
using TrendViewer.View;
using TrendViewer.DotTest.Factories.View;
using Entity.Trending;
using TrendViewer.Controller;
using System.Collections.Generic;
using STEE.ISCS.MVC;

namespace TrendViewer.DotTest.View
{
    [TestFixture()]
    public class OPCDataSelectorTests
    {
        private OPCDataSelector oPCDataSelector;

        [TestFixtureSetUp]
        public void FixtureSetUp()
        {
            //oPCDataSelector = new OPCDataSelector
            ViewManager.GetInstance().RegisterViewFactory(new TrendingViewFactory());
            IView view = ViewManager.GetInstance().GetView(TrendViewConst.OPCDataSelector, "test_id");
            OPCDataSelectorController ctl = (OPCDataSelectorController)(view.getController());
            ctl.InitDataNodeList();
            oPCDataSelector = (OPCDataSelector)(view);
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/jm1VA", "+Xsj3w")]
        public void TestOPCDataSelectorConstructor01()
        {
            OPCDataSelector oPCDataSelector = new OPCDataSelector();

        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/O76Hw", "/HuI9w")]
        public void TestTranslateCaption01()
        {
            using (OPCDataSelector oPCDataSelector = OPCDataSelectorFactory.CreateOPCDataSelector01())
            {
                oPCDataSelector.TranslateCaption();
 
            }
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/iFTww", "+ANRBw")]
        public void TestInitializeOpcItemDataGridView01()
        {
            using (OPCDataSelector oPCDataSelector = OPCDataSelectorFactory.CreateOPCDataSelector01())
            {
                Accessor oPCDataSelectorAccessor = ReflectionAccessor.Wrap(oPCDataSelector);
                oPCDataSelectorAccessor.Call("InitializeOpcItemDataGridView");
   
            }
        }

        [Test]
        public void TestInitializeOpcItemDataGridView02()
        {
            //Exception
             using (OPCDataSelector oPCDataSelector = OPCDataSelectorFactory.CreateOPCDataSelector01())
            {
                Accessor oPCDataSelectorAccessor = ReflectionAccessor.Wrap(oPCDataSelector);
                oPCDataSelectorAccessor.Call("InitializeOpcItemDataGridView");
   
            }
        
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("+MQtjA", "+ZcAkQ")]
        public void TestgetSelectedNode01()
        {
            using (OPCDataSelector oPCDataSelector = OPCDataSelectorFactory.CreateOPCDataSelector01())
            {
                TreeNode treeNode = oPCDataSelector.getSelectedNode();

            }
        }


        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/AQi7g", "/MgymA")]
        public void TestDispose01()
        {
            using (OPCDataSelector oPCDataSelector = OPCDataSelectorFactory.CreateOPCDataSelector01())
            {
                bool disposing = true;
                Accessor oPCDataSelectorAccessor = ReflectionAccessor.Wrap(oPCDataSelector);
                oPCDataSelectorAccessor.SetField("components", new System.ComponentModel.Container());
                oPCDataSelectorAccessor.Call("Dispose", disposing);

            }
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/SHnew", "+mBiUQ")]
        public void TestInitializeComponent01()
        {
            using (OPCDataSelector oPCDataSelector = OPCDataSelectorFactory.CreateOPCDataSelector01())
            {
                Accessor oPCDataSelectorAccessor = ReflectionAccessor.Wrap(oPCDataSelector);
                oPCDataSelectorAccessor.Call("InitializeComponent");

            }
        }

        [Test]
        public void TestDisplay_getSelectedNode_LoadDataNodeChildren()
        {
            Dictionary<ulong, EtyEntity> entityMap = new Dictionary<ulong, EtyEntity>();
            EtyEntity e1 = new EtyEntity();
            e1.Name = "test1";
            e1.Pkey = 1;
            EtyEntity e2 = new EtyEntity();
            e2.Name = "test2";
            e2.Pkey = 2;
            entityMap.Add(1, e1);
            entityMap.Add(2, e2);

            oPCDataSelector.Display(entityMap);
            oPCDataSelector.getSelectedNode();
            
            Accessor oPCDataSelectorAccessor = ReflectionAccessor.Wrap(oPCDataSelector);
            System.Windows.Forms.TreeView treeOpcItems = (System.Windows.Forms.TreeView)(oPCDataSelectorAccessor.GetField("treeOpcItems"));
            TreeNode treeNode = treeOpcItems.Nodes[0];
            oPCDataSelector.LoadDataNodeChildren(ref treeNode, entityMap);
        }

        [Test]
        public void TestLoadDataNodeStructure()
        {
            Accessor viewAccessor = ReflectionAccessor.Wrap(oPCDataSelector);
            System.Windows.Forms.DataGridView gridView = (System.Windows.Forms.DataGridView)viewAccessor.GetField("opcItemDataGridView");
            viewAccessor.SetField("opcItemDataGridView",null); 
            //Exception
            
            viewAccessor.Call("LoadDataNodeStructure", null);

            viewAccessor.SetField("opcItemDataGridView", gridView); 
        }
        [Test]
        public void TestOPCDataSelector_Paint()
        {            
            Accessor viewAccessor = ReflectionAccessor.Wrap(oPCDataSelector);
            viewAccessor.Call("OPCDataSelector_Paint", null,null);
        }
        [Test]
        public void TestAttachListener()
        {

            STEE.ISCS.MVC.IController ctl = oPCDataSelector.getController();
            oPCDataSelector.AttachListener(ctl);
        }

        [Test]
        public void TestLoadDataPointToGridView_getDPInGridView()
        {
            Accessor oPCDataSelectorAccessor = ReflectionAccessor.Wrap(oPCDataSelector);
            oPCDataSelectorAccessor.Call("InitializeOpcItemDataGridView");
            Dictionary<ulong, EtyEntity> entityMap = new Dictionary<ulong, EtyEntity>();
            EtyEntity e1 = new EtyEntity();
            e1.Name = "test1";
            e1.Pkey = 1;
            e1.Description = "des1";
            EtyEntity e2 = new EtyEntity();
            e2.Name = "test2";
            e2.Pkey = 2;
            e2.Description = "des2";
            entityMap.Add(1, e1);
            entityMap.Add(2, e2);

           
            oPCDataSelector.LoadDataPointToGridView(entityMap);
            oPCDataSelector.getDPInGridView(0);
        }

    }
}
