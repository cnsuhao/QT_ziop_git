using Dottest.Framework;
using Dottest.Framework.RecordState;
using NUnit.Framework;
using System;
using System.Windows.Forms;
using TrendViewer.View;

namespace TrendViewer.DotTest.View
{
    [TestFixture()]
    public class AboutTests
    {

        private  About about;

        [TestFixtureSetUp]
        public void FixtureSetUp()
        {
            about = new About();
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/vH1kg", "+4brMg")]
        public void TestAboutConstructor01()
        {
            About about = new About();
            about = new About("abc");
        }



        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("+HlcFQ", "/2MlbQ")]
        public void TestAboutConstructor02()
        {
            string aboutMsg = string.Empty;

        }



        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("+jSvHQ", "/3RTNw")]
        public void TestPutObject01()
        {
            string objectName = string.Empty;
            object obj = "testStrObj"; /* TODO: Implement me */ ;
            about.PutObject(objectName, obj);
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((string)about.AccessibleDefaultActionDescription);
            recorder.Record((string)about.AccessibleDescription);
            recorder.Record((string)about.AccessibleName);
            recorder.Record((AccessibleRole)about.AccessibleRole);
            recorder.Record((bool)about.AllowDrop);
            recorder.Record((bool)about.AllowTransparency);
            recorder.Record((AnchorStyles)about.Anchor);
            recorder.Record((AutoScaleMode)about.AutoScaleMode);
            recorder.Record((bool)about.AutoScroll);
            recorder.Record((bool)about.AutoSize);
            recorder.Record((AutoSizeMode)about.AutoSizeMode);
            recorder.Record((AutoValidate)about.AutoValidate);
            recorder.Record((ImageLayout)about.BackgroundImageLayout);
            recorder.Record((int)about.Bottom);
            recorder.Record((bool)about.CanFocus);
            recorder.Record((bool)about.CanSelect);
            recorder.Record((bool)about.Capture);
            recorder.Record((bool)about.CausesValidation);
            recorder.Record((string)about.CompanyName);
            recorder.Record((bool)about.ContainsFocus);
            recorder.Record((bool)about.ControlBox);
            recorder.Record((bool)about.Created);
            recorder.Record((DialogResult)about.DialogResult);
            recorder.Record((bool)about.Disposing);
            recorder.Record((DockStyle)about.Dock);
            recorder.Record((bool)about.Enabled);
            recorder.Record((bool)about.Focused);
            recorder.Record((FormBorderStyle)about.FormBorderStyle);
            recorder.Record((bool)about.HasChildren);
            recorder.Record((int)about.Height);
            recorder.Record((bool)about.HelpButton);
            recorder.Record((ImeMode)about.ImeMode);
            recorder.Record((bool)about.InvokeRequired);
            recorder.Record((bool)about.IsAccessible);
            recorder.Record((bool)about.IsDisposed);
            recorder.Record((bool)about.IsHandleCreated);
            recorder.Record((bool)about.IsMdiChild);
            recorder.Record((bool)about.IsMdiContainer);
            recorder.Record((bool)about.IsMirrored);
            recorder.Record((bool)about.IsRestrictedWindow);
            recorder.Record((bool)about.KeyPreview);
            recorder.Record((int)about.Left);
            recorder.Record((bool)about.MaximizeBox);
            recorder.Record((bool)about.MinimizeBox);
            recorder.Record((bool)about.Modal);
            recorder.Record((string)about.Name);
            recorder.Record((double)about.Opacity);
            recorder.Record((string)about.ProductName);
            recorder.Record((string)about.ProductVersion);
            recorder.Record((bool)about.RecreatingHandle);
            recorder.Record((int)about.Right);
            recorder.Record((RightToLeft)about.RightToLeft);
            recorder.Record((bool)about.RightToLeftLayout);
            recorder.Record((bool)about.ShowIcon);
            recorder.Record((bool)about.ShowInTaskbar);
            recorder.Record((SizeGripStyle)about.SizeGripStyle);
            recorder.Record((FormStartPosition)about.StartPosition);
            recorder.Record((bool)ReflectionAccessor.Wrap(about).GetProperty("System.Windows.Forms.Layout.IArrangedElement.ParticipatesInLayout"));
            recorder.Record((int)about.TabIndex);
            recorder.Record((bool)about.TabStop);
            recorder.Record((string)about.Text);
            recorder.Record((int)about.Top);
            recorder.Record((bool)about.TopLevel);
            recorder.Record((bool)about.TopMost);
            recorder.Record((bool)about.UseWaitCursor);
            recorder.Record((string)about.ViewID);
            recorder.Record((string)about.ViewType);
            recorder.Record((bool)about.Visible);
            recorder.Record((int)about.Width);
            recorder.Record((FormWindowState)about.WindowState);
            recorder.FinishRecording();
            #endregion
            #region Assertions
            Assert.IsNull((string)about.AccessibleDefaultActionDescription);
            Assert.IsFalse((bool)about.AllowDrop);
            Assert.AreEqual(global::System.Windows.Forms.AutoScaleMode.Font, (AutoScaleMode)about.AutoScaleMode);
            Assert.AreEqual(global::System.Windows.Forms.AutoValidate.EnablePreventFocusChange, (AutoValidate)about.AutoValidate);
            Assert.IsFalse((bool)about.CanFocus);
            Assert.AreEqual("ST Electronics Ltd", (string)about.CompanyName);
            Assert.IsFalse((bool)about.Created);
            Assert.IsTrue((bool)about.Enabled);
            Assert.IsTrue((bool)about.HasChildren);
            Assert.IsFalse((bool)about.InvokeRequired);
            Assert.IsFalse((bool)about.IsHandleCreated);
            Assert.IsFalse((bool)about.IsRestrictedWindow);
            Assert.IsFalse((bool)about.MaximizeBox);
            Assert.AreEqual(1.0, (double)about.Opacity, 1E-7);
            Assert.IsFalse((bool)about.RecreatingHandle);
            Assert.IsTrue((bool)about.ShowIcon);
            Assert.AreEqual(global::System.Windows.Forms.FormStartPosition.CenterParent, (FormStartPosition)about.StartPosition);
            Assert.AreEqual("About Trend Viewer", (string)about.Text);
            Assert.IsFalse((bool)about.TopMost);
            Assert.IsFalse((bool)about.Visible);
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/5Wt8g", "+71NUg")]
        public void TestTranslateCaption01()
        {
            about.TranslateCaption();
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((string)about.AccessibleDefaultActionDescription);
            recorder.Record((string)about.AccessibleDescription);
            recorder.Record((string)about.AccessibleName);
            recorder.Record((AccessibleRole)about.AccessibleRole);
            recorder.Record((bool)about.AllowDrop);
            recorder.Record((bool)about.AllowTransparency);
            recorder.Record((AnchorStyles)about.Anchor);
            recorder.Record((AutoScaleMode)about.AutoScaleMode);
            recorder.Record((bool)about.AutoScroll);
            recorder.Record((bool)about.AutoSize);
            recorder.Record((AutoSizeMode)about.AutoSizeMode);
            recorder.Record((AutoValidate)about.AutoValidate);
            recorder.Record((ImageLayout)about.BackgroundImageLayout);
            recorder.Record((int)about.Bottom);
            recorder.Record((bool)about.CanFocus);
            recorder.Record((bool)about.CanSelect);
            recorder.Record((bool)about.Capture);
            recorder.Record((bool)about.CausesValidation);
            recorder.Record((string)about.CompanyName);
            recorder.Record((bool)about.ContainsFocus);
            recorder.Record((bool)about.ControlBox);
            recorder.Record((bool)about.Created);
            recorder.Record((DialogResult)about.DialogResult);
            recorder.Record((bool)about.Disposing);
            recorder.Record((DockStyle)about.Dock);
            recorder.Record((bool)about.Enabled);
            recorder.Record((bool)about.Focused);
            recorder.Record((FormBorderStyle)about.FormBorderStyle);
            recorder.Record((bool)about.HasChildren);
            recorder.Record((int)about.Height);
            recorder.Record((bool)about.HelpButton);
            recorder.Record((ImeMode)about.ImeMode);
            recorder.Record((bool)about.InvokeRequired);
            recorder.Record((bool)about.IsAccessible);
            recorder.Record((bool)about.IsDisposed);
            recorder.Record((bool)about.IsHandleCreated);
            recorder.Record((bool)about.IsMdiChild);
            recorder.Record((bool)about.IsMdiContainer);
            recorder.Record((bool)about.IsMirrored);
            recorder.Record((bool)about.IsRestrictedWindow);
            recorder.Record((bool)about.KeyPreview);
            recorder.Record((int)about.Left);
            recorder.Record((bool)about.MaximizeBox);
            recorder.Record((bool)about.MinimizeBox);
            recorder.Record((bool)about.Modal);
            recorder.Record((string)about.Name);
            recorder.Record((double)about.Opacity);
            recorder.Record((string)about.ProductName);
            recorder.Record((string)about.ProductVersion);
            recorder.Record((bool)about.RecreatingHandle);
            recorder.Record((int)about.Right);
            recorder.Record((RightToLeft)about.RightToLeft);
            recorder.Record((bool)about.RightToLeftLayout);
            recorder.Record((bool)about.ShowIcon);
            recorder.Record((bool)about.ShowInTaskbar);
            recorder.Record((SizeGripStyle)about.SizeGripStyle);
            recorder.Record((FormStartPosition)about.StartPosition);
            recorder.Record((bool)ReflectionAccessor.Wrap(about).GetProperty("System.Windows.Forms.Layout.IArrangedElement.ParticipatesInLayout"));
            recorder.Record((int)about.TabIndex);
            recorder.Record((bool)about.TabStop);
            recorder.Record((string)about.Text);
            recorder.Record((int)about.Top);
            recorder.Record((bool)about.TopLevel);
            recorder.Record((bool)about.TopMost);
            recorder.Record((bool)about.UseWaitCursor);
            recorder.Record((string)about.ViewID);
            recorder.Record((string)about.ViewType);
            recorder.Record((bool)about.Visible);
            recorder.Record((int)about.Width);
            recorder.Record((FormWindowState)about.WindowState);
            recorder.FinishRecording();
            #endregion
            #region Assertions
            Assert.IsNull((string)about.AccessibleDefaultActionDescription);
            Assert.IsFalse((bool)about.AllowDrop);
            Assert.AreEqual(global::System.Windows.Forms.AutoScaleMode.Font, (AutoScaleMode)about.AutoScaleMode);
            Assert.AreEqual(global::System.Windows.Forms.AutoValidate.EnablePreventFocusChange, (AutoValidate)about.AutoValidate);
            Assert.IsFalse((bool)about.CanFocus);
            Assert.AreEqual("ST Electronics Ltd", (string)about.CompanyName);
            Assert.IsFalse((bool)about.Created);
            Assert.IsTrue((bool)about.Enabled);
            Assert.IsTrue((bool)about.HasChildren);
            Assert.IsFalse((bool)about.InvokeRequired);
            Assert.IsFalse((bool)about.IsHandleCreated);
            Assert.IsFalse((bool)about.IsRestrictedWindow);
            Assert.IsFalse((bool)about.MaximizeBox);
            Assert.AreEqual(1.0, (double)about.Opacity, 1E-7);
            Assert.IsFalse((bool)about.RecreatingHandle);
            Assert.IsTrue((bool)about.ShowIcon);
            Assert.AreEqual(global::System.Windows.Forms.FormStartPosition.CenterParent, (FormStartPosition)about.StartPosition);
            Assert.AreEqual("About", (string)about.Text);
            Assert.IsFalse((bool)about.TopMost);
            Assert.IsFalse((bool)about.Visible);
            #endregion
        }

        [TestCaseUnverified("Test case not verified")]
        [TestCaseAutogenerated]
        [TestAuthor("user")]
        [Test]
        [HashCode("/sDF/g", "+M0+CQ")]
        public void TestAbout_Load01()
        {
            object sender = null;
            EventArgs e = null;
            Accessor aboutAccessor = ReflectionAccessor.Wrap(about);
            aboutAccessor.Call("About_Load", sender, e);
            #region Record State
            ValueRecorder recorder = new ValueRecorder();
            recorder.Record((string)about.AccessibleDefaultActionDescription);
            recorder.Record((string)about.AccessibleDescription);
            recorder.Record((string)about.AccessibleName);
            recorder.Record((AccessibleRole)about.AccessibleRole);
            recorder.Record((bool)about.AllowDrop);
            recorder.Record((bool)about.AllowTransparency);
            recorder.Record((AnchorStyles)about.Anchor);
            recorder.Record((AutoScaleMode)about.AutoScaleMode);
            recorder.Record((bool)about.AutoScroll);
            recorder.Record((bool)about.AutoSize);
            recorder.Record((AutoSizeMode)about.AutoSizeMode);
            recorder.Record((AutoValidate)about.AutoValidate);
            recorder.Record((ImageLayout)about.BackgroundImageLayout);
            recorder.Record((int)about.Bottom);
            recorder.Record((bool)about.CanFocus);
            recorder.Record((bool)about.CanSelect);
            recorder.Record((bool)about.Capture);
            recorder.Record((bool)about.CausesValidation);
            recorder.Record((string)about.CompanyName);
            recorder.Record((bool)about.ContainsFocus);
            recorder.Record((bool)about.ControlBox);
            recorder.Record((bool)about.Created);
            recorder.Record((DialogResult)about.DialogResult);
            recorder.Record((bool)about.Disposing);
            recorder.Record((DockStyle)about.Dock);
            recorder.Record((bool)about.Enabled);
            recorder.Record((bool)about.Focused);
            recorder.Record((FormBorderStyle)about.FormBorderStyle);
            recorder.Record((bool)about.HasChildren);
            recorder.Record((int)about.Height);
            recorder.Record((bool)about.HelpButton);
            recorder.Record((ImeMode)about.ImeMode);
            recorder.Record((bool)about.InvokeRequired);
            recorder.Record((bool)about.IsAccessible);
            recorder.Record((bool)about.IsDisposed);
            recorder.Record((bool)about.IsHandleCreated);
            recorder.Record((bool)about.IsMdiChild);
            recorder.Record((bool)about.IsMdiContainer);
            recorder.Record((bool)about.IsMirrored);
            recorder.Record((bool)about.IsRestrictedWindow);
            recorder.Record((bool)about.KeyPreview);
            recorder.Record((int)about.Left);
            recorder.Record((bool)about.MaximizeBox);
            recorder.Record((bool)about.MinimizeBox);
            recorder.Record((bool)about.Modal);
            recorder.Record((string)about.Name);
            recorder.Record((double)about.Opacity);
            recorder.Record((string)about.ProductName);
            recorder.Record((string)about.ProductVersion);
            recorder.Record((bool)about.RecreatingHandle);
            recorder.Record((int)about.Right);
            recorder.Record((RightToLeft)about.RightToLeft);
            recorder.Record((bool)about.RightToLeftLayout);
            recorder.Record((bool)about.ShowIcon);
            recorder.Record((bool)about.ShowInTaskbar);
            recorder.Record((SizeGripStyle)about.SizeGripStyle);
            recorder.Record((FormStartPosition)about.StartPosition);
            recorder.Record((bool)aboutAccessor.GetProperty("System.Windows.Forms.Layout.IArrangedElement.ParticipatesInLayout"));
            recorder.Record((int)about.TabIndex);
            recorder.Record((bool)about.TabStop);
            recorder.Record((string)about.Text);
            recorder.Record((int)about.Top);
            recorder.Record((bool)about.TopLevel);
            recorder.Record((bool)about.TopMost);
            recorder.Record((bool)about.UseWaitCursor);
            recorder.Record((string)about.ViewID);
            recorder.Record((string)about.ViewType);
            recorder.Record((bool)about.Visible);
            recorder.Record((int)about.Width);
            recorder.Record((FormWindowState)about.WindowState);
            recorder.FinishRecording();
            #endregion
            #region Assertions
            Assert.IsNull((string)about.AccessibleDefaultActionDescription);
            Assert.IsFalse((bool)about.AllowDrop);
            Assert.AreEqual(global::System.Windows.Forms.AutoScaleMode.Font, (AutoScaleMode)about.AutoScaleMode);
            Assert.AreEqual(global::System.Windows.Forms.AutoValidate.EnablePreventFocusChange, (AutoValidate)about.AutoValidate);
            Assert.IsFalse((bool)about.CanFocus);
            Assert.AreEqual("ST Electronics Ltd", (string)about.CompanyName);
            Assert.IsFalse((bool)about.Created);
            Assert.IsTrue((bool)about.Enabled);
            Assert.IsTrue((bool)about.HasChildren);
            Assert.IsFalse((bool)about.InvokeRequired);
            Assert.IsFalse((bool)about.IsHandleCreated);
            Assert.IsFalse((bool)about.IsRestrictedWindow);
            Assert.IsFalse((bool)about.MaximizeBox);
            Assert.AreEqual(1.0, (double)about.Opacity, 1E-7);
            Assert.IsFalse((bool)about.RecreatingHandle);
            Assert.IsTrue((bool)about.ShowIcon);
            Assert.AreEqual(global::System.Windows.Forms.FormStartPosition.CenterParent, (FormStartPosition)about.StartPosition);
            Assert.AreEqual("About", (string)about.Text);
            Assert.IsFalse((bool)about.TopMost);
            Assert.IsFalse((bool)about.Visible);
            #endregion
        }

        [Test]
        public void TestDispose()
        {
            About about = new About();
            Accessor aboutAccessor = ReflectionAccessor.Wrap(about);
            bool disposing = true;
            aboutAccessor.SetField("components", new System.ComponentModel.Container());
            aboutAccessor.Call("Dispose", disposing);
        }
    }
}
