using Dottest.Framework;
using NUnit.Framework;
using TrendViewer.View;

namespace TrendViewer.DotTest.View
{
    [TestFixture()]
    public class TrendingViewFactoryTests
    {
//         [TestCaseUnverified("Test case not verified")]
//         [TestCaseAutogenerated]
//         [TestAuthor("user")]
//         [Test]
//         [HashCode("/ZCVgA", "+Bol9Q")]
//         public void TestTrendingViewFactoryConstructor01()
//         {
//             TrendingViewFactory trendingViewFactory = new TrendingViewFactory();
//         }

        [Test]
        public void TestCreateView01()
        {
            TrendingViewFactory trendingViewFactory = new TrendingViewFactory();
            string id = TestConst.TEST_VIEW_ID;
            string type = TrendViewConst.About;
            trendingViewFactory.CreateView(type, id);

            type = TrendViewConst.TrendView;
            trendingViewFactory.CreateView(type, id);
        }

        [Test]
        public void TestCreateView02()
        {
            TrendingViewFactory trendingViewFactory = new TrendingViewFactory();
            string id = TestConst.TEST_VIEW_ID;
            string type = TrendViewConst.MarkerList;
            trendingViewFactory.CreateView(type, id);
            type = TrendViewConst.LoadConfigMarker;
            trendingViewFactory.CreateView(type, id);

            type = TrendViewConst.SaveConfigMarker;
            trendingViewFactory.CreateView(type, id);

            type = TrendViewConst.AddMarkerData;
            trendingViewFactory.CreateView(type, id);

        }

        [Test]
        public void TestCreateView03()
        {
            TrendingViewFactory trendingViewFactory = new TrendingViewFactory();
            string id = TestConst.TEST_VIEW_ID;
            string type = TrendViewConst.EditMarkerData;
            trendingViewFactory.CreateView(type, id);

            type = TrendViewConst.FormulaList;
            trendingViewFactory.CreateView(type, id);

            type = TrendViewConst.LoadConfigFormula;
            trendingViewFactory.CreateView(type, id);

            type = TrendViewConst.SaveConfigFormula;
            trendingViewFactory.CreateView(type, id);
        }

        [Test]
        public void TestCreateView04()
        {
            TrendingViewFactory trendingViewFactory = new TrendingViewFactory();
            string id = TestConst.TEST_VIEW_ID;
            string type = TrendViewConst.AddFormulaData;
            trendingViewFactory.CreateView(type, id);

            type = TrendViewConst.EditFormulaData;
            trendingViewFactory.CreateView(type, id);

            type = TrendViewConst.DataPointList;
            trendingViewFactory.CreateView(type, id);

            type = TrendViewConst.LoadConfigDataPoint;
            trendingViewFactory.CreateView(type, id);
        }

        [Test]
        public void TestCreateView05()
        {
            TrendingViewFactory trendingViewFactory = new TrendingViewFactory();
            string id = TestConst.TEST_VIEW_ID;
            string type = TrendViewConst.SaveConfigDataPoint;
            trendingViewFactory.CreateView(type, id);

            type = TrendViewConst.AddDataPointData;
            trendingViewFactory.CreateView(type, id);

            type = TrendViewConst.EditDataPointData;
            trendingViewFactory.CreateView(type, id);

            type = TrendViewConst.HistDataPointList;
            trendingViewFactory.CreateView(type, id);

            type = TrendViewConst.LoadConfigHistDataPoint;
            trendingViewFactory.CreateView(type, id);
        }

        [Test]
        public void TestCreateView06()
        {
            TrendingViewFactory trendingViewFactory = new TrendingViewFactory();
            string id = TestConst.TEST_VIEW_ID;
            string type = TrendViewConst.AddHistDataPointData;
            trendingViewFactory.CreateView(type, id);

            type = TrendViewConst.EditHistDataPointData;
            trendingViewFactory.CreateView(type, id);

            type = TrendViewConst.OPCDataSelector;
            trendingViewFactory.CreateView(type, id);

            type = TrendViewConst.ChangeTrendTitle;
            trendingViewFactory.CreateView(type, id);
        }

        [Test]
        public void TestCreateView07()
        {
            TrendingViewFactory trendingViewFactory = new TrendingViewFactory();
            string type = "";
            string id = TestConst.TEST_VIEW_ID;
            try
            {
                trendingViewFactory.CreateView(type, id);
            }
            catch (System.Exception ex)
            {

            }
        }

    }
}
